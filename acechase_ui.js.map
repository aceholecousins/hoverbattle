{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/adapters/physics/p2/p2shape.ts","webpack:///./src/adapters/physics/p2/p2rigidbody.ts","webpack:///./src/adapters/physics/p2/p2circle.ts","webpack:///./src/adapters/physics/p2/p2physics.ts","webpack:///./src/adapters/graphics/threegraphics/threeasset.ts","webpack:///./src/domain/graphics/graphicsobject.ts","webpack:///./src/domain/graphics/camera.ts","webpack:///./src/adapters/graphics/threegraphics/threegraphicsobject.ts","webpack:///./src/adapters/graphics/threegraphics/threemodelasset.ts","webpack:///./src/domain/graphics/model.ts","webpack:///./src/adapters/graphics/threegraphics/threemodel.ts","webpack:///./src/adapters/graphics/threegraphics/threecamera.ts","webpack:///./src/checklist.ts","webpack:///./src/adapters/controller/keyboard.ts","webpack:///./src/domain/physics/circle.ts","webpack:///./src/domain/physics/shape.ts","webpack:///./src/domain/physics/rigidbody.ts","webpack:///./src/utilities/math_utils.ts","webpack:///./src/ui_main.ts","webpack:///./src/adapters/graphics/threegraphics/threegraphics.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","p2shapeFactory","factories","kind","factory","this","config","Error","p2world","toBeDeleted","p2body","p2","mass","assign","shapeCfg","shapes","shape","createShape","addShape","p2shape","addBody","updateMassProperties","copy","position","clone","v","velocity","damping","phi","angle","omega","angularVelocity","angularDamping","force","localPointOfApplication","fromValues","applyForce","applyForceLocal","impulse","applyImpulse","applyImpulseLocal","torque","angularForce","angularMomentum","invInertia","removeBody","register","updateBoundingRadius","body","aabbNeedsUpdate","super","radius","updateP2","boundingRadius","gravity","dt","step","threeAssetFactory","onLoaded","onError","graphicsObjectDefaults","orientation","scaling","cameraDefaults","nearClip","farClip","verticalAngleOfViewInDeg","ThreeGraphicsObject","threeObject","set","q","quaternion","scale","threeScene","remove","threeObjectFactory","scene","gltfLoader","model","that","load","file","gltf","e","modelDefaults","color","g","b","asset","add","filledConfig","nc","near","updateProjectionMatrix","fc","far","aov","fov","userData","activeCamera","ChecklistItem","onCheck","note","check","Keys","offset","offsetAngle","Keyboard","shooting","currentStrategy","RelativeStrategy","document","addEventListener","event","onKeyAction","getAbsoluteDirection","getTurnRate","getThrust","callback","repeat","onGeneralKeyAction","code","keyCode","SHOOT","SWITCH_MODE","switchStrategy","console","log","AbsoluteStrategy","turnRate","thrust","valueLeft","valueRight","UP","LEFT","RIGHT","absoluteDirection","undefined","valueUp","valueDown","DOWN","thrustX","thrustY","Math","atan2","wrapAngle","wrapAt","PI","revs","floor","graphics","canvas","renderer","defaultCam","OrbitControls","domElement","screenSpacePanning","resize","setSize","clientWidth","clientHeight","cam","aspect","createAsset","createObject","time","render","getElementById","physics","bodyCfg","modelCfg","controller","addRigidBody","addObject","applyLocalForce","applyAngularMomentum","direction","turnToDirection","fromEuler","wrappedAngle","directionDiff","abs","sign","loadGlider","onItemCheck","onComplete","items","Set","numTotalItems","checklist","thisItem","delete","size","clear","gliderBodyCfg","gliderModelCfg","gliderAsset","gliders","glider","random","requestAnimationFrame","animate","update","newItem","loadAsset"],"mappings":"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","file":"acechase_ui.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([71,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {Shape, ShapeConfig} from \"domain/physics/shape\"\nimport * as p2 from \"p2\"\nimport { vec2 } from \"gl-matrix\"\nimport {Kind, Registry} from \"utils\"\n\nexport abstract class P2Shape<K extends Kind> implements Shape<K>{\n\tkind: K\n\t\n\tabstract p2shape: p2.Shape\n\t\n\tupdateP2(){\n\t\tthis.p2shape.updateBoundingRadius()\n\t\tif(this.p2shape.body !== null){ // when called before the shape was added to the body\n\t\t\tthis.p2shape.body.aabbNeedsUpdate = true\n\t\t\tthis.p2shape.body.updateBoundingRadius()\n\t\t}\n\t}\n\n\tset offset(p: vec2){\n\t\tvec2.copy(this.p2shape.position, p)\n\t}\n\tget offset(){\n\t\treturn vec2.clone(this.p2shape.position)\n\t}\n\n\tset offsetAngle(phi: number){\n\t\tthis.p2shape.angle = phi\n\t}\n\tget offsetAngle(){\n\t\treturn this.p2shape.angle\n\t}\n\n\tabstract boundingRadius: number\n}\n\n\n// factory for distinct shape types\n// where shape modules can register their individual factories\ntype P2ShapeConstructor<K extends Kind> = new(config: ShapeConfig<K>) => P2Shape<K>\n\nclass P2ShapeFactory{\n\n    private factories: Registry<P2ShapeConstructor<any>> = {}\n\n    register(kind: string, factory: P2ShapeConstructor<any>): void {\n        this.factories[kind] = factory\n    }\n\n    createShape<K extends Kind>(config: ShapeConfig<K>): P2Shape<K> {\n\t\tif(!this.factories.hasOwnProperty(config.kind)){\n\t\t\tthrow new Error(\"P2ShapeFactory cannot create a \" + config.kind)\n\t\t}\n        return new this.factories[config.kind](config)\n    }\n}\n\nexport const p2shapeFactory = new P2ShapeFactory()\n","import * as p2 from \"p2\"\nimport {vec2} from \"gl-matrix\"\nimport {P2Physics} from \"./p2physics\"\nimport {Shape, ShapeConfig} from \"domain/physics/shape\"\nimport {P2Shape, p2shapeFactory} from \"./p2shape\"\nimport {RigidBody, RigidBodyConfig} from \"domain/physics/rigidbody\"\n\nexport class P2RigidBody implements RigidBody{\n\tkind:\"rigidbody\"\n\tp2world:p2.World\n\tp2body:p2.Body\n\t//readonly shapes: Shape<any>[]\n\ttoBeDeleted: boolean = false\n\n\tconstructor(p2world:p2.World, config:RigidBodyConfig){\n\t\tthis.p2world = p2world\n\t\tthis.p2body = new p2.Body({mass:1}) // mass set to 1 so the body is considered DYNAMIC\n\n\t\tObject.assign(this, config)\n\n\t\tfor(let shapeCfg of config.shapes){\n\t\t\tlet shape = p2shapeFactory.createShape<any>(shapeCfg)\n\t\t\t//this.shapes.push(shape)\n\t\t\tthis.p2body.addShape(shape.p2shape)\n\t\t}\n\n\t\tthis.p2world.addBody(this.p2body)\n\t}\n\n\tset mass(m: number){\n\t\tthis.p2body.mass = m\n\t\tthis.p2body.updateMassProperties()\n\t}\n\tget mass(){\n\t\treturn this.p2body.mass\n\t}\n\n\tset position(p: vec2){\n\t\tvec2.copy(this.p2body.position, p)\n\t}\n\tget position(){\n\t\treturn vec2.clone(this.p2body.position)\n\t}\n\n\tset velocity(v: vec2){\n\t\tvec2.copy(this.p2body.velocity, v)\n\t}\n\tget velocity(){\n\t\treturn vec2.clone(this.p2body.velocity)\n\t}\n\n\tset damping(d: number){\n\t\tthis.p2body.damping = d\n\t}\n\tget damping(){\n\t\treturn this.p2body.damping\n\t}\n\n\n\tset angle(phi: number){\n\t\tthis.p2body.angle = phi\n\t}\n\tget angle(){\n\t\treturn this.p2body.angle\n\t}\n\n\tset angularVelocity(omega: number){\n\t\tthis.p2body.angularVelocity = omega\n\t}\n\tget angularVelocity(){\n\t\treturn this.p2body.angularVelocity\n\t}\n\n\tset angularDamping(d: number){\n\t\tthis.p2body.angularDamping = d\n\t}\n\tget angularDamping(){\n\t\treturn this.p2body.angularDamping\n\t}\n\n\n\tapplyForce(\n\t\tforce: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyForce(\n\t\t\t[force[0], force[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyLocalForce(\n\t\tforce: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyForceLocal(\n\t\t\t[force[0], force[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyImpulse(\n\t\timpulse: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyImpulse(\n\t\t\t[impulse[0], impulse[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyLocalImpulse(\n\t\timpulse: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyImpulseLocal(\n\t\t\t[impulse[0], impulse[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyTorque(torque: number){\n\t\tthis.p2body.angularForce += torque\n\t}\n\n\tapplyAngularMomentum(angularMomentum: number){\n\t\tthis.p2body.angularVelocity += this.p2body.invInertia * angularMomentum\n\t}\n\n\t\n\tremove(){\n\t\tthis.p2world.removeBody(this.p2body)\n\t}\n}","\nimport * as p2 from \"p2\"\nimport {P2Shape, p2shapeFactory} from \"./p2shape\"\nimport {Circle, CircleConfig} from \"domain/physics/circle\"\n\nexport class P2Circle extends P2Shape<\"circle\"> implements Circle{\n\tkind:\"circle\"\n\tp2shape:p2.Circle\n\n\tconstructor(config: CircleConfig){\n\t\tsuper()\n\t\tthis.p2shape = new p2.Circle()\n\t\tObject.assign(this, config)\n\t}\n\n\tset radius(r: number){\n\t\tthis.p2shape.radius = r\n\t\tthis.updateP2()\n\t}\n\tget radius():number{\n\t\treturn this.p2shape.radius\n\t}\n\n\tset boundingRadius(r: number){\n\t\tthis.p2shape.radius = r\n\t\tthis.updateP2()\n\t}\n\tget boundingRadius(){\n\t\treturn this.p2shape.boundingRadius\n\t}\n}\n\np2shapeFactory.register(\"circle\", P2Circle)\n\n\n","\nimport {RigidBodyConfig, RigidBody} from \"domain/physics/rigidbody\"\nimport {Physics} from \"domain/physics/physics\"\nimport {P2RigidBody} from \"./p2rigidbody\"\nimport * as p2 from \"p2\"\nimport \"./p2factorylist\"\n\nexport class P2Physics implements Physics{\n\n\tp2world:p2.World\n\n\tconstructor(){\n\t\tthis.p2world = new p2.World({gravity:[0, 0]})\n\t}\n\n\taddRigidBody(config: RigidBodyConfig):RigidBody{\n\t\tconst body = new P2RigidBody(this.p2world, config)\n\t\treturn body\n\t}\n\n\tstep(dt:number){\n\t\tthis.p2world.step(dt)\n\t}\n\n}\n\n","\nimport {Asset, AssetConfig} from \"domain/graphics/asset\"\nimport {Kind, Registry} from \"utils\"\n\ntype ThreeAssetConstructor<K extends Kind> =\n\tnew(\n\t\tconfig: AssetConfig<K>,\n\t\tonLoaded:()=>void,\n\t\tonError:(err:ErrorEvent)=>void\t\n\t) => Asset<K>\n\nclass ThreeAssetFactory{\n\n    private factories: Registry<ThreeAssetConstructor<any>> = {}\n\n    register(kind: string, factory: ThreeAssetConstructor<any>): void {\n        this.factories[kind] = factory\n    }\n\n    createAsset<K extends Kind>(\n\t\tconfig: AssetConfig<K>,\n\t\tonLoaded: ()=>void,\n\t\tonError: (err:ErrorEvent)=>void\n\t): Asset<K> {\n\t\tif(!this.factories.hasOwnProperty(config.kind)){\n\t\t\tthrow new Error(\"ThreeAssetFactory cannot create a \" + config.kind)\n\t\t}\n        return new this.factories[config.kind](config, onLoaded, onError)\n    }\n}\n\nexport const threeAssetFactory = new ThreeAssetFactory()","\nimport {vec3, quat} from \"gl-matrix\"\nimport {Kind, Optionals, Color, Registry} from \"utils\"\n\nexport interface GraphicsObjectConfig<K extends Kind>{\n\tkind:K\n\tposition?:vec3\n\torientation?:quat\n\tscaling?:vec3\n}\n\nexport interface GraphicsObject<K extends Kind>{\n\tkind:K\n\tposition?:vec3\n\torientation?:quat\n\tscaling?:vec3\n\tremove():void\n}\n\nexport const graphicsObjectDefaults:Optionals<GraphicsObjectConfig<any>> = {\n\tposition:vec3.fromValues(0, 0, 0),\n\torientation:quat.fromValues(0, 0, 0, 1),\n\tscaling:vec3.fromValues(1, 1, 1)\n}\n\n// factory for distinct object types\n// where graphics object modules can register their individual factories\ntype GraphicsObjectConstructor<K extends Kind> = new(config: GraphicsObjectConfig<K>) => GraphicsObject<K>\n\nclass GraphicsObjectFactory{\n\n    private factories: Registry<GraphicsObjectConstructor<any>> = {}\n\n    register(kind: string, factory: GraphicsObjectConstructor<any>): void {\n        this.factories[kind] = factory\n    }\n\n    createGraphicsObject<K extends Kind>(config: GraphicsObjectConfig<K>): GraphicsObject<K> {\n        return new this.factories[config.kind](config)\n    }\n}\n\nexport const graphicsObjectFactory = new GraphicsObjectFactory()","\nimport {GraphicsObject, GraphicsObjectConfig, graphicsObjectDefaults} from \"./graphicsobject\"\nimport {Optionals} from \"utils\"\n\n// the camera has a 90deg field of view, both horizontally\n// and vertically and a depth range from 0.0001 to 1.0\n// use scale x, y and z to modify\n\nexport interface Camera extends GraphicsObject<\"camera\">{\n\tkind:\"camera\"\n\tnearClip:number\n\tfarClip:number\n\tverticalAngleOfViewInDeg:number\n\tactivate():void\n}\n\nexport interface CameraConfig extends GraphicsObjectConfig<\"camera\">{\n\tkind:\"camera\"\n\tnearClip?:number\n\tfarClip?:number\n\tverticalAngleOfViewInDeg?:number\n}\n\nexport const cameraDefaults:Optionals<CameraConfig> = {\n\t...graphicsObjectDefaults,\n\tnearClip:0.1,\n\tfarClip:1000,\n\tverticalAngleOfViewInDeg:40\n}","\nimport * as THREE from \"three\"\nimport {GraphicsObject, GraphicsObjectConfig, graphicsObjectDefaults} from \"domain/graphics/graphicsobject\"\nimport {vec3, quat} from \"gl-matrix\"\nimport {Kind, Optionals, Color, Registry} from \"utils\"\n\nexport abstract class ThreeGraphicsObject<K extends Kind> implements GraphicsObject<K>{\n\tkind:K\n\tabstract threeObject:THREE.Object3D\n\tthreeScene:THREE.Scene\n\n\tset position(p:vec3){\n\t\tthis.threeObject.position.set(p[0], p[1], p[2])\n\t}\n\n\tset orientation(q:quat){\n\t\tthis.threeObject.quaternion.set(q[0], q[1], q[2], q[3])\n\t}\n\n\tset scaling(s:vec3){\n\t\tthis.threeObject.scale.set(s[0], s[1], s[2])\n\t}\n\n\tremove(){\n\t\tthis.threeScene.remove(this.threeObject)\n\t}\n}\n\n\ntype ThreeObjectConstructor<K extends Kind> =\n\tnew(scene:THREE.Scene, config: GraphicsObjectConfig<K>) => ThreeGraphicsObject<K>\n\nclass ThreeObjectFactory{\n\n    private factories: Registry<ThreeObjectConstructor<any>> = {}\n\n    register(kind: string, factory: ThreeObjectConstructor<any>): void {\n        this.factories[kind] = factory\n    }\n\n    createObject<K extends Kind>(\n\t\tscene: THREE.Scene,\n\t\tconfig: GraphicsObjectConfig<K>\n\t): ThreeGraphicsObject<K> {\n\t\tif(!this.factories.hasOwnProperty(config.kind)){\n\t\t\tthrow new Error(\"ThreeObjectFactory cannot create a \" + config.kind)\n\t\t}\n        return new this.factories[config.kind](scene, config)\n    }\n}\n\nexport const threeObjectFactory = new ThreeObjectFactory()","\nimport {Asset, AssetConfig} from \"domain/graphics/asset\"\nimport {threeAssetFactory} from \"./threeasset\"\nimport * as THREE from \"three\"\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\n\nconst gltfLoader = new GLTFLoader()\n\nexport class ThreeModelAsset implements Asset<\"model\">{\n\tkind:\"model\"\n\tmodel:THREE.Object3D\n\t\n\tconstructor(\n\t\tconfig:AssetConfig<\"model\">,\n\t\tonLoaded:()=>void,\n\t\tonError:(err:ErrorEvent)=>void\n\t){\n\t\tthis.model = null\n\t\tconst that = this\n\t\t\n\t\tgltfLoader.load(\n\t\t\tconfig.file,\n\t\t\tfunction(gltf){\n\t\t\t\tthat.model = gltf.scene\n\t\t\t\tonLoaded()\n\t\t\t},\n\t\t\t(e)=>{},\n\t\t\tonError\n\t\t)\n\t}\n}\n\nthreeAssetFactory.register(\"model\", ThreeModelAsset)","\nimport {Color, Optionals} from \"utils\"\nimport {GraphicsObject, GraphicsObjectConfig, graphicsObjectDefaults} from \"./graphicsobject\"\nimport {Asset} from \"./asset\"\n\nexport interface Model extends GraphicsObject<\"model\">{\n\tcolor:Color\n}\n\nexport interface ModelConfig extends GraphicsObjectConfig<\"model\">{\n\tasset:Asset<\"model\">\n\tcolor?:Color\n}\n\nexport const modelDefaults:Optionals<ModelConfig> = {\n\t...graphicsObjectDefaults,\n\tcolor:{r:1, g:1, b:1}\n}","\nimport {Model, ModelConfig, modelDefaults} from \"domain/graphics/model\"\nimport {ThreeGraphicsObject, threeObjectFactory} from \"./threegraphicsobject\"\nimport * as THREE from \"three\"\nimport { Color } from \"utils\"\nimport { ThreeModelAsset } from \"./threemodelasset\"\n\nexport class ThreeModel extends ThreeGraphicsObject<\"model\"> implements Model{\n\n\tcolor:Color // TODO: use color\n\tthreeObject:THREE.Object3D\n\n\tconstructor(scene:THREE.Scene, config:ModelConfig){\n\t\tconst {kind, position, orientation, scaling,\n\t\t\tasset, color}:Required<ModelConfig> =\n\t\t\t{...modelDefaults, ...config}\n\t\tsuper()\n\n\t\tthis.threeScene = scene\n\t\tthis.threeObject = (asset as ThreeModelAsset).model.clone()\n\n\t\tObject.assign(this, {kind, position, orientation, scaling, color})\n\n\t\tthis.threeScene.add(this.threeObject)\n\t}\n\n}\n\nthreeObjectFactory.register(\"model\", ThreeModel)","\nimport {Camera, CameraConfig, cameraDefaults} from \"domain/graphics/camera\"\nimport {ThreeGraphicsObject, threeObjectFactory} from \"./threegraphicsobject\"\nimport {SceneInfo} from \"./sceneinfo\"\nimport * as THREE from \"three\"\n\nexport class ThreeCamera extends ThreeGraphicsObject<\"camera\"> implements Camera{\n\n\tthreeObject:THREE.PerspectiveCamera\n\n\tset nearClip(nc:number){\n\t\tthis.threeObject.near = nc\n\t\tthis.threeObject.updateProjectionMatrix()\n\t}\n\n\tset farClip(fc:number){\n\t\tthis.threeObject.far = fc\n\t\tthis.threeObject.updateProjectionMatrix()\n\t}\n\n\tset verticalAngleOfViewInDeg(aov:number){\n\t\tthis.threeObject.fov = aov\n\t\tthis.threeObject.updateProjectionMatrix()\n\t}\n\n\tconstructor(scene:THREE.Scene, config:CameraConfig){\n\t\tconst filledConfig:Required<CameraConfig> =\n\t\t\t{...cameraDefaults, ...config}\n\t\tsuper()\n\n\t\tthis.threeScene = scene\n\t\tthis.threeObject = new THREE.PerspectiveCamera()\n\n\t\tObject.assign(this, filledConfig)\n\n\t\tthis.threeScene.add(this.threeObject)\n\t}\n\n\tactivate(){\n\t\t;(this.threeScene.userData as SceneInfo).activeCamera = this.threeObject\n\t}\n}\n\nthreeObjectFactory.register(\"camera\", ThreeCamera)","\nexport class ChecklistItem{\n\tcheck:()=>void\n\tnote?:string\n\n\tconstructor(onCheck:()=>void, note?:string){\n\t\tthis.note = note\n\t\tthis.check = onCheck\n\t}\n}\n\nexport class Checklist{\n\titems = new Set<ChecklistItem>()\n\tnumTotalItems:number = 0\n\tonItemCheck:(note?:string)=>void\n\tonComplete:()=>void\n\n\tconstructor(\n\t\t{\n\t\t\tonItemCheck = (note?:string)=>{},\n\t\t\tonComplete = ()=>{}\n\t\t}:{\n\t\t\tonItemCheck?:(note?:string)=>void,\n\t\t\tonComplete?:()=>void\n\t\t} = {}\n\t){\n\t\tthis.onItemCheck = onItemCheck\n\t\tthis.onComplete = onComplete\n\t}\n\n\tnewItem({onCheck = ()=>{}, note}:{onCheck?:()=>void, note?:string} = {}){\n\t\tthis.numTotalItems++\n\t\tlet checklist = this\n\n\t\tlet thisItem = new ChecklistItem(()=>{\n\t\t\tonCheck()\n\t\t\t\n\t\t\tchecklist.onItemCheck(thisItem.note)\n\t\t\tchecklist.items.delete(thisItem)\n\t\t\t\n\t\t\tif(checklist.items.size == 0){\n\t\t\t\tchecklist.onComplete()\n\t\t\t}\n\t\t}, note)\n\n\t\tthis.items.add(thisItem)\n        return thisItem\n\t}\n\n\tgetProgress(){\n\t\treturn 1.0 - this.items.size / this.numTotalItems\n\t}\n\n\treset(){\n\t\tthis.items.clear()\n\t\tthis.numTotalItems = 0\n\t}\n}\n","import { Controller } from \"domain/controller/controller\";\n\nenum Keys {\n\tUP = \"KeyW\",\n\tDOWN = \"KeyS\",\n\tRIGHT = \"KeyD\",\n\tLEFT = \"KeyA\",\n\tSHOOT = \"Space\",\n\tPAUSE = \"Pause\",\n\tSWITCH_MODE = \"KeyM\"\n}\n\nexport class Keyboard implements Controller {\n\n\tprivate shooting: boolean = false\n\tprivate currentStrategy: ControlStrategy = new RelativeStrategy\n\n\tconstructor() {\n\t\tdocument.addEventListener(\"keydown\", (event) => {\n\t\t\tthis.onKeyAction(event, 1)\n\t\t})\n\t\tdocument.addEventListener(\"keyup\", (event) => {\n\t\t\tthis.onKeyAction(event, 0)\n\t\t})\n\t}\n\n\tgetAbsoluteDirection(): number {\n\t\treturn this.currentStrategy.getAbsoluteDirection();\n\t}\n\n\tgetTurnRate(): number {\n\t\treturn this.currentStrategy.getTurnRate();\n\t}\n\n\tgetThrust(): number {\n\t\treturn this.currentStrategy.getThrust();\n\t}\n\n\tisShooting(): boolean {\n\t\treturn this.shooting\n\t}\n\n\tsetPauseCallback(callback: () => void): void {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\tprivate onKeyAction(event: KeyboardEvent, value: number) {\n\t\tif (!event.repeat) {\n\t\t\tthis.onGeneralKeyAction(event.code, value)\n\t\t\tthis.currentStrategy.onKeyAction(event.code, value)\n\t\t}\n\t}\n\tprivate onGeneralKeyAction(keyCode: string, value: number) {\n\t\tswitch (keyCode) {\n\t\t\tcase Keys.SHOOT:\n\t\t\t\tthis.shooting = (value != 0);\n\t\t\t\tbreak;\n\t\t\tcase Keys.SWITCH_MODE:\n\t\t\t\tif (value != 0) {\n\t\t\t\t\tthis.switchStrategy();\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t}\n\t}\n\tprivate switchStrategy() {\n\t\tif (this.currentStrategy instanceof RelativeStrategy) {\n\t\t\tconsole.log(\"Switch to absolute keyboard\")\n\t\t\tthis.currentStrategy = new AbsoluteStrategy\n\t\t} else {\n\t\t\tconsole.log(\"Switch to relative keyboard\")\n\t\t\tthis.currentStrategy = new RelativeStrategy\n\t\t}\n\t}\n}\n\ninterface ControlStrategy {\n\tgetAbsoluteDirection(): number\n\tgetTurnRate(): number\n\tgetThrust(): number\n\tonKeyAction(keyCode: string, value: number): void\n}\n\nclass RelativeStrategy implements ControlStrategy {\n\n\tprivate turnRate: number = 0\n\tprivate thrust: number = 0\n\n\tprivate valueLeft = 0;\n\tprivate valueRight = 0;\n\n\tgetAbsoluteDirection(): number {\n\t\treturn undefined;\n\t}\n\n\tgetTurnRate(): number {\n\t\treturn this.turnRate\n\t}\n\n\tgetThrust(): number {\n\t\treturn this.thrust\n\t}\n\n\tonKeyAction(keyCode: string, value: number) {\n\t\tif (keyCode == Keys.UP) {\n\t\t\tthis.thrust = value\n\t\t}\n\t\tif (keyCode == Keys.LEFT) {\n\t\t\tthis.valueLeft = value\n\t\t}\n\t\tif (keyCode == Keys.RIGHT) {\n\t\t\tthis.valueRight = value\n\t\t}\n\t\tthis.turnRate = this.valueLeft - this.valueRight;\n\t}\n}\n\nclass AbsoluteStrategy implements ControlStrategy {\n\n\tprivate absoluteDirection: number = undefined\n\tprivate thrust: number = 0\n\n\tprivate valueUp: number = 0\n\tprivate valueDown: number = 0\n\tprivate valueLeft: number = 0\n\tprivate valueRight: number = 0\n\n\tgetAbsoluteDirection(): number {\n\t\treturn this.absoluteDirection\n\t}\n\n\tgetTurnRate(): number {\n\t\treturn undefined\n\t}\n\n\tgetThrust(): number {\n\t\treturn this.thrust\n\t}\n\n\tonKeyAction(keyCode: string, value: number) {\t\t\n\t\tswitch (keyCode) {\n\t\t\tcase Keys.UP:\n\t\t\t\tthis.valueUp = value\n\t\t\t\tbreak\n\t\t\tcase Keys.DOWN:\n\t\t\t\tthis.valueDown = value\n\t\t\t\tbreak\n\t\t\tcase Keys.RIGHT:\n\t\t\t\tthis.valueRight = value\n\t\t\t\tbreak\n\t\t\tcase Keys.LEFT:\n\t\t\t\tthis.valueLeft = value\n\t\t\t\tbreak\n\t\t}\n\t\tlet thrustX = this.valueRight - this.valueLeft;\n\t\tlet thrustY = this.valueUp - this.valueDown;\n\n\t\tif (thrustX != 0 || thrustY != 0) {\n\t\t\tthis.absoluteDirection = Math.atan2(thrustY, thrustX)\n\t\t} else {\n\t\t\tthis.absoluteDirection = undefined\n\t\t}\n\t\tthis.thrust = (thrustX != 0 || thrustY != 0) ? 1 : 0;\n\t}\n}","\nimport {ShapeConfig, Shape} from \"./shape\"\n\nexport interface Circle extends Shape<\"circle\">{\n\tkind: \"circle\"\n\tradius: number\n}\n\nexport class CircleConfig extends ShapeConfig<\"circle\">{\n\tkind: \"circle\" = \"circle\"\n\tradius = 1\n\t\n\tconstructor(config: Partial<CircleConfig>){\n\t\tsuper(config)\n\t\tif(\"radius\" in config){this.radius = config.radius}\n\t}\n}","\nimport {vec2} from \"gl-matrix\"\nimport {Kind} from \"utils\"\n\n// parameters that are common to all shapes\n\nexport interface Shape<K extends Kind> {\n    kind: K\n\toffset: vec2\n\toffsetAngle: number\n\tboundingRadius: number\n}\n\nexport class ShapeConfig<K extends Kind>{\n\tkind: K\n\toffset = vec2.fromValues(0, 0)\n\toffsetAngle = 0\n\n\tconstructor(config:Partial<ShapeConfig<K>>){\n\t\tthis.kind = config.kind\n\t\tif(\"offset\" in config){this.offset = config.offset};\n\t\tif(\"offsetAngle\" in config){this.offsetAngle = config.offsetAngle};\n\t}\n}","import {vec2} from \"gl-matrix\"\nimport {ShapeConfig, Shape} from \"./shape\"\n\nexport interface RigidBody{\n\tkind: \"rigidbody\"\n\n\t//readonly shapes: Shape<any>[]\n\n\tmass: number\n\n\tposition: vec2\n\tvelocity: vec2\n\tdamping: number\n\n\tangle: number\n\tangularVelocity: number\n\tangularDamping: number\n\n\tapplyForce(force:vec2, localPointOfApplication?:vec2):void\n\tapplyLocalForce(force:vec2, localPointOfApplication?:vec2):void\n\tapplyImpulse(impulse:vec2, localPointOfApplication?:vec2):void\n\tapplyLocalImpulse(impulse:vec2, localPointOfApplication?:vec2):void\n\tapplyTorque(torque:number):void\n\tapplyAngularMomentum(angularMomentum:number):void\n\n\tremove():void\n}\n\nexport class RigidBodyConfig{\n\tshapes: ShapeConfig<any>[]\n\t\n\tmass = 1\n\n\tposition = vec2.fromValues(0, 0)\n\tvelocity = vec2.fromValues(0, 0)\n\tdamping = 0.1\n\n\tangle = 0\n\tangularVelocity = 0\n\tangularDamping = 0.1\n\n\tconstructor(config:Partial<RigidBodyConfig>){\n\t\tif(\"shapes\" in config){this.shapes = config.shapes}\n\t\tif(\"mass\" in config){this.mass = config.mass}\n\t\tif(\"position\" in config){this.position = config.position}\n\t\tif(\"velocity\" in config){this.velocity = config.velocity}\n\t\tif(\"damping\" in config){this.damping = config.damping}\n\t\tif(\"angle\" in config){this.angle = config.angle}\n\t\tif(\"angularVelocity\" in config){this.angularVelocity = config.angularVelocity}\n\t\tif(\"angularDamping\" in config){this.angularDamping = config.angularDamping}\n\t}\n}","/**\n * Wraps an angle in order to be in the limits of the wrapping point.\n * \n * @param angle Angle to be wrapped in rad\n * @param wrapAt Wrapping point. Defaults to Math.PI\n * \n * @returns the wrapped angle in the range between [-wrapAt, wrapAt)\n */\nexport function wrapAngle(angle: number, wrapAt = Math.PI): number {\n\tlet revs = (angle - wrapAt) / 2.0 / Math.PI;\n  return (revs - Math.floor(revs) - 1) * 2.0 * Math.PI + wrapAt\n}","\nimport {ThreeGraphics} from \"adapters/graphics/threegraphics/threegraphics\"\nimport {ModelConfig, Model} from \"domain/graphics/model\"\nimport {Checklist} from \"./checklist\"\nimport { P2Physics } from \"adapters/physics/p2/p2physics\"\nimport { CircleConfig } from \"domain/physics/circle\"\nimport { vec2, quat } from \"gl-matrix\"\nimport { RigidBody, RigidBodyConfig } from \"domain/physics/rigidbody\"\nimport { Controller } from \"domain/controller/controller\"\nimport { Keyboard } from \"adapters/controller/keyboard\"\nimport { wrapAngle } from \"utilities/math_utils\"\n\nlet graphics = new ThreeGraphics(document.getElementById(\"rendertarget\") as HTMLCanvasElement)\nlet physics = new P2Physics()\n\nclass Glider{\n\tbody:RigidBody\n\tmodel:Model\n\tcontroller:Controller\n\n\tthrust:number = 0\n\n\tconstructor(bodyCfg:RigidBodyConfig, modelCfg:ModelConfig, controller:Controller){\n\t\tthis.body = physics.addRigidBody(bodyCfg)\n\t\t// TODO: the return type of the object factory\n\t\t// does not pass through additional properties like color\n\t\t// (I think it does but TypeScript doesn't know)\n\t\t// Maybe the \"kind\" must carry these parameters\n\t\tthis.model = graphics.addObject(modelCfg) as Model\n\t\tthis.controller = controller\n\t}\n\n\tupdate(){\n\t\tthis.thrust = this.controller.getThrust() * 10;\n\t\tthis.body.applyLocalForce(vec2.fromValues(this.thrust, 0))\n\n\t\tconst turnRate = this.controller.getTurnRate()\n\t\tif(turnRate != undefined) {\n\t\t\tthis.body.applyAngularMomentum(turnRate * 0.3)\n\t\t}\n\t\tconst direction = this.controller.getAbsoluteDirection()\n\t\tif(direction != undefined) {\n\t\t\tthis.turnToDirection(direction)\n\t\t}\n\t\t\n\t\tthis.model.position = [\n\t\t\tthis.body.position[0], this.body.position[1], 0]\n\t\tthis.model.orientation = quat.fromEuler(\n\t\t\t[0,0,0,0], 0, 0, this.body.angle /Math.PI * 180)\n\t}\n\tturnToDirection(direction: number) {\n\t\tlet wrappedAngle = wrapAngle(this.body.angle);\t\t\n\t\tlet directionDiff = wrapAngle(wrappedAngle - direction);\n\t\tlet threshold = 0.0001;\n\t\tif(Math.abs(directionDiff) > threshold) {\n\t\t\tlet sign = Math.sign(directionDiff)\n\t\t\tthis.body.applyAngularMomentum(-sign * 0.3)\n\t\t}\n\t}\n}\n\nfunction start(){\n\n\tconst gliderBodyCfg = new RigidBodyConfig({\n\t\tshapes:[new CircleConfig({radius:1})],\n\t\tdamping: 0.7,\n\t\tangularDamping: 0.99\n\t})\n\n\tconst gliderModelCfg:ModelConfig = {\n\t\tkind:\"model\",\n\t\tasset:gliderAsset,\n\t\tcolor:{r:1, g:1, b:1}\n\t}\n\t\n\tconst controller = new Keyboard\n\tlet gliders:Glider[] = []\n\tfor(let i=0; i<50; i++){\n\t\tlet glider = new Glider(gliderBodyCfg, gliderModelCfg, controller)\n\t\tglider.body.position = vec2.fromValues(Math.random()*20-10, Math.random()*20-10)\n\t\tglider.body.angle = Math.random()*1000\n\t\tgliders.push(glider)\n\t}\n\n\tfunction animate(time:number){\n\t\trequestAnimationFrame(animate)\n\n\t\tfor(let glider of gliders){\n\t\t\tglider.update()\n\t\t}\n\n\t\tphysics.step(1/60)\n\n\t\tgraphics.update(time)\n\t}\n\trequestAnimationFrame(animate)\n\t\n}\n\n\nlet checklist = new Checklist({onComplete:start})\n\nlet loadGlider = checklist.newItem()\nconst gliderAsset = graphics.loadAsset<\"model\">(\n\t{kind:\"model\", file:\"glider/glider.gltf\"},\n\tloadGlider.check\n)\n","\nimport {Kind} from \"utils\"\nimport {Graphics} from \"domain/graphics/graphics\"\nimport {GraphicsObject, GraphicsObjectConfig} from \"domain/graphics/graphicsobject\"\nimport {Asset, AssetConfig} from \"domain/graphics/asset\"\nimport {threeAssetFactory} from \"./threeasset\"\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\nimport {cameraDefaults} from \"domain/graphics/camera\"\nimport {SceneInfo} from \"./sceneinfo\"\nimport * as THREE from \"three\"\nimport { threeObjectFactory } from \"./threegraphicsobject\"\nimport \"./factorylist\"\n\nexport class ThreeGraphics implements Graphics{\n\n\tcanvas:HTMLCanvasElement\n\trenderer:THREE.Renderer\n\tscene:THREE.Scene\n\n\tconstructor(canvas:HTMLCanvasElement){\n\t\tthis.canvas = canvas\n\t\tthis.renderer = new THREE.WebGLRenderer({canvas:canvas})\n\t\tthis.scene = new THREE.Scene()\n\n\t\t// controllable test camera\n\t\tconst defaultCam = new THREE.PerspectiveCamera(\n\t\t\tcameraDefaults.verticalAngleOfViewInDeg,\n\t\t\t1.0,\n\t\t\tcameraDefaults.nearClip,\n\t\t\tcameraDefaults.farClip\n\t\t)\n\t\tdefaultCam.position.set(0, 0, 10)\n\t\tthis.scene.add(defaultCam)\n\t\t;(this.scene.userData as SceneInfo).activeCamera = defaultCam\n\n\t\tconst controls = new OrbitControls(defaultCam, this.renderer.domElement)\n\t\tcontrols.screenSpacePanning = true\n\n\t\tthis.scene.add(new THREE.HemisphereLight(\"white\", \"black\"))\n\t\tthis.scene.add(new THREE.AxesHelper())\n\n\t\tconst that = this\n\t\tconst resize = ()=>{\n\t\t\tthat.renderer.setSize(that.canvas.clientWidth, that.canvas.clientHeight, false)\n\t\t\tconst cam = (this.scene.userData as SceneInfo).activeCamera\n\t\t\tcam.aspect = canvas.clientWidth / canvas.clientHeight\n\t\t\tcam.updateProjectionMatrix()\n\t\t}\n\t\t\n\t\twindow.addEventListener('resize', resize)\n\t\tresize()\n\t}\n\n\tloadAsset<K extends Kind>(\n\t\tconfig:AssetConfig<K>,\n\t\tonLoaded?:()=>void,\n\t\tonError?:(err:ErrorEvent)=>void\n\t):Asset<K>{\n\t\treturn threeAssetFactory.createAsset(config, onLoaded, onError)\n\t}\n\n\taddObject<K extends Kind>(config:GraphicsObjectConfig<K>):GraphicsObject<K>{\n\t\treturn threeObjectFactory.createObject(this.scene, config)\n\t}\n\n\tupdate(time:number){\n\t\tthis.renderer.render(this.scene, (this.scene.userData as SceneInfo).activeCamera)\n\t}\n}\n"],"sourceRoot":""}