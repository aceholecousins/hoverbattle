{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/adapters/physics/p2/p2shape.ts","webpack:///./src/adapters/physics/p2/p2rigidbody.ts","webpack:///./src/adapters/physics/p2/p2circle.ts","webpack:///./src/adapters/physics/p2/p2physics.ts","webpack:///./src/utils.ts","webpack:///./src/domain/graphics/scenenode.ts","webpack:///./src/domain/graphics/camera.ts","webpack:///./src/adapters/graphics/threegraphics/threemodel.ts","webpack:///./src/domain/graphics/model.ts","webpack:///./src/adapters/graphics/threegraphics/threescenenode.ts","webpack:///./src/adapters/graphics/threegraphics/threecamera.ts","webpack:///./src/adapters/graphics/threegraphics/threelight.ts","webpack:///./src/adapters/graphics/threegraphics/threemesh.ts","webpack:///./src/adapters/graphics/threegraphics/threegraphicscontroller.ts","webpack:///./src/domain/graphics/mesh.ts","webpack:///./src/checklist.ts","webpack:///./src/adapters/controller/keyboard.ts","webpack:///./src/domain/physics/circle.ts","webpack:///./src/domain/physics/shape.ts","webpack:///./src/domain/physics/rigidbody.ts","webpack:///./src/utilities/math_utils.ts","webpack:///./src/ui_main.ts","webpack:///./src/adapters/graphics/threegraphics/threegraphics.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","p2shapeFactory","constructors","kind","factory","this","config","Error","p2world","toBeDeleted","p2body","p2","mass","assign","shapeCfg","shapes","shape","createShape","addShape","p2shape","addBody","updateMassProperties","copy","position","clone","v","velocity","damping","phi","angle","omega","angularVelocity","angularDamping","force","localPointOfApplication","fromValues","applyForce","applyForceLocal","impulse","applyImpulse","applyImpulseLocal","torque","angularForce","angularMomentum","invInertia","removeBody","register","updateBoundingRadius","body","aabbNeedsUpdate","super","radius","updateP2","boundingRadius","gravity","dt","step","target","source","keys","k","copyIfPresent","orientation","scaling","nearClip","farClip","verticalAngleOfViewInDeg","threeObject","undefined","gltfLoader","GLTFLoader","ThreeModelLoader","file","onLoaded","onError","model","load","gltf","scene","threeScene","add","set","q","quaternion","scale","remove","nc","near","updateProjectionMatrix","fc","far","aov","fov","userData","activeCamera","ThreeCameraFactory","color","col","setRGB","g","b","groundColor","skyColor","ThreeLightFactory","colorRecursive","obj","type","material","children","template","ThreeMeshFactory","asset","ThreeGraphicsController","graphics","resize","renderer","setSize","canvas","clientWidth","clientHeight","cam","aspect","addEventListener","time","render","ModelMeshConfig","ChecklistItem","onCheck","note","check","Keys","offset","offsetAngle","Keyboard","shooting","currentStrategy","RelativeStrategy","document","event","onKeyAction","getAbsoluteDirection","getTurnRate","getThrust","callback","isPressed","repeat","onGeneralKeyAction","code","keyCode","SHOOT","SWITCH_MODE","switchStrategy","console","log","AbsoluteStrategy","turnRate","thrust","valueLeft","valueRight","UP","LEFT","RIGHT","absoluteDirection","valueUp","valueDown","DOWN","thrustX","thrustY","Math","atan2","wrapAngle","wrapAt","PI","revs","floor","camera","light","mesh","defaultCam","activate","OrbitControls","domElement","screenSpacePanning","control","getElementById","physics","loadGlider","onItemCheck","onComplete","items","Set","numTotalItems","checklist","thisItem","delete","size","clear","gliderBodyCfg","gliderModelCfg","gliderAsset","controller","gliders","glider","random","requestAnimationFrame","animate","update","newItem","bodyCfg","modelCfg","addRigidBody","createFromModel","applyLocalForce","applyAngularMomentum","direction","turnToDirection","fromEuler","wrappedAngle","directionDiff","abs","sign"],"mappings":"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","file":"acechase_ui.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([71,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {Shape, ShapeConfig} from \"domain/physics/shape\"\nimport * as p2 from \"p2\"\nimport { vec2 } from \"gl-matrix\"\nimport {Kind, Registry} from \"utils\"\n\nexport abstract class P2Shape<K extends Kind> implements Shape<K>{\n\tkind: K\n\t\n\tabstract p2shape: p2.Shape\n\t\n\tupdateP2(){\n\t\tthis.p2shape.updateBoundingRadius()\n\t\tif(this.p2shape.body !== null){ // when called before the shape was added to the body\n\t\t\tthis.p2shape.body.aabbNeedsUpdate = true\n\t\t\tthis.p2shape.body.updateBoundingRadius()\n\t\t}\n\t}\n\n\tset offset(p: vec2){\n\t\tvec2.copy(this.p2shape.position, p)\n\t}\n\tget offset(){\n\t\treturn vec2.clone(this.p2shape.position)\n\t}\n\n\tset offsetAngle(phi: number){\n\t\tthis.p2shape.angle = phi\n\t}\n\tget offsetAngle(){\n\t\treturn this.p2shape.angle\n\t}\n\n\tabstract boundingRadius: number\n}\n\n\n// factory for distinct shape types\n// where shape modules can register their individual constructors\ntype P2ShapeConstructor<K extends Kind> = new(config: ShapeConfig<K>) => P2Shape<K>\n\nclass P2ShapeFactory{\n\n    private constructors: Registry<P2ShapeConstructor<any>> = {}\n\n    register(kind: string, factory: P2ShapeConstructor<any>): void {\n        this.constructors[kind] = factory\n    }\n\n    createShape<K extends Kind>(config: ShapeConfig<K>): P2Shape<K> {\n\t\tif(!this.constructors.hasOwnProperty(config.kind)){\n\t\t\tthrow new Error(\"P2ShapeFactory cannot create a \" + config.kind)\n\t\t}\n        return new this.constructors[config.kind](config)\n    }\n}\n\nexport const p2shapeFactory = new P2ShapeFactory()\n","import * as p2 from \"p2\"\nimport {vec2} from \"gl-matrix\"\nimport {P2Physics} from \"./p2physics\"\nimport {Shape, ShapeConfig} from \"domain/physics/shape\"\nimport {P2Shape, p2shapeFactory} from \"./p2shape\"\nimport {RigidBody, RigidBodyConfig} from \"domain/physics/rigidbody\"\n\nexport class P2RigidBody implements RigidBody{\n\tkind:\"rigidbody\"\n\tp2world:p2.World\n\tp2body:p2.Body\n\t//readonly shapes: Shape<any>[]\n\ttoBeDeleted: boolean = false\n\n\tconstructor(p2world:p2.World, config:RigidBodyConfig){\n\t\tthis.p2world = p2world\n\t\tthis.p2body = new p2.Body({mass:1}) // mass set to 1 so the body is considered DYNAMIC\n\n\t\tObject.assign(this, config)\n\n\t\tfor(let shapeCfg of config.shapes){\n\t\t\tlet shape = p2shapeFactory.createShape<any>(shapeCfg)\n\t\t\t//this.shapes.push(shape)\n\t\t\tthis.p2body.addShape(shape.p2shape)\n\t\t}\n\n\t\tthis.p2world.addBody(this.p2body)\n\t}\n\n\tset mass(m: number){\n\t\tthis.p2body.mass = m\n\t\tthis.p2body.updateMassProperties()\n\t}\n\tget mass(){\n\t\treturn this.p2body.mass\n\t}\n\n\tset position(p: vec2){\n\t\tvec2.copy(this.p2body.position, p)\n\t}\n\tget position(){\n\t\treturn vec2.clone(this.p2body.position)\n\t}\n\n\tset velocity(v: vec2){\n\t\tvec2.copy(this.p2body.velocity, v)\n\t}\n\tget velocity(){\n\t\treturn vec2.clone(this.p2body.velocity)\n\t}\n\n\tset damping(d: number){\n\t\tthis.p2body.damping = d\n\t}\n\tget damping(){\n\t\treturn this.p2body.damping\n\t}\n\n\n\tset angle(phi: number){\n\t\tthis.p2body.angle = phi\n\t}\n\tget angle(){\n\t\treturn this.p2body.angle\n\t}\n\n\tset angularVelocity(omega: number){\n\t\tthis.p2body.angularVelocity = omega\n\t}\n\tget angularVelocity(){\n\t\treturn this.p2body.angularVelocity\n\t}\n\n\tset angularDamping(d: number){\n\t\tthis.p2body.angularDamping = d\n\t}\n\tget angularDamping(){\n\t\treturn this.p2body.angularDamping\n\t}\n\n\n\tapplyForce(\n\t\tforce: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyForce(\n\t\t\t[force[0], force[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyLocalForce(\n\t\tforce: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyForceLocal(\n\t\t\t[force[0], force[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyImpulse(\n\t\timpulse: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyImpulse(\n\t\t\t[impulse[0], impulse[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyLocalImpulse(\n\t\timpulse: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyImpulseLocal(\n\t\t\t[impulse[0], impulse[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyTorque(torque: number){\n\t\tthis.p2body.angularForce += torque\n\t}\n\n\tapplyAngularMomentum(angularMomentum: number){\n\t\tthis.p2body.angularVelocity += this.p2body.invInertia * angularMomentum\n\t}\n\n\t\n\tremove(){\n\t\tthis.p2world.removeBody(this.p2body)\n\t}\n}","\nimport * as p2 from \"p2\"\nimport {P2Shape, p2shapeFactory} from \"./p2shape\"\nimport {Circle, CircleConfig} from \"domain/physics/circle\"\n\nexport class P2Circle extends P2Shape<\"circle\"> implements Circle{\n\tkind:\"circle\"\n\tp2shape:p2.Circle\n\n\tconstructor(config: CircleConfig){\n\t\tsuper()\n\t\tthis.p2shape = new p2.Circle()\n\t\tObject.assign(this, config)\n\t}\n\n\tset radius(r: number){\n\t\tthis.p2shape.radius = r\n\t\tthis.updateP2()\n\t}\n\tget radius():number{\n\t\treturn this.p2shape.radius\n\t}\n\n\tset boundingRadius(r: number){\n\t\tthis.p2shape.radius = r\n\t\tthis.updateP2()\n\t}\n\tget boundingRadius(){\n\t\treturn this.p2shape.boundingRadius\n\t}\n}\n\np2shapeFactory.register(\"circle\", P2Circle)\n\n\n","\nimport {RigidBodyConfig, RigidBody} from \"domain/physics/rigidbody\"\nimport {Physics} from \"domain/physics/physics\"\nimport {P2RigidBody} from \"./p2rigidbody\"\nimport * as p2 from \"p2\"\nimport \"./p2factorylist\"\n\nexport class P2Physics implements Physics{\n\n\tp2world:p2.World\n\n\tconstructor(){\n\t\tthis.p2world = new p2.World({gravity:[0, 0]})\n\t}\n\n\taddRigidBody(config: RigidBodyConfig):RigidBody{\n\t\tconst body = new P2RigidBody(this.p2world, config)\n\t\treturn body\n\t}\n\n\tstep(dt:number){\n\t\tthis.p2world.step(dt)\n\t}\n\n}\n\n","\nexport type Registry<T> = { [index: string]: T }\n\nexport interface Color{\n\tr:number\n\tg:number\n\tb:number\n}\n\nexport type Kind = string\n\n// https://stackoverflow.com/a/49579497/3825996\ntype OptionalKeys<T> = { [K in keyof T]-?:\n  ({} extends { [P in K]: T[K] } ? K : never)\n}[keyof T]\n\nexport type Optionals<T> = Required<Pick<T, OptionalKeys<T>>>\n\nexport function copy<T1, T2, K extends keyof T1 & keyof T2>(\n\ttarget:T1, source:T2, keys:K[]){\n\n\tfor(const k of keys){\n\t\t(target as any)[k] = (source as any)[k]\n\t}\n}\n\nexport function copyIfPresent<T1, T2, K extends keyof T1 & keyof T2>(\n\ttarget:T1, source:T2, keys:K[]){\n\n\tfor(const k of keys){\n\t\tif(k in source){\n\t\t\t(target as any)[k] = (source as any)[k]\n\t\t}\n\t}\n}","\nimport {vec3, quat} from \"gl-matrix\"\nimport {Kind, copyIfPresent} from \"utils\"\n\nexport interface SceneNode<K extends Kind>{\n\tkind:K\n\tposition?:vec3\n\torientation?:quat\n\tscaling?:vec3\n\tremove():void\n}\n\nexport class SceneNodeConfig<K extends Kind>{\n\tkind: K\n\tposition = vec3.fromValues(0, 0, 0)\n\torientation = quat.fromValues(0, 0, 0, 1)\n\tscaling = vec3.fromValues(1, 1, 1)\n\n\tconstructor(config:Partial<SceneNodeConfig<K>> = {}){\n\t\tthis.kind = config.kind\n\t\tcopyIfPresent(this, config, [\"position\", \"orientation\", \"scaling\"])\n\t}\n}","\nimport {SceneNode, SceneNodeConfig} from \"./scenenode\"\nimport {copyIfPresent} from \"utils\"\n\nexport interface Camera extends SceneNode<\"camera\">{\n\tkind:\"camera\"\n\tnearClip:number\n\tfarClip:number\n\tverticalAngleOfViewInDeg:number\n\tactivate():void\n}\n\nexport class CameraConfig extends SceneNodeConfig<\"camera\">{\n\tkind:\"camera\" = \"camera\"\n\tnearClip = 0.1\n\tfarClip = 1000\n\tverticalAngleOfViewInDeg = 40\n\n\tconstructor(config:Partial<CameraConfig> = {}){\n\t\tsuper(config)\n\t\tcopyIfPresent(this, config, [\"nearClip\", \"farClip\", \"verticalAngleOfViewInDeg\"])\n\t}\t\n}\n\nexport interface CameraFactory{\n\tcreate(config: CameraConfig): Camera\n}","\nimport {Model, ModelLoader} from \"domain/graphics/model\"\nimport * as THREE from \"three\"\nimport {GLTFLoader} from 'three/examples/jsm/loaders/GLTFLoader'\n\nexport class ThreeModel extends Model{\n\tthreeObject:THREE.Object3D = undefined\n}\n\nconst gltfLoader = new GLTFLoader()\n\nexport class ThreeModelLoader implements ModelLoader{\n\tload(\n\t\tfile: string,\n\t\tonLoaded?:()=>void,\n\t\tonError?:(err:ErrorEvent)=>void\n\t){\n\t\tlet model = new ThreeModel()\n\n\t\tgltfLoader.load(\n\t\t\tfile,\n\t\t\tfunction(gltf){\n\t\t\t\tmodel.threeObject = gltf.scene\n\t\t\t\tonLoaded()\n\t\t\t},\n\t\t\tundefined,\n\t\t\tonError\n\t\t)\n\t\n\t\treturn model\n\t}\n}","\nimport {Asset, LoadAssetFunction} from \"./asset\"\n\nexport class Model implements Asset<\"model\">{\n\tkind:\"model\"\n}\n\nexport interface ModelLoader{\n\tload:LoadAssetFunction<Model>\n}","\nimport * as THREE from \"three\"\nimport {SceneNode, SceneNodeConfig} from \"domain/graphics/scenenode\"\nimport {vec3, quat} from \"gl-matrix\"\nimport {Kind, copy} from \"utils\"\n\nexport abstract class ThreeSceneNode<K extends Kind> implements SceneNode<K>{\n\tkind:K\n\tthreeScene:THREE.Scene\n\tthreeObject:THREE.Object3D\n\t\n\tconstructor(\n\t\tscene:THREE.Scene,\n\t\tobject:THREE.Object3D,\n\t\tconfig:SceneNodeConfig<K>\n\t){\n\t\tthis.threeScene = scene\n\t\tthis.threeObject = object\n\t\tscene.add(object)\n\n\t\tcopy(this, config, [\"kind\", \"position\", \"orientation\", \"scaling\"])\n\t}\n\n\tset position(p:vec3){\n\t\tthis.threeObject.position.set(p[0], p[1], p[2])\n\t}\n\n\tset orientation(q:quat){\n\t\tthis.threeObject.quaternion.set(q[0], q[1], q[2], q[3])\n\t}\n\n\tset scaling(s:vec3){\n\t\tthis.threeObject.scale.set(s[0], s[1], s[2])\n\t}\n\n\tremove(){\n\t\tthis.threeScene.remove(this.threeObject)\n\t}\n}\n","\nimport {ThreeSceneNode} from \"./threescenenode\"\nimport {Camera, CameraConfig, CameraFactory} from \"domain/graphics/camera\"\nimport {SceneInfo} from \"./sceneinfo\"\nimport * as THREE from \"three\"\nimport {copy} from \"utils\"\n\nexport class ThreeCamera extends ThreeSceneNode<\"camera\"> implements Camera{\n\n\tthreeObject:THREE.PerspectiveCamera\n\n\tset nearClip(nc:number){\n\t\tthis.threeObject.near = nc\n\t\tthis.threeObject.updateProjectionMatrix()\n\t}\n\n\tset farClip(fc:number){\n\t\tthis.threeObject.far = fc\n\t\tthis.threeObject.updateProjectionMatrix()\n\t}\n\n\tset verticalAngleOfViewInDeg(aov:number){\n\t\tthis.threeObject.fov = aov\n\t\tthis.threeObject.updateProjectionMatrix()\n\t}\n\n\tconstructor(scene:THREE.Scene, config:CameraConfig){\n\t\tsuper(scene, new THREE.PerspectiveCamera(), config)\n\t\tcopy(this, config, [\"nearClip\", \"farClip\", \"verticalAngleOfViewInDeg\"])\n\t}\n\n\tactivate(){\n\t\t;(this.threeScene.userData as SceneInfo).activeCamera = this.threeObject\n\t}\n}\n\nexport class ThreeCameraFactory implements CameraFactory{\n\tthreeScene:THREE.Scene\n\n\tconstructor(scene:THREE.Scene){\n\t\tthis.threeScene = scene\n\t}\n\n\tcreate(config: CameraConfig){\n\t\treturn new ThreeCamera(this.threeScene, config)\n\t}\n}","\nimport {Color} from \"utils\"\nimport {ThreeSceneNode} from \"./threescenenode\"\nimport {\n\tPointLight,\n\tPointLightConfig,\n\tHemisphereLight,\n\tHemisphereLightConfig,\n\tLightFactory\n} from \"domain/graphics/light\"\nimport * as THREE from \"three\"\n\nexport class ThreePointLight extends ThreeSceneNode<\"pointlight\"> implements PointLight{\n\n\tthreeObject:THREE.PointLight\n\n\tset color(col:Color){\n\t\tthis.threeObject.color.setRGB(col.r, col.g, col.b)\n\t}\n\n\tconstructor(scene:THREE.Scene, config:PointLightConfig){\n\t\tsuper(scene, new THREE.PointLight(), config)\n\n\t\tthis.color = config.color\n\t}\n}\n\nexport class ThreeHemisphereLight extends ThreeSceneNode<\"hemispherelight\"> implements HemisphereLight{\n\n\tthreeObject:THREE.HemisphereLight\n\n\tset groundColor(col:Color){\n\t\tthis.threeObject.groundColor.setRGB(col.r, col.g, col.b)\n\t}\n\n\tset skyColor(col:Color){\n\t\tthis.threeObject.color.setRGB(col.r, col.g, col.b)\n\t}\n\n\tconstructor(scene:THREE.Scene, config:HemisphereLightConfig){\n\t\tsuper(scene, new THREE.HemisphereLight(), config)\n\n\t\tthis.groundColor = config.groundColor\n\t\tthis.skyColor = config.skyColor\n\t}\n}\n\nexport class ThreeLightFactory implements LightFactory{\n\tthreeScene:THREE.Scene\n\n\tconstructor(scene:THREE.Scene){\n\t\tthis.threeScene = scene\n\t}\n\n\tcreatePointLight(config: PointLightConfig){\n\t\treturn new ThreePointLight(this.threeScene, config)\n\t}\n\n\tcreateHemisphereLight(config: HemisphereLightConfig){\n\t\treturn new ThreeHemisphereLight(this.threeScene, config)\n\t}\n}","\nimport {Mesh, MeshConfig, ModelMeshConfig, MeshFactory} from \"domain/graphics/mesh\"\nimport {ThreeSceneNode} from \"./threescenenode\"\nimport * as THREE from \"three\"\nimport {copy, Color} from \"utils\"\nimport {ThreeModel} from \"./threemodel\"\n\nfunction colorRecursive(obj: THREE.Object3D, col:Color){\n\tif(obj.type == \"mesh\"){\n\t\t((obj as THREE.Mesh).material as THREE.MeshStandardMaterial).color.setRGB(col.r, col.g, col.b)\n\t}\n\t\n\tfor(let c of obj.children){\n\t\tcolorRecursive(c, col)\n\t}\n}\n\nexport class ThreeMesh extends ThreeSceneNode<\"mesh\"> implements Mesh{\n\n\tthreeObject:THREE.Object3D\n\n\tset baseColor(col:Color){\n\t\t// TODO: proper filtering which parts to color and whether to color diffuse or emissive\n\t\tcolorRecursive(this.threeObject, col)\n\t}\n\n\tset accentColor(col:Color){\n\t\tcolorRecursive(this.threeObject, col)\n\t}\n\n\tconstructor(scene:THREE.Scene, template:THREE.Object3D, config:MeshConfig){\n\t\tsuper(scene, template.clone(), config)\n\t\tcopy(this, config, [\"baseColor\", \"accentColor\"])\n\t}\n}\n\nexport class ThreeMeshFactory implements MeshFactory{\n\n\tthreeScene:THREE.Scene\n\n\tconstructor(scene:THREE.Scene){\n\t\tthis.threeScene = scene\n\t}\n\n\tcreateFromModel(config:ModelMeshConfig){\n\t\treturn new ThreeMesh(\n\t\t\tthis.threeScene,\n\t\t\t(config.asset as ThreeModel).threeObject.clone(),\n\t\t\tconfig\n\t\t)\n\t}\n}","\nimport {SceneInfo} from \"./sceneinfo\"\nimport {ThreeGraphics} from \"./threegraphics\"\nimport {GraphicsController} from \"domain/graphics/graphicscontroller\"\n\nexport class ThreeGraphicsController implements GraphicsController{\n\n\tgraphics:ThreeGraphics\n\n\tconstructor(graphics:ThreeGraphics){\n\t\tthis.graphics = graphics\n\n\t\tconst resize = ()=>{\n\t\t\tgraphics.renderer.setSize(\n\t\t\t\tgraphics.canvas.clientWidth,\n\t\t\t\tgraphics.canvas.clientHeight,\n\t\t\t\tfalse\n\t\t\t)\n\n\t\t\tconst cam = (graphics.scene.userData as SceneInfo).activeCamera\n\t\t\tcam.aspect = graphics.canvas.clientWidth / graphics.canvas.clientHeight\n\t\t\tcam.updateProjectionMatrix()\n\t\t}\n\t\t\n\t\twindow.addEventListener('resize', resize)\n\t\tresize()\n\t}\n\n\tupdate(time: number){\n\t\tthis.graphics.renderer.render(\n\t\t\tthis.graphics.scene, \n\t\t\t(this.graphics.scene.userData as SceneInfo).activeCamera\n\t\t)\n\t}\n}","\nimport {Color, copyIfPresent} from \"utils\"\nimport {SceneNode, SceneNodeConfig} from \"./scenenode\"\nimport {Model} from \"./model\"\n\nexport interface Mesh extends SceneNode<\"mesh\">{\n\tbaseColor: Color\n\taccentColor: Color\n}\n\nexport class MeshConfig extends SceneNodeConfig<\"mesh\">{\n\tkind: \"mesh\" = \"mesh\"\n\tbaseColor: Color\n\taccentColor: Color\n\n\tconstructor(config: Partial<MeshConfig> = {}){\n\t\tsuper(config)\n\t\tcopyIfPresent(this, config, [\"baseColor\", \"accentColor\"])\n\t}\n}\n\nexport class ModelMeshConfig extends MeshConfig{\n\tasset:Model\n\tconstructor(config: Partial<MeshConfig> & Pick<ModelMeshConfig, \"asset\">){\n\t\tsuper(config)\n\t\tthis.asset = config.asset\n\t}\n}\n\nexport interface MeshFactory{\n\tcreateFromModel: (config:ModelMeshConfig) => Mesh\n}","\nexport class ChecklistItem{\n\tcheck:()=>void\n\tnote?:string\n\n\tconstructor(onCheck:()=>void, note?:string){\n\t\tthis.note = note\n\t\tthis.check = onCheck\n\t}\n}\n\nexport class Checklist{\n\titems = new Set<ChecklistItem>()\n\tnumTotalItems:number = 0\n\tonItemCheck:(note?:string)=>void\n\tonComplete:()=>void\n\n\tconstructor(\n\t\t{\n\t\t\tonItemCheck = (note?:string)=>{},\n\t\t\tonComplete = ()=>{}\n\t\t}:{\n\t\t\tonItemCheck?:(note?:string)=>void,\n\t\t\tonComplete?:()=>void\n\t\t} = {}\n\t){\n\t\tthis.onItemCheck = onItemCheck\n\t\tthis.onComplete = onComplete\n\t}\n\n\tnewItem({onCheck = ()=>{}, note}:{onCheck?:()=>void, note?:string} = {}){\n\t\tthis.numTotalItems++\n\t\tlet checklist = this\n\n\t\tlet thisItem = new ChecklistItem(()=>{\n\t\t\tonCheck()\n\t\t\t\n\t\t\tchecklist.onItemCheck(thisItem.note)\n\t\t\tchecklist.items.delete(thisItem)\n\t\t\t\n\t\t\tif(checklist.items.size == 0){\n\t\t\t\tchecklist.onComplete()\n\t\t\t}\n\t\t}, note)\n\n\t\tthis.items.add(thisItem)\n        return thisItem\n\t}\n\n\tgetProgress(){\n\t\treturn 1.0 - this.items.size / this.numTotalItems\n\t}\n\n\treset(){\n\t\tthis.items.clear()\n\t\tthis.numTotalItems = 0\n\t}\n}\n","import { Controller } from \"domain/controller/controller\";\n\nenum Keys {\n\tUP = \"KeyW\",\n\tDOWN = \"KeyS\",\n\tRIGHT = \"KeyD\",\n\tLEFT = \"KeyA\",\n\tSHOOT = \"Space\",\n\tPAUSE = \"Pause\",\n\tSWITCH_MODE = \"KeyM\"\n}\n\nexport class Keyboard implements Controller {\n\n\tprivate shooting: boolean = false\n\tprivate currentStrategy: ControlStrategy = new RelativeStrategy()\n\n\tconstructor() {\n\t\tdocument.addEventListener(\"keydown\", (event) => {\n\t\t\tthis.onKeyAction(event, true)\n\t\t})\n\t\tdocument.addEventListener(\"keyup\", (event) => {\n\t\t\tthis.onKeyAction(event, false)\n\t\t})\n\t}\n\n\tgetAbsoluteDirection(): number {\n\t\treturn this.currentStrategy.getAbsoluteDirection();\n\t}\n\n\tgetTurnRate(): number {\n\t\treturn this.currentStrategy.getTurnRate();\n\t}\n\n\tgetThrust(): number {\n\t\treturn this.currentStrategy.getThrust();\n\t}\n\n\tisShooting(): boolean {\n\t\treturn this.shooting\n\t}\n\n\tsetPauseCallback(callback: () => void): void {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\tprivate onKeyAction(event: KeyboardEvent, isPressed: boolean) {\n\t\tif (!event.repeat) {\n\t\t\tthis.onGeneralKeyAction(event.code, isPressed)\n\t\t\tthis.currentStrategy.onKeyAction(event.code, isPressed)\n\t\t}\n\t}\n\tprivate onGeneralKeyAction(keyCode: string, isPressed: boolean) {\n\t\tswitch (keyCode) {\n\t\t\tcase Keys.SHOOT:\n\t\t\t\tthis.shooting = isPressed;\n\t\t\t\tbreak;\n\t\t\tcase Keys.SWITCH_MODE:\n\t\t\t\tif (isPressed) {\n\t\t\t\t\tthis.switchStrategy();\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t}\n\t}\n\tprivate switchStrategy() {\n\t\tif (this.currentStrategy instanceof RelativeStrategy) {\n\t\t\tconsole.log(\"Switch to absolute keyboard\")\n\t\t\tthis.currentStrategy = new AbsoluteStrategy()\n\t\t} else {\n\t\t\tconsole.log(\"Switch to relative keyboard\")\n\t\t\tthis.currentStrategy = new RelativeStrategy()\n\t\t}\n\t}\n}\n\ninterface ControlStrategy {\n\tgetAbsoluteDirection(): number\n\tgetTurnRate(): number\n\tgetThrust(): number\n\tonKeyAction(keyCode: string, isPressed: boolean): void\n}\n\nclass RelativeStrategy implements ControlStrategy {\n\n\tprivate turnRate: number = 0\n\tprivate thrust: number = 0\n\n\tprivate valueLeft = 0;\n\tprivate valueRight = 0;\n\n\tgetAbsoluteDirection(): number {\n\t\treturn undefined;\n\t}\n\n\tgetTurnRate(): number {\n\t\treturn this.turnRate\n\t}\n\n\tgetThrust(): number {\n\t\treturn this.thrust\n\t}\n\n\tonKeyAction(keyCode: string, isPressed: boolean) {\n\t\tif (keyCode == Keys.UP) {\n\t\t\tthis.thrust = isPressed ? 1 : 0\n\t\t}\n\t\tif (keyCode == Keys.LEFT) {\n\t\t\tthis.valueLeft = isPressed ? 1 : 0\n\t\t}\n\t\tif (keyCode == Keys.RIGHT) {\n\t\t\tthis.valueRight = isPressed ? 1 : 0\n\t\t}\n\t\tthis.turnRate = this.valueLeft - this.valueRight;\n\t}\n}\n\nclass AbsoluteStrategy implements ControlStrategy {\n\n\tprivate absoluteDirection: number = undefined\n\tprivate thrust: number = 0\n\n\tprivate valueUp: number = 0\n\tprivate valueDown: number = 0\n\tprivate valueLeft: number = 0\n\tprivate valueRight: number = 0\n\n\tgetAbsoluteDirection(): number {\n\t\treturn this.absoluteDirection\n\t}\n\n\tgetTurnRate(): number {\n\t\treturn undefined\n\t}\n\n\tgetThrust(): number {\n\t\treturn this.thrust\n\t}\n\n\tonKeyAction(keyCode: string, isPressed: boolean) {\t\t\n\t\tswitch (keyCode) {\n\t\t\tcase Keys.UP:\n\t\t\t\tthis.valueUp = isPressed ? 1 : 0\n\t\t\t\tbreak\n\t\t\tcase Keys.DOWN:\n\t\t\t\tthis.valueDown = isPressed ? 1 : 0\n\t\t\t\tbreak\n\t\t\tcase Keys.RIGHT:\n\t\t\t\tthis.valueRight = isPressed ? 1 : 0\n\t\t\t\tbreak\n\t\t\tcase Keys.LEFT:\n\t\t\t\tthis.valueLeft = isPressed ? 1 : 0\n\t\t\t\tbreak\n\t\t}\n\t\tlet thrustX = this.valueRight - this.valueLeft;\n\t\tlet thrustY = this.valueUp - this.valueDown;\n\n\t\tif (thrustX != 0 || thrustY != 0) {\n\t\t\tthis.absoluteDirection = Math.atan2(thrustY, thrustX)\n\t\t} else {\n\t\t\tthis.absoluteDirection = undefined\n\t\t}\n\t\tthis.thrust = (thrustX != 0 || thrustY != 0) ? 1 : 0;\n\t}\n}","\nimport {ShapeConfig, Shape} from \"./shape\"\nimport {copyIfPresent} from \"utils\"\n\nexport interface Circle extends Shape<\"circle\">{\n\tkind: \"circle\"\n\tradius: number\n}\n\nexport class CircleConfig extends ShapeConfig<\"circle\">{\n\tkind: \"circle\" = \"circle\"\n\tradius = 1\n\t\n\tconstructor(config: Partial<CircleConfig>){\n\t\tsuper(config)\n\t\tcopyIfPresent(this, config, [\"radius\"])\n\t}\n}","\nimport {vec2} from \"gl-matrix\"\nimport {Kind, copyIfPresent} from \"utils\"\n\n// parameters that are common to all shapes\n\nexport interface Shape<K extends Kind> {\n    kind: K\n\toffset: vec2\n\toffsetAngle: number\n\tboundingRadius: number\n}\n\nexport class ShapeConfig<K extends Kind>{\n\tkind: K\n\toffset = vec2.fromValues(0, 0)\n\toffsetAngle = 0\n\n\tconstructor(config:Partial<ShapeConfig<K>>){\n\t\tthis.kind = config.kind\n\t\tcopyIfPresent(this, config, [\"offset\", \"offsetAngle\"])\n\t}\n}","import {vec2} from \"gl-matrix\"\nimport {ShapeConfig, Shape} from \"./shape\"\nimport {copyIfPresent} from \"utils\"\n\nexport interface RigidBody{\n\tkind: \"rigidbody\"\n\n\t//readonly shapes: Shape<any>[]\n\n\tmass: number\n\n\tposition: vec2\n\tvelocity: vec2\n\tdamping: number\n\n\tangle: number\n\tangularVelocity: number\n\tangularDamping: number\n\n\tapplyForce(force:vec2, localPointOfApplication?:vec2):void\n\tapplyLocalForce(force:vec2, localPointOfApplication?:vec2):void\n\tapplyImpulse(impulse:vec2, localPointOfApplication?:vec2):void\n\tapplyLocalImpulse(impulse:vec2, localPointOfApplication?:vec2):void\n\tapplyTorque(torque:number):void\n\tapplyAngularMomentum(angularMomentum:number):void\n\n\tremove():void\n}\n\nexport class RigidBodyConfig{\n\tshapes: ShapeConfig<any>[]\n\t\n\tmass = 1\n\n\tposition = vec2.fromValues(0, 0)\n\tvelocity = vec2.fromValues(0, 0)\n\tdamping = 0.1\n\n\tangle = 0\n\tangularVelocity = 0\n\tangularDamping = 0.1\n\n\tconstructor(config:Partial<RigidBodyConfig>){\n\t\tcopyIfPresent(this, config, [\n\t\t\t\"shapes\", \"mass\", \"position\", \"velocity\", \"damping\",\n\t\t\t\"angle\", \"angularVelocity\", \"angularDamping\"\n\t\t])\n\t}\n}","/**\n * Wraps an angle in order to be in the limits of the wrapping point.\n * \n * @param angle Angle to be wrapped in rad\n * @param wrapAt Wrapping point. Defaults to Math.PI\n * \n * @returns the wrapped angle in the range between [-wrapAt, wrapAt)\n */\nexport function wrapAngle(angle: number, wrapAt = Math.PI): number {\n\tlet revs = (angle - wrapAt) / 2.0 / Math.PI;\n  return (revs - Math.floor(revs) - 1) * 2.0 * Math.PI + wrapAt\n}","\nimport {ThreeGraphics} from \"adapters/graphics/threegraphics/threegraphics\"\nimport {ModelMeshConfig, Mesh} from \"domain/graphics/mesh\"\nimport {Checklist} from \"./checklist\"\nimport { P2Physics } from \"adapters/physics/p2/p2physics\"\nimport { CircleConfig } from \"domain/physics/circle\"\nimport { vec2, quat } from \"gl-matrix\"\nimport { RigidBody, RigidBodyConfig } from \"domain/physics/rigidbody\"\nimport { Controller } from \"domain/controller/controller\"\nimport { Keyboard } from \"adapters/controller/keyboard\"\nimport { wrapAngle } from \"utilities/math_utils\"\n\nlet graphics = new ThreeGraphics(document.getElementById(\"rendertarget\") as HTMLCanvasElement)\nlet physics = new P2Physics()\n\nlet checklist = new Checklist({onComplete:start})\n\nlet loadGlider = checklist.newItem()\nconst gliderAsset = graphics.model.load(\n\t\"glider/glider.gltf\",\n\tloadGlider.check\n)\n\nclass Glider{\n\tbody:RigidBody\n\tmesh:Mesh\n\tcontroller:Controller\n\n\tthrust:number = 0\n\n\tconstructor(bodyCfg:RigidBodyConfig, modelCfg:ModelMeshConfig, controller:Controller){\n\t\tthis.body = physics.addRigidBody(bodyCfg)\n\t\tthis.mesh = graphics.mesh.createFromModel(modelCfg)\n\t\tthis.controller = controller\n\t}\n\n\tupdate(){\n\t\tthis.thrust = this.controller.getThrust() * 10;\n\t\tthis.body.applyLocalForce(vec2.fromValues(this.thrust, 0))\n\n\t\tconst turnRate = this.controller.getTurnRate()\n\t\tif(turnRate != undefined) {\n\t\t\tthis.body.applyAngularMomentum(turnRate * 0.3)\n\t\t}\n\t\tconst direction = this.controller.getAbsoluteDirection()\n\t\tif(direction != undefined) {\n\t\t\tthis.turnToDirection(direction)\n\t\t}\n\t\t\n\t\tthis.mesh.position = [\n\t\t\tthis.body.position[0], this.body.position[1], 0]\n\t\tthis.mesh.orientation = quat.fromEuler(\n\t\t\t[0,0,0,0], 0, 0, this.body.angle /Math.PI * 180)\n\t}\n\tturnToDirection(direction: number) {\n\t\tlet wrappedAngle = wrapAngle(this.body.angle);\t\t\n\t\tlet directionDiff = wrapAngle(wrappedAngle - direction);\n\t\tlet threshold = 0.0001;\n\t\tif(Math.abs(directionDiff) > threshold) {\n\t\t\tlet sign = Math.sign(directionDiff)\n\t\t\tthis.body.applyAngularMomentum(-sign * 0.3)\n\t\t}\n\t}\n}\n\nfunction start(){\n\n\tconst gliderBodyCfg = new RigidBodyConfig({\n\t\tshapes:[new CircleConfig({radius:1})],\n\t\tdamping: 0.7,\n\t\tangularDamping: 0.99\n\t})\n\n\tconst gliderModelCfg:ModelMeshConfig = new ModelMeshConfig({\n\t\tasset:gliderAsset\n\t})\n\t\n\tconst controller = new Keyboard()\n\tlet gliders:Glider[] = []\n\tfor(let i=0; i<50; i++){\n\t\tlet glider = new Glider(gliderBodyCfg, gliderModelCfg, controller)\n\t\tglider.body.position = vec2.fromValues(Math.random()*20-10, Math.random()*20-10)\n\t\tglider.body.angle = Math.random()*1000\n\t\tgliders.push(glider)\n\t}\n\n\tfunction animate(time:number){\n\t\trequestAnimationFrame(animate)\n\n\t\tfor(let glider of gliders){\n\t\t\tglider.update()\n\t\t}\n\n\t\tphysics.step(1/60)\n\n\t\tgraphics.control.update(time)\n\t}\n\trequestAnimationFrame(animate)\n\t\n}\n\n\n\n","\nimport {vec3} from \"gl-matrix\"\n\nimport * as THREE from \"three\"\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\n\nimport {Graphics} from \"domain/graphics/graphics\"\nimport {GraphicsController} from \"domain/graphics/graphicscontroller\"\nimport {CameraConfig} from \"domain/graphics/camera\"\n\nimport {SceneInfo} from \"./sceneinfo\"\n\nimport {ThreeModelLoader} from \"./threemodel\"\n\nimport {ThreeCameraFactory, ThreeCamera} from \"./threecamera\"\nimport {ThreeLightFactory} from \"./threelight\"\nimport {ThreeMeshFactory} from \"./threemesh\"\n\nimport {ThreeGraphicsController} from \"./threegraphicscontroller\"\n\nexport class ThreeGraphics implements Graphics{\n\n\tcanvas:HTMLCanvasElement\n\trenderer:THREE.WebGLRenderer\n\tscene:THREE.Scene\n\n\tmodel: ThreeModelLoader\n\n\tcamera: ThreeCameraFactory\n\tlight: ThreeLightFactory\n\tmesh: ThreeMeshFactory\n\t//environment: EnvironmentFactory\n\tcontrol: GraphicsController\n\n\tconstructor(canvas:HTMLCanvasElement){\n\t\tconst that = this\n\n\t\tthis.canvas = canvas\n\t\tthis.renderer = new THREE.WebGLRenderer({canvas:canvas})\n\t\tthis.scene = new THREE.Scene()\n\n\t\tthis.model = new ThreeModelLoader()\n\n\t\tthis.camera = new ThreeCameraFactory(this.scene)\n\t\tthis.light = new ThreeLightFactory(this.scene)\n\t\tthis.mesh = new ThreeMeshFactory(this.scene)\n\n\n\t\t// controllable test camera\n\t\tlet defaultCam = this.camera.create(new CameraConfig())\n\t\tdefaultCam.position = vec3.fromValues(0, 0, 10)\n\t\tdefaultCam.activate()\n\n\t\tconst controls = new OrbitControls(defaultCam.threeObject, this.renderer.domElement)\n\t\tcontrols.screenSpacePanning = true\n\n\t\t// default lighting\n\t\tthis.scene.add(new THREE.HemisphereLight(\"white\", \"black\"))\n\n\t\t// origin\n\t\tthis.scene.add(new THREE.AxesHelper())\n\n\n\t\tthis.control = new ThreeGraphicsController(this)\n\t}\n\n}\n"],"sourceRoot":""}