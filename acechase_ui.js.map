{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/adapters/physics/p2/p2shape.ts","webpack:///./src/domain/physics/rigidbody.ts","webpack:///./src/adapters/physics/p2/p2rigidbody.ts","webpack:///./src/domain/physics/shape.ts","webpack:///./src/domain/physics/circle.ts","webpack:///./src/adapters/physics/p2/p2circle.ts","webpack:///./src/adapters/physics/p2/p2physics.ts","webpack:///./src/adapters/graphics/threegraphics/threeasset.ts","webpack:///./src/domain/graphics/graphicsobject.ts","webpack:///./src/domain/graphics/camera.ts","webpack:///./src/adapters/graphics/threegraphics/threegraphicsobject.ts","webpack:///./src/adapters/graphics/threegraphics/threemodelasset.ts","webpack:///./src/domain/graphics/model.ts","webpack:///./src/adapters/graphics/threegraphics/threemodel.ts","webpack:///./src/adapters/graphics/threegraphics/threecamera.ts","webpack:///./src/checklist.ts","webpack:///./src/ui_main.ts","webpack:///./src/adapters/graphics/threegraphics/threegraphics.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","p2shapeFactory","factories","kind","factory","this","config","Error","rigidBodyDefaults","mass","position","fromValues","velocity","damping","angle","angularVelocity","angularDamping","p2world","toBeDeleted","p2body","p2","filledConfig","assign","shapeCfg","shapes","shape","createShape","addShape","p2shape","addBody","updateMassProperties","copy","clone","v","phi","omega","force","localPointOfApplication","applyForce","applyForceLocal","impulse","applyImpulse","applyImpulseLocal","torque","angularForce","angularMomentum","invInertia","removeBody","shapeDefaults","offset","offsetAngle","circleDefaults","radius","register","updateBoundingRadius","body","aabbNeedsUpdate","super","updateP2","boundingRadius","gravity","dt","step","threeAssetFactory","onLoaded","onError","graphicsObjectDefaults","orientation","scaling","cameraDefaults","nearClip","farClip","verticalAngleOfViewInDeg","ThreeGraphicsObject","threeObject","set","q","quaternion","scale","threeScene","remove","threeObjectFactory","scene","gltfLoader","model","that","load","file","gltf","e","modelDefaults","color","g","b","asset","add","nc","near","updateProjectionMatrix","fc","far","aov","fov","userData","activeCamera","ChecklistItem","onCheck","note","check","graphics","canvas","renderer","defaultCam","OrbitControls","domElement","screenSpacePanning","resize","setSize","clientWidth","clientHeight","cam","aspect","addEventListener","createAsset","createObject","time","render","document","getElementById","physics","bodyCfg","modelCfg","addRigidBody","addObject","fromEuler","Math","PI","loadGlider","onItemCheck","onComplete","items","Set","numTotalItems","checklist","thisItem","delete","size","clear","gliderBodyCfg","gliderModelCfg","gliderAsset","gliders","glider","random","thrust","spinLeft","spinRight","onKeyAction","down","evt","code","requestAnimationFrame","animate","applyLocalForce","applyAngularMomentum","update","newItem","loadAsset"],"mappings":"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","file":"acechase_ui.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([71,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {Shape, ShapeConfig, shapeDefaults} from \"../../../domain/physics/shape\"\nimport * as p2 from \"p2\"\nimport { vec2 } from \"gl-matrix\"\nimport {Kind, Registry} from \"../../../utils\"\n\nexport abstract class P2Shape<K extends Kind> implements Shape<K>{\n\tkind: K\n\t\n\tabstract p2shape: p2.Shape\n\t\n\tupdateP2(){\n\t\tthis.p2shape.updateBoundingRadius()\n\t\tif(this.p2shape.body !== null){ // when called before the shape was added to the body\n\t\t\tthis.p2shape.body.aabbNeedsUpdate = true\n\t\t\tthis.p2shape.body.updateBoundingRadius()\n\t\t}\n\t}\n\n\tset offset(p: vec2){\n\t\tvec2.copy(this.p2shape.position, p)\n\t}\n\tget offset(){\n\t\treturn vec2.clone(this.p2shape.position)\n\t}\n\n\tset offsetAngle(phi: number){\n\t\tthis.p2shape.angle = phi\n\t}\n\tget offsetAngle(){\n\t\treturn this.p2shape.angle\n\t}\n\n\tabstract boundingRadius: number\n}\n\n\n// factory for distinct shape types\n// where shape modules can register their individual factories\ntype P2ShapeConstructor<K extends Kind> = new(config: ShapeConfig<K>) => P2Shape<K>\n\nclass P2ShapeFactory{\n\n    private factories: Registry<P2ShapeConstructor<any>> = {}\n\n    register(kind: string, factory: P2ShapeConstructor<any>): void {\n        this.factories[kind] = factory\n    }\n\n    createShape<K extends Kind>(config: ShapeConfig<K>): P2Shape<K> {\n\t\tif(!this.factories.hasOwnProperty(config.kind)){\n\t\t\tthrow new Error(\"P2ShapeFactory cannot create a \" + config.kind)\n\t\t}\n        return new this.factories[config.kind](config)\n    }\n}\n\nexport const p2shapeFactory = new P2ShapeFactory()\n","import {vec2} from \"gl-matrix\"\nimport {ShapeConfig, Shape} from \"./shape\"\nimport {Optionals} from \"../../utils\"\n\nexport interface RigidBody{\n\tkind: \"rigidbody\"\n\n\t//readonly shapes: Shape<any>[]\n\n\tmass: number\n\n\tposition: vec2\n\tvelocity: vec2\n\tdamping: number\n\n\tangle: number\n\tangularVelocity: number\n\tangularDamping: number\n\n\tapplyForce(force:vec2, localPointOfApplication?:vec2):void\n\tapplyLocalForce(force:vec2, localPointOfApplication?:vec2):void\n\tapplyImpulse(impulse:vec2, localPointOfApplication?:vec2):void\n\tapplyLocalImpulse(impulse:vec2, localPointOfApplication?:vec2):void\n\tapplyTorque(torque:number):void\n\tapplyAngularMomentum(angularMomentum:number):void\n\n\tremove():void\n}\n\nexport interface RigidBodyConfig{\n\tshapes: ShapeConfig<any>[]\n\t\n\tmass?: number\n\n\tposition?: vec2\n\tvelocity?: vec2\n\tdamping?: number\n\n\tangle?: number\n\tangularVelocity?: number\n\tangularDamping?: number\n}\n\nexport const rigidBodyDefaults:Optionals<RigidBodyConfig> = {\n\tmass: 1,\n\t\n\tposition: vec2.fromValues(0, 0),\n\tvelocity: vec2.fromValues(0, 0),\n\tdamping: 0.1,\n\n\tangle: 0,\n\tangularVelocity: 0,\n\tangularDamping: 0.1\n}","import * as p2 from \"p2\"\nimport {vec2} from \"gl-matrix\"\nimport {P2Physics} from \"./p2physics\"\nimport {Shape, ShapeConfig} from \"../../../domain/physics/shape\"\nimport {P2Shape, p2shapeFactory} from \"./p2shape\"\nimport {RigidBody, RigidBodyConfig, rigidBodyDefaults} from \"../../../domain/physics/rigidbody\"\n\nexport class P2RigidBody implements RigidBody{\n\tkind:\"rigidbody\"\n\tp2world:p2.World\n\tp2body:p2.Body\n\t//readonly shapes: Shape<any>[]\n\ttoBeDeleted: boolean = false\n\n\tconstructor(p2world:p2.World, config:RigidBodyConfig){\n\t\tthis.p2world = p2world\n\t\tthis.p2body = new p2.Body({mass:1}) // mass set to 1 so the body is considered DYNAMIC\n\n\t\tconst filledConfig:Required<RigidBodyConfig> =\n\t\t\t{...rigidBodyDefaults, ...config}\n\n\t\tObject.assign(this, filledConfig)\n\n\t\tfor(let shapeCfg of config.shapes){\n\t\t\tlet shape = p2shapeFactory.createShape<any>(shapeCfg)\n\t\t\t//this.shapes.push(shape)\n\t\t\tthis.p2body.addShape(shape.p2shape)\n\t\t}\n\n\t\tthis.p2world.addBody(this.p2body)\n\t}\n\n\tset mass(m: number){\n\t\tthis.p2body.mass = m\n\t\tthis.p2body.updateMassProperties()\n\t}\n\tget mass(){\n\t\treturn this.p2body.mass\n\t}\n\n\tset position(p: vec2){\n\t\tvec2.copy(this.p2body.position, p)\n\t}\n\tget position(){\n\t\treturn vec2.clone(this.p2body.position)\n\t}\n\n\tset velocity(v: vec2){\n\t\tvec2.copy(this.p2body.velocity, v)\n\t}\n\tget velocity(){\n\t\treturn vec2.clone(this.p2body.velocity)\n\t}\n\n\tset damping(d: number){\n\t\tthis.p2body.damping = d\n\t}\n\tget damping(){\n\t\treturn this.p2body.damping\n\t}\n\n\n\tset angle(phi: number){\n\t\tthis.p2body.angle = phi\n\t}\n\tget angle(){\n\t\treturn this.p2body.angle\n\t}\n\n\tset angularVelocity(omega: number){\n\t\tthis.p2body.angularVelocity = omega\n\t}\n\tget angularVelocity(){\n\t\treturn this.p2body.angularVelocity\n\t}\n\n\tset angularDamping(d: number){\n\t\tthis.p2body.angularDamping = d\n\t}\n\tget angularDamping(){\n\t\treturn this.p2body.angularDamping\n\t}\n\n\n\tapplyForce(\n\t\tforce: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyForce(\n\t\t\t[force[0], force[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyLocalForce(\n\t\tforce: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyForceLocal(\n\t\t\t[force[0], force[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyImpulse(\n\t\timpulse: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyImpulse(\n\t\t\t[impulse[0], impulse[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyLocalImpulse(\n\t\timpulse: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyImpulseLocal(\n\t\t\t[impulse[0], impulse[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyTorque(torque: number){\n\t\tthis.p2body.angularForce += torque\n\t}\n\n\tapplyAngularMomentum(angularMomentum: number){\n\t\tthis.p2body.angularVelocity += this.p2body.invInertia * angularMomentum\n\t}\n\n\t\n\tremove(){\n\t\tthis.p2world.removeBody(this.p2body)\n\t}\n}","\nimport {vec2} from \"gl-matrix\"\nimport {Kind, Registry, Optionals} from \"../../utils\"\n\n// parameters that are common to all shapes\n\nexport interface Shape<K extends Kind> {\n    kind: K\n\toffset: vec2\n\toffsetAngle: number\n\tboundingRadius: number\n}\n\nexport interface ShapeConfig<K extends Kind>{\n\tkind: K\n\toffset?: vec2\n\toffsetAngle?: number\n}\n\nexport const shapeDefaults:Optionals<ShapeConfig<any>> = {\n\toffset: vec2.fromValues(0, 0),\n\toffsetAngle: 0\n}\n","\nimport {ShapeConfig, Shape, shapeDefaults} from \"./shape\"\nimport {Optionals} from \"../../utils\"\n\nexport interface Circle extends Shape<\"circle\">{\n\tkind: \"circle\"\n\tradius: number\n}\n\nexport interface CircleConfig extends ShapeConfig<\"circle\">{\n\tkind: \"circle\"\n\tradius?: number\n}\n\nexport const circleDefaults:Optionals<CircleConfig> = {\n\t...shapeDefaults,\n\tradius: 1\n}","\nimport * as p2 from \"p2\"\nimport {P2Shape, p2shapeFactory} from \"./p2shape\"\nimport {Circle, CircleConfig, circleDefaults} from \"../../../domain/physics/circle\"\n\nexport class P2Circle extends P2Shape<\"circle\"> implements Circle{\n\tkind:\"circle\"\n\tp2shape:p2.Circle\n\n\tconstructor(config: CircleConfig){\n\t\tconst filledConfig:Required<CircleConfig> =\n\t\t\t{...circleDefaults, ...config}\n\t\tsuper()\n\t\tthis.p2shape = new p2.Circle()\n\t\tObject.assign(this, filledConfig)\n\t}\n\n\tset radius(r: number){\n\t\tthis.p2shape.radius = r\n\t\tthis.updateP2()\n\t}\n\tget radius():number{\n\t\treturn this.p2shape.radius\n\t}\n\n\tset boundingRadius(r: number){\n\t\tthis.p2shape.radius = r\n\t\tthis.updateP2()\n\t}\n\tget boundingRadius(){\n\t\treturn this.p2shape.boundingRadius\n\t}\n}\n\np2shapeFactory.register(\"circle\", P2Circle)\n\n\n","\nimport {RigidBodyConfig, RigidBody, rigidBodyDefaults} from \"../../../domain/physics/rigidbody\"\nimport {Physics} from \"../../../domain/physics/physics\"\nimport {P2RigidBody} from \"./p2rigidbody\"\nimport * as p2 from \"p2\"\nimport \"./p2factorylist\"\n\nexport class P2Physics implements Physics{\n\n\tp2world:p2.World\n\n\tconstructor(){\n\t\tthis.p2world = new p2.World({gravity:[0, 0]})\n\t}\n\n\taddRigidBody(config: RigidBodyConfig):RigidBody{\n\t\tconst body = new P2RigidBody(this.p2world, config)\n\t\treturn body\n\t}\n\n\tstep(dt:number){\n\t\tthis.p2world.step(dt)\n\t}\n\n}\n\n","\nimport {Asset, AssetConfig} from \"../../../domain/graphics/asset\"\nimport {Kind, Registry} from \"../../../utils\"\n\ntype ThreeAssetConstructor<K extends Kind> =\n\tnew(\n\t\tconfig: AssetConfig<K>,\n\t\tonLoaded:()=>void,\n\t\tonError:(err:ErrorEvent)=>void\t\n\t) => Asset<K>\n\nclass ThreeAssetFactory{\n\n    private factories: Registry<ThreeAssetConstructor<any>> = {}\n\n    register(kind: string, factory: ThreeAssetConstructor<any>): void {\n        this.factories[kind] = factory\n    }\n\n    createAsset<K extends Kind>(\n\t\tconfig: AssetConfig<K>,\n\t\tonLoaded: ()=>void,\n\t\tonError: (err:ErrorEvent)=>void\n\t): Asset<K> {\n\t\tif(!this.factories.hasOwnProperty(config.kind)){\n\t\t\tthrow new Error(\"ThreeAssetFactory cannot create a \" + config.kind)\n\t\t}\n        return new this.factories[config.kind](config, onLoaded, onError)\n    }\n}\n\nexport const threeAssetFactory = new ThreeAssetFactory()","\nimport {vec3, quat} from \"gl-matrix\"\nimport {Kind, Optionals, Color, Registry} from \"../../utils\"\n\nexport interface GraphicsObjectConfig<K extends Kind>{\n\tkind:K\n\tposition?:vec3\n\torientation?:quat\n\tscaling?:vec3\n}\n\nexport interface GraphicsObject<K extends Kind>{\n\tkind:K\n\tposition?:vec3\n\torientation?:quat\n\tscaling?:vec3\n\tremove():void\n}\n\nexport const graphicsObjectDefaults:Optionals<GraphicsObjectConfig<any>> = {\n\tposition:vec3.fromValues(0, 0, 0),\n\torientation:quat.fromValues(0, 0, 0, 1),\n\tscaling:vec3.fromValues(1, 1, 1)\n}\n\n// factory for distinct object types\n// where graphics object modules can register their individual factories\ntype GraphicsObjectConstructor<K extends Kind> = new(config: GraphicsObjectConfig<K>) => GraphicsObject<K>\n\nclass GraphicsObjectFactory{\n\n    private factories: Registry<GraphicsObjectConstructor<any>> = {}\n\n    register(kind: string, factory: GraphicsObjectConstructor<any>): void {\n        this.factories[kind] = factory\n    }\n\n    createGraphicsObject<K extends Kind>(config: GraphicsObjectConfig<K>): GraphicsObject<K> {\n        return new this.factories[config.kind](config)\n    }\n}\n\nexport const graphicsObjectFactory = new GraphicsObjectFactory()","\nimport {GraphicsObject, GraphicsObjectConfig, graphicsObjectDefaults} from \"./graphicsobject\"\nimport {Optionals} from \"../../utils\"\n\n// the camera has a 90deg field of view, both horizontally\n// and vertically and a depth range from 0.0001 to 1.0\n// use scale x, y and z to modify\n\nexport interface Camera extends GraphicsObject<\"camera\">{\n\tkind:\"camera\"\n\tnearClip:number\n\tfarClip:number\n\tverticalAngleOfViewInDeg:number\n\tactivate():void\n}\n\nexport interface CameraConfig extends GraphicsObjectConfig<\"camera\">{\n\tkind:\"camera\"\n\tnearClip?:number\n\tfarClip?:number\n\tverticalAngleOfViewInDeg?:number\n}\n\nexport const cameraDefaults:Optionals<CameraConfig> = {\n\t...graphicsObjectDefaults,\n\tnearClip:0.1,\n\tfarClip:1000,\n\tverticalAngleOfViewInDeg:40\n}","\nimport * as THREE from \"three\"\nimport {GraphicsObject, GraphicsObjectConfig, graphicsObjectDefaults} from \"../../../domain/graphics/graphicsobject\"\nimport {vec3, quat} from \"gl-matrix\"\nimport {Kind, Optionals, Color, Registry} from \"../../../utils\"\n\nexport abstract class ThreeGraphicsObject<K extends Kind> implements GraphicsObject<K>{\n\tkind:K\n\tabstract threeObject:THREE.Object3D\n\tthreeScene:THREE.Scene\n\n\tset position(p:vec3){\n\t\tthis.threeObject.position.set(p[0], p[1], p[2])\n\t}\n\n\tset orientation(q:quat){\n\t\tthis.threeObject.quaternion.set(q[0], q[1], q[2], q[3])\n\t}\n\n\tset scaling(s:vec3){\n\t\tthis.threeObject.scale.set(s[0], s[1], s[2])\n\t}\n\n\tremove(){\n\t\tthis.threeScene.remove(this.threeObject)\n\t}\n}\n\n\ntype ThreeObjectConstructor<K extends Kind> =\n\tnew(scene:THREE.Scene, config: GraphicsObjectConfig<K>) => ThreeGraphicsObject<K>\n\nclass ThreeObjectFactory{\n\n    private factories: Registry<ThreeObjectConstructor<any>> = {}\n\n    register(kind: string, factory: ThreeObjectConstructor<any>): void {\n        this.factories[kind] = factory\n    }\n\n    createObject<K extends Kind>(\n\t\tscene: THREE.Scene,\n\t\tconfig: GraphicsObjectConfig<K>\n\t): ThreeGraphicsObject<K> {\n\t\tif(!this.factories.hasOwnProperty(config.kind)){\n\t\t\tthrow new Error(\"ThreeObjectFactory cannot create a \" + config.kind)\n\t\t}\n        return new this.factories[config.kind](scene, config)\n    }\n}\n\nexport const threeObjectFactory = new ThreeObjectFactory()","\nimport {Asset, AssetConfig} from \"../../../domain/graphics/asset\"\nimport {threeAssetFactory} from \"./threeasset\"\nimport * as THREE from \"three\"\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\n\nconst gltfLoader = new GLTFLoader()\n\nexport class ThreeModelAsset implements Asset<\"model\">{\n\tkind:\"model\"\n\tmodel:THREE.Object3D\n\t\n\tconstructor(\n\t\tconfig:AssetConfig<\"model\">,\n\t\tonLoaded:()=>void,\n\t\tonError:(err:ErrorEvent)=>void\n\t){\n\t\tthis.model = null\n\t\tconst that = this\n\t\t\n\t\tgltfLoader.load(\n\t\t\tconfig.file,\n\t\t\tfunction(gltf){\n\t\t\t\tthat.model = gltf.scene\n\t\t\t\tonLoaded()\n\t\t\t},\n\t\t\t(e)=>{},\n\t\t\tonError\n\t\t)\n\t}\n}\n\nthreeAssetFactory.register(\"model\", ThreeModelAsset)","\nimport {Color, Optionals} from \"../../utils\"\nimport {GraphicsObject, GraphicsObjectConfig, graphicsObjectDefaults} from \"./graphicsobject\"\nimport {Asset} from \"./asset\"\n\nexport interface Model extends GraphicsObject<\"model\">{\n\tcolor:Color\n}\n\nexport interface ModelConfig extends GraphicsObjectConfig<\"model\">{\n\tasset:Asset<\"model\">\n\tcolor?:Color\n}\n\nexport const modelDefaults:Optionals<ModelConfig> = {\n\t...graphicsObjectDefaults,\n\tcolor:{r:1, g:1, b:1}\n}","\nimport {Model, ModelConfig, modelDefaults} from \"../../../domain/graphics/model\"\nimport {ThreeGraphicsObject, threeObjectFactory} from \"./threegraphicsobject\"\nimport * as THREE from \"three\"\nimport { Color } from \"../../../utils\"\nimport { ThreeModelAsset } from \"./threemodelasset\"\n\nexport class ThreeModel extends ThreeGraphicsObject<\"model\"> implements Model{\n\n\tcolor:Color // TODO: use color\n\tthreeObject:THREE.Object3D\n\n\tconstructor(scene:THREE.Scene, config:ModelConfig){\n\t\tconst {kind, position, orientation, scaling,\n\t\t\tasset, color}:Required<ModelConfig> =\n\t\t\t{...modelDefaults, ...config}\n\t\tsuper()\n\n\t\tthis.threeScene = scene\n\t\tthis.threeObject = (asset as ThreeModelAsset).model.clone()\n\n\t\tObject.assign(this, {kind, position, orientation, scaling, color})\n\n\t\tthis.threeScene.add(this.threeObject)\n\t}\n\n}\n\nthreeObjectFactory.register(\"model\", ThreeModel)","\nimport {Camera, CameraConfig, cameraDefaults} from \"../../../domain/graphics/camera\"\nimport {ThreeGraphicsObject, threeObjectFactory} from \"./threegraphicsobject\"\nimport {SceneInfo} from \"./sceneinfo\"\nimport * as THREE from \"three\"\n\nexport class ThreeCamera extends ThreeGraphicsObject<\"camera\"> implements Camera{\n\n\tthreeObject:THREE.PerspectiveCamera\n\n\tset nearClip(nc:number){\n\t\tthis.threeObject.near = nc\n\t\tthis.threeObject.updateProjectionMatrix()\n\t}\n\n\tset farClip(fc:number){\n\t\tthis.threeObject.far = fc\n\t\tthis.threeObject.updateProjectionMatrix()\n\t}\n\n\tset verticalAngleOfViewInDeg(aov:number){\n\t\tthis.threeObject.fov = aov\n\t\tthis.threeObject.updateProjectionMatrix()\n\t}\n\n\tconstructor(scene:THREE.Scene, config:CameraConfig){\n\t\tconst filledConfig:Required<CameraConfig> =\n\t\t\t{...cameraDefaults, ...config}\n\t\tsuper()\n\n\t\tthis.threeScene = scene\n\t\tthis.threeObject = new THREE.PerspectiveCamera()\n\n\t\tObject.assign(this, filledConfig)\n\n\t\tthis.threeScene.add(this.threeObject)\n\t}\n\n\tactivate(){\n\t\t;(this.threeScene.userData as SceneInfo).activeCamera = this.threeObject\n\t}\n}\n\nthreeObjectFactory.register(\"camera\", ThreeCamera)","\nexport class ChecklistItem{\n\tcheck:()=>void\n\tnote?:string\n\n\tconstructor(onCheck:()=>void, note?:string){\n\t\tthis.note = note\n\t\tthis.check = onCheck\n\t}\n}\n\nexport class Checklist{\n\titems = new Set<ChecklistItem>()\n\tnumTotalItems:number = 0\n\tonItemCheck:(note?:string)=>void\n\tonComplete:()=>void\n\n\tconstructor(\n\t\t{\n\t\t\tonItemCheck = (note?:string)=>{},\n\t\t\tonComplete = ()=>{}\n\t\t}:{\n\t\t\tonItemCheck?:(note?:string)=>void,\n\t\t\tonComplete?:()=>void\n\t\t} = {}\n\t){\n\t\tthis.onItemCheck = onItemCheck\n\t\tthis.onComplete = onComplete\n\t}\n\n\tnewItem({onCheck = ()=>{}, note}:{onCheck?:()=>void, note?:string} = {}){\n\t\tthis.numTotalItems++\n\t\tlet checklist = this\n\n\t\tlet thisItem = new ChecklistItem(()=>{\n\t\t\tonCheck()\n\t\t\t\n\t\t\tchecklist.onItemCheck(thisItem.note)\n\t\t\tchecklist.items.delete(thisItem)\n\t\t\t\n\t\t\tif(checklist.items.size == 0){\n\t\t\t\tchecklist.onComplete()\n\t\t\t}\n\t\t}, note)\n\n\t\tthis.items.add(thisItem)\n        return thisItem\n\t}\n\n\tgetProgress(){\n\t\treturn 1.0 - this.items.size / this.numTotalItems\n\t}\n\n\treset(){\n\t\tthis.items.clear()\n\t\tthis.numTotalItems = 0\n\t}\n}\n","\nimport {ThreeGraphics} from \"./adapters/graphics/threegraphics/threegraphics\"\nimport {ModelConfig, Model} from \"./domain/graphics/model\"\nimport {Checklist} from \"./checklist\"\nimport { P2Physics } from \"./adapters/physics/p2/p2physics\"\nimport { CircleConfig } from \"./domain/physics/circle\"\nimport { vec2, quat } from \"gl-matrix\"\nimport { RigidBody, RigidBodyConfig } from \"./domain/physics/rigidbody\"\n\nlet graphics = new ThreeGraphics(document.getElementById(\"rendertarget\") as HTMLCanvasElement)\nlet physics = new P2Physics()\n\nclass Glider{\n\tbody:RigidBody\n\tmodel:Model\n\tconstructor(bodyCfg:RigidBodyConfig, modelCfg:ModelConfig){\n\t\tthis.body = physics.addRigidBody(bodyCfg)\n\t\t// TODO: the return type of the object factory\n\t\t// does not pass through additional properties like color\n\t\t// (I think it does but TypeScript doesn't know)\n\t\t// Maybe the \"kind\" must carry these parameters\n\t\tthis.model = graphics.addObject(modelCfg) as Model\n\t}\n\n\tupdate(){\n\t\tthis.model.position = [\n\t\t\tthis.body.position[0], this.body.position[1], 0]\n\t\tthis.model.orientation = quat.fromEuler(\n\t\t\t[0,0,0,0], 0, 0, this.body.angle /Math.PI * 180)\n\t}\n}\n\nfunction start(){\n\n\tconst gliderBodyCfg = {\n\t\tshapes:[{\n\t\t\tkind:\"circle\",\n\t\t\tradius:1\n\t\t} as CircleConfig],\n\t\tdamping: 0.7,\n\t\tangularDamping: 0.99\n\t}\n\n\tconst gliderModelCfg:ModelConfig = {\n\t\tkind:\"model\",\n\t\tasset:gliderAsset,\n\t\tcolor:{r:1, g:1, b:1}\n\t}\n\n\tlet gliders:Glider[] = []\n\tfor(let i=0; i<50; i++){\n\t\tlet glider = new Glider(gliderBodyCfg, gliderModelCfg)\n\t\tglider.body.position = vec2.fromValues(Math.random()*20-10, Math.random()*20-10)\n\t\tglider.body.angle = Math.random()*1000\n\t\tgliders.push(glider)\n\t}\n\n\tlet thrust = 0\n\tlet spinLeft = 0\n\tlet spinRight = 0\n\n\tfunction onKeyAction(key:string, down:boolean){\n\t\tif(key == \"KeyW\"){thrust = down? 1:0}\n\t\tif(key == \"KeyA\"){spinLeft = down? 1:0}\n\t\tif(key == \"KeyD\"){spinRight = down? 1:0}\n\t}\n\tdocument.addEventListener('keydown', function(evt:KeyboardEvent){\n\t\tonKeyAction(evt.code, true)\n\t})\n\tdocument.addEventListener('keyup', function(evt:KeyboardEvent){\n\t\tonKeyAction(evt.code, false)\n\t})\n\n\tfunction animate(time:number){\n\t\trequestAnimationFrame(animate)\n\n\t\tfor(let glider of gliders){\n\t\t\tglider.body.applyLocalForce(vec2.fromValues(thrust*10, 0))\n\t\t\tglider.body.applyAngularMomentum((spinLeft-spinRight)*0.3)\n\t\t\tglider.update()\n\t\t}\n\n\t\tphysics.step(1/60)\n\n\t\tgraphics.update(time)\n\t}\n\trequestAnimationFrame(animate)\n\t\n}\n\n\nlet checklist = new Checklist({onComplete:start})\n\nlet loadGlider = checklist.newItem()\nconst gliderAsset = graphics.loadAsset<\"model\">(\n\t{kind:\"model\", file:\"glider/glider.gltf\"},\n\tloadGlider.check\n)\n","\nimport {Kind} from \"../../../utils\"\nimport {Graphics} from \"../../../domain/graphics/graphics\"\nimport {GraphicsObject, GraphicsObjectConfig} from \"../../../domain/graphics/graphicsobject\"\nimport {Asset, AssetConfig} from \"../../../domain/graphics/asset\"\nimport {threeAssetFactory} from \"./threeasset\"\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\nimport {cameraDefaults} from \"../../../domain/graphics/camera\"\nimport {SceneInfo} from \"./sceneinfo\"\nimport * as THREE from \"three\"\nimport { threeObjectFactory } from \"./threegraphicsobject\"\nimport \"./factorylist\"\n\nexport class ThreeGraphics implements Graphics{\n\n\tcanvas:HTMLCanvasElement\n\trenderer:THREE.Renderer\n\tscene:THREE.Scene\n\n\tconstructor(canvas:HTMLCanvasElement){\n\t\tthis.canvas = canvas\n\t\tthis.renderer = new THREE.WebGLRenderer({canvas:canvas})\n\t\tthis.scene = new THREE.Scene()\n\n\t\t// controllable test camera\n\t\tconst defaultCam = new THREE.PerspectiveCamera(\n\t\t\tcameraDefaults.verticalAngleOfViewInDeg,\n\t\t\t1.0,\n\t\t\tcameraDefaults.nearClip,\n\t\t\tcameraDefaults.farClip\n\t\t)\n\t\tdefaultCam.position.set(0, 0, 10)\n\t\tthis.scene.add(defaultCam)\n\t\t;(this.scene.userData as SceneInfo).activeCamera = defaultCam\n\n\t\tconst controls = new OrbitControls(defaultCam, this.renderer.domElement)\n\t\tcontrols.screenSpacePanning = true\n\n\t\tthis.scene.add(new THREE.HemisphereLight(\"white\", \"black\"))\n\t\tthis.scene.add(new THREE.AxesHelper())\n\n\t\tconst that = this\n\t\tconst resize = ()=>{\n\t\t\tthat.renderer.setSize(that.canvas.clientWidth, that.canvas.clientHeight, false)\n\t\t\tconst cam = (this.scene.userData as SceneInfo).activeCamera\n\t\t\tcam.aspect = canvas.clientWidth / canvas.clientHeight\n\t\t\tcam.updateProjectionMatrix()\n\t\t}\n\t\t\n\t\twindow.addEventListener('resize', resize)\n\t\tresize()\n\t}\n\n\tloadAsset<K extends Kind>(\n\t\tconfig:AssetConfig<K>,\n\t\tonLoaded?:()=>void,\n\t\tonError?:(err:ErrorEvent)=>void\n\t):Asset<K>{\n\t\treturn threeAssetFactory.createAsset(config, onLoaded, onError)\n\t}\n\n\taddObject<K extends Kind>(config:GraphicsObjectConfig<K>):GraphicsObject<K>{\n\t\treturn threeObjectFactory.createObject(this.scene, config)\n\t}\n\n\tupdate(time:number){\n\t\tthis.renderer.render(this.scene, (this.scene.userData as SceneInfo).activeCamera)\n\t}\n}\n"],"sourceRoot":""}