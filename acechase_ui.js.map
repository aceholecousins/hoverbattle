{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/domain/graphics/scenenode.ts","webpack:///./src/domain/graphics/camera.ts","webpack:///./src/utils.ts","webpack:///./src/worker/debug.ts","webpack:///./src/worker/proxy.ts","webpack:///./src/worker/path.ts","webpack:///./src/worker/referencify.ts","webpack:///./src/worker/handlers.ts","webpack:///./src/worker/workerbridge.ts","webpack:///./src/worker/worker.ts","webpack:///./src/adapters/graphics/threegraphics/threerenderer.ts","webpack:///./src/adapters/graphics/threegraphics/threemodel.ts","webpack:///./src/domain/graphics/model.ts","webpack:///./src/adapters/graphics/threegraphics/threescenenode.ts","webpack:///./src/adapters/graphics/threegraphics/threecamera.ts","webpack:///./src/adapters/graphics/threegraphics/threelight.ts","webpack:///./src/adapters/graphics/threegraphics/threemesh.ts","webpack:///./src/adapters/graphics/threegraphics/threegraphicscontroller.ts","webpack:///./src/adapters/graphics/threegraphics/threeskybox.ts","webpack:///./src/domain/graphics/skybox.ts","webpack:///./src/adapters/controller/keyboard.ts","webpack:///./src/adapters/controller/controllerbridge/controllerserver.ts","webpack:///./src/ui_main.ts","webpack:///./src/adapters/graphics/threegraphics/threegraphics.ts","webpack:///./src/adapters/graphics/graphicsbridge/graphicsserver.ts","webpack:///./src/adapters/controller/controllerbridge/controllermanagerserver.ts","webpack:///./src/adapters/controller/defaultcontrollermanager.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","SceneNodeConfig","config","position","fromValues","orientation","scaling","this","kind","CameraConfig","super","nearClip","farClip","verticalAngleOfViewInDeg","onAspectChange","aspect","copy","target","source","keys","k","copyIfPresent","DBG_LOG","msgs","_createProxy","bridge","ref","JSON","stringify","children","resolvePath","remoteOtherIndexCounter","enqueueMsg","path","dispose","id","undefined","Proxy","set","prop","val","referencifyObject","receiver","parent","makeLazyPath","thisArg","args","construct","obj","Array","isArray","wrapped","referencifyChildren","__ref__","fn","__cb__","localOwnIndexCounter","newIndex","localRegistry","referencifyFunction","Error","resolveReferences","remoteOwnIndexCounter","field","resolveReferenceMembers","handleMessage","msg","connected","sendWhenConnected","sendAll","handleReady","remoteRegistry","add","pendingProxies","resolve","handleRegister","child","localOtherIndexCounter","handleLinkage","console","warn","handleCall","handleNew","handlePropertySet","handleDispose","workerFile","worker","Set","msgQueue","Worker","onmessage","receive","postMessage","event","remoteKey","isNaN","Promise","document","log","renderer","canvas","getElementById","threeObject","gltfLoader","GLTFLoader","ThreeModelLoader","file","onLoaded","onError","model","load","gltf","scene","adaptModel","mesh","material","normalMapType","meta","node","tris","updateMatrixWorld","bufGeom","geometry","toNonIndexed","verts","fromBufferGeometry","vertices","va","localToWorld","A","x","y","z","vb","B","vc","C","substring","remove","extractMetaData","threeScene","q","quaternion","scale","threeCam","resize","domElement","clientWidth","clientHeight","updateProjectionMatrix","addEventListener","nc","near","fc","far","aov","fov","cb","_onAspectChange","userData","activeCamera","ThreeCameraFactory","color","col","setRGB","g","b","groundColor","skyColor","ThreeLightFactory","colorRecursive","type","template","clone","ThreeMeshFactory","asset","graphics","setSize","env","background","threeCubemap","environment","threePmrem","time","render","cubeLoader","pmremGenerator","compileCubemapShader","ThreeSkyboxLoader","skybox","replace","map","pmrem","fromCubemap","texture","Keys","Keyboard","shooting","currentStrategy","RelativeStrategy","onKeyAction","getAbsoluteDirection","getTurnRate","getThrust","callback","isPressed","repeat","onGeneralKeyAction","code","keyCode","SHOOT","SWITCH_MODE","switchStrategy","AbsoluteStrategy","turnRate","thrust","valueLeft","valueRight","UP","LEFT","RIGHT","absoluteDirection","valueUp","valueDown","DOWN","thrustX","thrustY","Math","atan2","controller","bridgeKey","initProxy","controllerBridge","createProxy","err","error","setAbsoluteDirection","setTurnRate","setThrust","setShooting","isShooting","camera","light","defaultCam","activate","up","OrbitControls","screenSpacePanning","control","register","controllerManagerServer","controllerManager","newControllerCounter","controllerMap","Map","addConnectionCallback","controllerAdded","controllerManagerBridge","publishAllControllers","createRandomBridgeKey","controllerServer","values","update","connectedControllers","connectionCallbacks","initKeyboard","callbackToBeRemoved","delete","addController","requestAnimationFrame","animate"],"mappings":"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","file":"acechase_ui.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([74,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\nimport {vec3, quat} from \"gl-matrix\"\nimport {Kind, copyIfPresent} from \"utils\"\n\nexport interface SceneNode<K extends Kind>{\n\tkind:K\n\tposition?:vec3\n\torientation?:quat\n\tscaling?:vec3\n\tremove():void\n}\n\nexport class SceneNodeConfig<K extends Kind>{\n\tkind: K\n\tposition = vec3.fromValues(0, 0, 0)\n\torientation = quat.fromValues(0, 0, 0, 1)\n\tscaling = vec3.fromValues(1, 1, 1)\n\n\tconstructor(config:Partial<SceneNodeConfig<K>> = {}){\n\t\tthis.kind = config.kind\n\t\tcopyIfPresent(this, config, [\"position\", \"orientation\", \"scaling\"])\n\t}\n}\n\nexport type NodeKind<T> =\n\tT extends SceneNode<infer K> ? K:\n\tT extends SceneNodeConfig< infer K> ? K:\n\tnever\n","\nimport {SceneNode, SceneNodeConfig} from \"./scenenode\"\nimport {copyIfPresent} from \"utils\"\n\nexport interface Camera extends SceneNode<\"camera\">{\n\tkind:\"camera\"\n\tnearClip:number\n\tfarClip:number\n\tverticalAngleOfViewInDeg:number\n\tonAspectChange: (aspect:number)=>void\n\n\tactivate():void\n}\n\nexport class CameraConfig extends SceneNodeConfig<\"camera\">{\n\tkind:\"camera\" = \"camera\"\n\tnearClip = 0.1\n\tfarClip = 1000\n\tverticalAngleOfViewInDeg = 40\n\tonAspectChange = function(aspect:number){}\n\n\tconstructor(config:Partial<CameraConfig> = {}){\n\t\tsuper(config)\n\t\tcopyIfPresent(this, config, [\"nearClip\", \"farClip\", \"verticalAngleOfViewInDeg\"])\n\t}\t\n}\n\nexport interface CameraFactory{\n\tcreate(config: CameraConfig): Camera\n}","\nexport type Registry<T> = { [index: string]: T }\n\nexport interface Color{\n\tr:number\n\tg:number\n\tb:number\n}\n\nexport type Kind = string\n\n// https://stackoverflow.com/a/49579497/3825996\ntype OptionalKeys<T> = { [K in keyof T]-?:\n  ({} extends { [P in K]: T[K] } ? K : never)\n}[keyof T]\n\nexport type Optionals<T> = Required<Pick<T, OptionalKeys<T>>>\n\nexport function copy<T1, T2, K extends keyof T1 & keyof T2>(\n\ttarget:T1, source:T2, keys:K[]){\n\n\tfor(const k of keys){\n\t\t(target as any)[k] = (source as any)[k]\n\t}\n}\n\nexport function copyIfPresent<T1, T2, K extends keyof T1 & keyof T2>(\n\ttarget:T1, source:T2, keys:K[]){\n\n\tfor(const k of keys){\n\t\tif(k in source){\n\t\t\t(target as any)[k] = (source as any)[k]\n\t\t}\n\t}\n}","\nexport const DEBUG = false\nexport const IN_WINDOW = typeof(window) !== \"undefined\" && \"document\" in window\nexport const IN_WORKER = !IN_WINDOW\nexport const DBG_ME = IN_WORKER? \"worker\" : \"window\"\nexport const DBG_OTHER = IN_WORKER? \"window\" : \"worker\"\n\nexport function DBG_LOG(...msgs:any[]){\n\tif(DEBUG){\n\t\tconsole.log(...msgs)\n\t}\n}","import { DBG_LOG, DBG_ME, DBG_OTHER } from \"./debug\"\nimport { ID, makeLazyPath, Reference } from \"./path\"\nimport { referencifyObject } from \"./referencify\"\nimport { WorkerBridge } from \"./workerbridge\"\n\n// more general proxy creation, also for anonymous objects and child objects\nexport function _createProxy(bridge: WorkerBridge, ref: Reference):any{\n\t// ref defines how this proxy relates to its target on the other side\n\t// - ID as Key means, the proxied object was explicitly registered\n\t//   on the remote side with a name\n\t// - ID as Index means, the proxied object is the result of a get\n\t//   or a call and it has no name but an index\n\t// - LazyPath means that this proxy relates to its target by being a field\n\t//   of its parent proxy\n\n\tDBG_LOG(DBG_ME, \"creates proxy to\", \n\t\tJSON.stringify((typeof(ref) === \"function\")? ref() : ref))\n\n\t// keep track of all the members that were get-ed\n\tlet children:{[key: string]:any}={}\n\n\t// If not yet done, directly link this proxy\n\t// to the corresponding object on the remote side.\n\t// It gets an index entry in the remote registry.\n\tfunction resolvePath():ID {\n\t\tif(typeof(ref) === \"function\"){\n\t\t\tDBG_LOG(\n\t\t\t\tDBG_ME, \"requests\",\n\t\t\t\tDBG_OTHER, \"[\", bridge.remoteOtherIndexCounter, \"] =\", JSON.stringify(ref())\n\t\t\t)\n\n\t\t\tbridge.enqueueMsg({kind:\"link\", path:ref()})\n\t\t\tref = bridge.remoteOtherIndexCounter--\n\t\t}\n\t\treturn ref\n\t}\n\n\t// this will be a special member of the proxy that also\n\t// deletes the registry entry on the remote side and\n\t// sets the reference of this proxy to undefined\n\t// so the GC can do its job\n\tfunction dispose(){\n\t\tbridge.enqueueMsg({\n\t\t\tkind:\"del\",\n\t\t\tid:resolvePath()\n\t\t})\n\t\tref = undefined // ensure this proxy is not used further\n\t}\n\n\treturn new Proxy(Object, {\n\n\t\tset(target:any, prop:string, val:any){\n\t\t\tbridge.enqueueMsg({\n\t\t\t\tkind:\"set\",\n\t\t\t\tid:resolvePath(),\n\t\t\t\tprop, val:referencifyObject(bridge, val)\n\t\t\t})\n\t\t\treturn true\n\t\t},\n\n\t\tget(target:any, prop:string, receiver:any){\n\t\t\tif(prop === \"then\"){\n\t\t\t\treturn // nothing so this proxy cannot act as a promise\n\t\t\t}\n\t\t\tif(prop === \"__ref__\"){\n\t\t\t\treturn resolvePath()\n\t\t\t}\n\t\t\tif(prop === \"dispose\"){\n\t\t\t\treturn dispose\n\t\t\t}\n\t\t\tif(!(prop in children)){\n\t\t\t\tchildren[prop] = _createProxy(bridge, makeLazyPath(ref, prop))\n\t\t\t}\n\t\t\treturn children[prop]\n\t\t},\n\n\t\tapply(target:any, thisArg:any, args:any[]){\n\t\t\tbridge.enqueueMsg({\n\t\t\t\tkind:\"call\",\n\t\t\t\tid:resolvePath(),\n\t\t\t\targs:referencifyObject(bridge, args)\n\t\t\t})\n\t\t\tDBG_LOG(\n\t\t\t\tDBG_ME, \"calls\", DBG_OTHER, \"[\", resolvePath(), \"]\",\n\t\t\t\t\", store result in\", DBG_OTHER, \"[\", bridge.remoteOtherIndexCounter, \"]\"\n\t\t\t)\n\t\t\treturn _createProxy(bridge, bridge.remoteOtherIndexCounter--)\n\t\t},\n\n\t\tconstruct(target:any, args:any){\n\t\t\tbridge.enqueueMsg({\n\t\t\t\tkind:\"new\",\n\t\t\t\tid:resolvePath(),\n\t\t\t\targs:referencifyObject(bridge, args)\n\t\t\t})\n\t\t\tDBG_LOG(\n\t\t\t\tDBG_ME, \"calls new on\", DBG_OTHER, \"[\", resolvePath(), \"]\",\n\t\t\t\t\", store object in\", DBG_OTHER, \"[\", bridge.remoteOtherIndexCounter, \"]\"\n\t\t\t)\n\t\t\treturn _createProxy(bridge, bridge.remoteOtherIndexCounter--)\n\t\t}\n\t})\n}","export type Key = string // for explicitly registered objects\nexport type Index = number // for automatically registered objects\nexport type ID = Key | Index // for all objects\nexport type Path = ID[] // for relating a proxy via its parent (or grandparent etc.)\nexport type LazyPath = ()=>Path // for lazy evaluation\nexport type Reference = ID | LazyPath\n\nexport function makeLazyPath(parent: Reference, prop: string){\n\t// a lazy path is a function that returns a path when it's called\n\treturn function(){\n\t\tif(typeof(parent) === \"function\"){ // the parent is itself a lazy path\n\t\t\treturn [...parent(), prop]\n\t\t}\n\t\telse{ // the parent is already a directly linked reference\n\t\t\treturn [parent, prop]\n\t\t}\n\t}\n}","// these functions deal with substitution of arguments and callbacks with proxies\n\nimport { DBG_LOG, DBG_ME, DBG_OTHER } from \"./debug\"\nimport { _createProxy } from \"./proxy\"\nimport { WorkerBridge } from \"./workerbridge\"\n\ntype Pod = any\ntype TaggedCallback = Function & {__cb__?:number}\n\nexport function referencifyFunction(bridge:WorkerBridge, fn:TaggedCallback){\n\tif(fn.__cb__ === undefined){\n\t\t// tag this function with a __cb__ index\n\t\t// so that it will not be indexed multiple times\n\t\t// TODO: if we allow the bridge to be reset, all tagged\n\t\t// functions must be untagged\n\t\tDBG_LOG(DBG_ME, \"[\", bridge.localOwnIndexCounter, \"] = callback\")\n\t\tDBG_LOG(fn)\n\n\t\tlet newIndex = bridge.localOwnIndexCounter++\n\t\tfn.__cb__ = newIndex\n\t\tbridge.localRegistry[newIndex] = fn\n\t\treturn {__cb__:\"new\"}\n\t}\n\telse{\n\t\treturn {__cb__:fn.__cb__}\n\t}\n}\n\nexport function referencifyChildren(bridge:WorkerBridge, obj:any){\n\tlet copy:any = Array.isArray(obj)? [] : {}\n\n\tfor(let key in obj){\n\n\t\tlet wrapped = referencifyObject(bridge, obj[key])\n\n\t\tif(typeof(wrapped) === \"object\"){\n\t\t\tif(\"__cb__\" in wrapped){\n\t\t\t\t// this object or a sub object contains callbacks\n\t\t\t\tcopy[\"__cb__\"] = true\n\t\t\t}\n\t\t\tif(\"__ref__\" in wrapped){\n\t\t\t\t// this object or a sub object contains proxies\n\t\t\t\tcopy[\"__ref__\"] = true\n\t\t\t}\n\t\t}\n\n\t\tcopy[key] = wrapped\n\t}\n\treturn copy\n}\n\n// scan an object for functions, store local references for them\n// and replace the functions with the references\n// this is for sending callbacks through the worker bridge\nexport function referencifyObject(bridge:WorkerBridge, value:any):Pod{\n\tswitch(typeof(value)){\n\t\tcase \"undefined\":\n\t\tcase \"number\":\n\t\tcase \"string\":\n\t\tcase \"boolean\":\n\t\t\treturn value\n\t\tcase \"object\":\n\t\t\treturn referencifyChildren(bridge, value)\n\t\tcase \"function\":\n\t\t\tif(value.__ref__ === undefined){\n\t\t\t\treturn referencifyFunction(bridge, value)\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// value is not a function but a proxy object\n\t\t\t\t// (all bridge proxies wrap functions so operator() works)\n\t\t\t\treturn {__ref__:value.__ref__}\n\t\t\t}\n\t}\n\n\tthrow new Error(\"unsendable type: \" + typeof(value))\n}\n\nexport function resolveReferenceMembers(bridge:WorkerBridge, obj:any){\n\tif(\"__cb__\" in obj){\n\t\tif(typeof(obj[\"__cb__\"]) === \"number\"){\n\t\t\t// reference to a callback that was already registered before\n\t\t\t// return another proxy to it\n\t\t\t// TODO: are we allowed to hand out multiple proxies to the same object?\n\t\t\t// what if only one of them gets disposed?\n\t\t\treturn _createProxy(bridge, obj[\"__cb__\"])\n\t\t}\n\t\telse if(obj[\"__cb__\"] === \"new\"){\n\t\t\tDBG_LOG(\n\t\t\t\tDBG_ME, \"expects that\",\n\t\t\t\tDBG_OTHER, \"[\", bridge.remoteOwnIndexCounter, \"] is a callback\"\n\t\t\t)\n\t\t\t\n\t\t\t// return a new proxy to a newly registered callback\n\t\t\treturn _createProxy(bridge, bridge.remoteOwnIndexCounter++)\n\t\t}\n\t\telse if(obj[\"__cb__\"] === true){\n\t\t\t// a child or a grandchild etc. is a callback\n\t\t\tfor(let field in obj){\n\t\t\t\tobj[field] = resolveReferences(bridge, obj[field])\n\t\t\t}\n\t\t\treturn obj\n\t\t}\n\t\telse{\n\t\t\tthrow new Error(\"unexpected callback reference type\")\n\t\t}\n\t}\n\telse if(\"__ref__\" in obj){\n\t\tif(\n\t\t\ttypeof(obj[\"__ref__\"]) === \"number\" ||\n\t\t\ttypeof(obj[\"__ref__\"]) === \"string\"\n\t\t){\n\t\t\t// the remote object is a proxy, return the registry entry\n\t\t\treturn bridge.localRegistry[obj.__ref__]\n\t\t}\n\t\telse if(obj[\"__ref__\"] === true){\n\t\t\t// a child or a grandchild etc. is a proxy\n\t\t\tfor(let field in obj){\n\t\t\t\tobj[field] = resolveReferences(bridge, obj[field])\n\t\t\t}\n\t\t\treturn obj\n\t\t}\n\t\telse{\n\t\t\tthrow new Error(\"unexpected reference type\")\n\t\t}\n\t}\n\telse{\n\t\treturn obj\n\t}\n}\n\nexport function resolveReferences(bridge:WorkerBridge, value:Pod):any{\n\tswitch(typeof(value)){\n\t\tcase \"undefined\":\n\t\tcase \"number\":\n\t\tcase \"string\":\n\t\tcase \"boolean\":\n\t\t\treturn value\n\t\tcase \"object\":\n\t\t\treturn resolveReferenceMembers(bridge, value)\n\t}\n}","\n// here are the handler methods of the bridge\n// the leading underscore is so that you don't accidentally call\n// doStuff() instead of bridge.doStuff()\n\nimport { BridgeMsg, CallMsg, DisposeMsg, LinkMsg, NewMsg, RegisterMsg, SetMsg } from \"./messages\"\nimport {DEBUG, DBG_ME, DBG_OTHER} from \"./debug\"\nimport { WorkerBridge } from \"./workerbridge\"\nimport { resolveReferences } from \"./referencify\"\n\nexport function handleMessage(bridge:WorkerBridge, msg:BridgeMsg){\n\tswitch(msg.kind){\n\t\tcase \"ready\":\n\t\t\thandleReady(bridge)\n\t\t\tbreak\n\t\tcase \"reg\":\n\t\t\thandleRegister(bridge, msg)\n\t\t\tbreak\n\t\tcase \"link\":\n\t\t\thandleLinkage(bridge, msg)\n\t\t\tbreak\n\t\tcase \"call\":\n\t\t\thandleCall(bridge, msg)\n\t\t\tbreak\n\t\tcase \"new\":\n\t\t\thandleNew(bridge, msg)\n\t\t\tbreak\n\t\tcase \"set\":\n\t\t\thandlePropertySet(bridge, msg)\n\t\t\tbreak\n\t\tcase \"del\":\n\t\t\thandleDispose(bridge, msg)\n\t\t\tbreak\n\t}\n}\n\nfunction handleReady(bridge:WorkerBridge){\n\tbridge.connected = true\n\tif(bridge.sendWhenConnected){\n\t\tbridge.sendAll()\n\t}\n}\n\nfunction handleRegister(bridge:WorkerBridge, msg:RegisterMsg){\n\tbridge.remoteRegistry.add(msg.id)\n\tif(msg.id in bridge.pendingProxies){\n\t\tfor(let resolve of bridge.pendingProxies[msg.id]){\n\t\t\tresolve()\n\t\t}\n\t}\n}\n\nfunction handleLinkage(bridge:WorkerBridge, msg:LinkMsg){\n\tlet obj:any = bridge.localRegistry\n\tfor(let field of (msg as LinkMsg).path){\n\t\tlet child = obj[field]\n\t\tif(typeof(child) === \"function\"){\n\t\t\tchild = child.bind(obj) // make sure we keep \"bridge\"\n\t\t}\n\t\tobj = child\n\t}\n\tif(typeof(obj) !== \"object\" && typeof(obj) !== \"function\"){\n\t\tthrow new Error(\"tried to link a field which is not an object or a method: \" + msg.path)\n\t}\n\tif(DEBUG){\n\t\tconsole.log(DBG_ME, \"[\", bridge.localOtherIndexCounter, \"] =\")\n\t\tconsole.log(obj)\n\t}\n\tbridge.localRegistry[bridge.localOtherIndexCounter--] = obj\n}\n\nfunction handleCall(bridge:WorkerBridge, msg:CallMsg){\n\tlet result = bridge.localRegistry[msg.id](\n\t\t...resolveReferences(bridge, msg.args)\n\t)\n\tif(\n\t\ttypeof(result) === \"object\" ||\n\t\ttypeof(result) === \"function\"\n\t){\n\t\tif(DEBUG){\n\t\t\tconsole.log(DBG_ME, \"[\", bridge.localOtherIndexCounter, \"] is result\", result)\n\t\t}\n\t\tbridge.localRegistry[bridge.localOtherIndexCounter--] = result\n\t}\n\telse{\n\t\tif(result !== undefined){\n\t\t\tconsole.warn(\"result of remotely called function will be ignored\")\n\t\t}\n\t\t// the remote side will inc its counter so we also have to\n\t\tif(DEBUG){\n\t\t\tconsole.log(\n\t\t\t\tDBG_ME, \"discards result\", result,\n\t\t\t\t\"and skips index\", bridge.localOtherIndexCounter\n\t\t\t)\n\t\t}\n\t\tbridge.localOtherIndexCounter--\n\t}\n}\n\nfunction handleNew(bridge:WorkerBridge, msg:NewMsg){\n\tlet result = new bridge.localRegistry[msg.id](\n\t\t...resolveReferences(bridge, msg.args)\n\t)\n\tif(DEBUG){\n\t\tconsole.log(DBG_ME, \"[\", bridge.localOtherIndexCounter, \"] is the new\", result)\n\t}\n\tbridge.localRegistry[bridge.localOtherIndexCounter--] = result\n}\n\nfunction handlePropertySet(bridge:WorkerBridge, msg:SetMsg){\n\tbridge.localRegistry[msg.id][msg.prop] =\n\t\tresolveReferences(bridge, msg.val)\n}\n\nfunction handleDispose(bridge:WorkerBridge, msg: DisposeMsg){\n\tif(bridge.localRegistry[msg.id].dispose !== undefined){\n\t\tbridge.localRegistry[msg.id].dispose()\n\t}\n\tdelete bridge.localRegistry[msg.id]\n}\n\n","\n/*\nParadigms:\n\n- the bridge is intended to change and call objects on the remote side,\n  you never get any values back, only handles to remote objects\n- if you need to get values back, send callbacks and call them there\n- don't use new dynamically generated callbacks all the time as they are\n  going to persist in the registry and won't get garbage collected\n*/\n\nimport { DBG_LOG, DBG_ME, DBG_OTHER } from \"./debug\"\nimport { handleMessage } from \"./handlers\"\nimport { Key } from \"./path\"\nimport { BridgeMsg } from \"./messages\"\nimport { _createProxy } from \"./proxy\"\n\n\nexport class WorkerBridge{\n\t\n\tworker:Worker = undefined\n\tconnected = false\n\tsendWhenConnected = false\n\n\t// locally stored objects\n\t// (typescript complains about key:Key and about key:(string | number) )\n\tlocalRegistry:{\n\t\t[key: string]: any,\n\t\t[index: number]: any\n\t} = {}\n\n\t// remotely manually registered objects\n\tremoteRegistry = new Set<string>()\n\n\t// proxies that were requested but we don't know yet if the other side has registered them yet\n\t// they will hang in promise limbo until we get the respective \"reg\" message\n\tpendingProxies:{\n\t\t[key: string]: (()=>void)[] // array of promise resolver functions\n\t} = {}\n\t\n\t// counter for locally stored anonymous objects\n\t// whose creation was caused by this side, counts positive\n\tlocalOwnIndexCounter = 1\n\t// counter for locally stored anonymous objects\n\t// whose creation was caused by the other side, counts negative\n\tlocalOtherIndexCounter = -1\n\n\t// counter for remotely stored anonymous objects\n\t// whose creation was caused by the remote side itself, counts positive\n\tremoteOwnIndexCounter = 1\n\t// counter for remotely stored anonymous objects\n\t// whose creation was caused by this side, counts negative\n\tremoteOtherIndexCounter = -1\n\n\t/** leave worker empty when calling from inside a worker\n\t * and building a bridge to the window */\n\tconstructor(workerFile?:string){\n\t\tif(workerFile !== undefined){\n\t\t\tthis.worker = new Worker(workerFile)\n\t\t\tthis.worker.onmessage = this.receive.bind(this)\n\t\t}\n\t\telse{\n\t\t\tonmessage = this.receive.bind(this)\n\t\t\tthis.enqueueMsg({kind:\"ready\"})\n\t\t\tthis.sendAll()\n\t\t\tthis.connected = true\n\t\t}\n\t}\n\n\tmsgQueue: BridgeMsg[] = []\n\n\tenqueueMsg(msg:BridgeMsg){\n\t\tthis.msgQueue.push(msg)\n\t}\n\n\tsendAll(){\n\t\tif(this.msgQueue.length == 0){\n\t\t\treturn\n\t\t}\n\n\t\tDBG_LOG(DBG_ME, \"->\", DBG_OTHER, \":\")\n\t\tfor(let msg of this.msgQueue){\n\t\t\tDBG_LOG(\"-> \" + JSON.stringify(msg))\n\t\t}\n\n\t\tif(this.worker !== undefined){\n\t\t\tif(this.connected){\n\t\t\t\tthis.worker.postMessage(this.msgQueue)\n\t\t\t\tthis.msgQueue = []\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.sendWhenConnected = true\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\t// TypeScript does not know we mean postMessage from inside a worker\n\t\t\t//@ts-ignore\n\t\t\tpostMessage(this.msgQueue)\n\t\t\tthis.msgQueue = []\n\t\t}\n\t}\n\n\treceive(event:MessageEvent){\n\t\tfor(let i in event.data){\n\t\t\tlet msg = event.data[i] as BridgeMsg\n\t\t\tDBG_LOG(DBG_ME, \"handles\")\n\t\t\tDBG_LOG(msg)\n\t\t\thandleMessage(this, msg)\n\t\t}\n\t}\n\n\t/** register an object for being accessible by the remote side */\n\tregister(object:Object, name:string){\n\t\tDBG_LOG(DBG_ME, \"[\", name, \"] =\", object)\n\t\tthis.localRegistry[name] = object\n\t\tthis.enqueueMsg({kind:\"reg\", id:name})\n\t}\n\n\t/** create a proxy for an object on the remote side */\n\tasync createProxy(remoteKey: Key){\n\t\t// this function is an interface to the outside, it only allows reference\n\t\t// to targets that were explicitly registered on the remote side\n\t\tif(!isNaN(remoteKey as any)){\n\t\t\tthrow new Error(\"numeric indices are reserved for anonymous objects\")\n\t\t}\n\t\tif(remoteKey in this.remoteRegistry){\n\t\t\treturn _createProxy(this, remoteKey)\n\t\t}\n\t\telse{\n\t\t\tlet bridge = this\n\t\t\treturn new Promise(function(resolve){\n\t\t\t\tif(!(remoteKey in bridge.pendingProxies))\n\t\t\t\t{\n\t\t\t\t\tbridge.pendingProxies[remoteKey] = []\n\t\t\t\t}\n\t\t\t\tbridge.pendingProxies[remoteKey].push(\n\t\t\t\t\tfunction(){\n\t\t\t\t\t\tresolve(_createProxy(bridge, remoteKey))\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t}\n}\n","\n//*\n\nimport {WorkerBridge} from \"./workerbridge\"\n\nlet bridge:WorkerBridge\n\nif(window.document !== undefined){ // we are the main window and start the worker\n\tconsole.log(\"loading engine\")\n\tbridge = new WorkerBridge(\"./acechase_engine.js\")\n}\nelse{\n\t// we are inside the worker\n\tbridge = new WorkerBridge()\n}\n\nexport {bridge}\n\n/*/\n\nimport {WorkerBridgeDummy} from \"./workerbridgedummy\"\nimport \"engine_main\"\n\nexport let bridge = new WorkerBridgeDummy()\n\n/**/","\nimport * as THREE from \"three\"\n\n// resources like textures can not be shared across renderers\n// so we need one global renderer for all scenes and texture generators and the water and so on\nexport let renderer = new THREE.WebGLRenderer(\n\t{canvas:document.getElementById(\"rendertarget\") as HTMLCanvasElement}\n)","\nimport {Model, ModelLoader, ModelMetaData} from \"domain/graphics/model\"\nimport { vec3 } from \"gl-matrix\"\nimport * as THREE from \"three\"\nimport {GLTFLoader} from 'three/examples/jsm/loaders/GLTFLoader'\nimport { Triangle3 } from \"utilities/math_utils\"\n\nexport class ThreeModel extends Model{\n\tthreeObject:THREE.Object3D = undefined\n}\n\nfunction adaptModel(mesh:THREE.Object3D){\n\tif(\"material\" in mesh && \"normalMapType\" in (mesh as THREE.Mesh).material){\n\t\t((mesh as THREE.Mesh).material as THREE.MeshStandardMaterial).normalMapType =\n\t\t\t\tTHREE.ObjectSpaceNormalMap\n\t}\n\n\tfor(let child of mesh.children){\n\t\tadaptModel(child)\n\t}\n}\n\nfunction extractMetaData(scene:THREE.Scene){\n\tlet meta: ModelMetaData = {}\n\n\tfor(let node of scene.children){\n\t\tif(node.name[0] == \"_\"){\n\t\t\tlet tris:Triangle3[] = []\n\n\t\t\tnode.updateMatrixWorld()\n\t\t\tlet bufGeom = ((node as THREE.Mesh).geometry as THREE.BufferGeometry).toNonIndexed()\n\t\t\tlet geom = new THREE.Geometry().fromBufferGeometry(bufGeom)\n\t\t\tlet verts = geom.vertices\n\n\t\t\tfor(let i=0; i<verts.length; i+=3){\t\n\t\t\t\tlet va = node.localToWorld(verts[i])\n\t\t\t\tlet A = vec3.fromValues(va.x, va.y, va.z)\n\t\t\t\tlet vb = node.localToWorld(verts[i+1])\n\t\t\t\tlet B = vec3.fromValues(vb.x, vb.y, va.z)\n\t\t\t\tlet vc = node.localToWorld(verts[i+2])\n\t\t\t\tlet C = vec3.fromValues(vc.x, vc.y, va.z)\t\t\n\t\t\t\ttris.push([A, B, C])\n\t\t\t}\n\n\t\t\tmeta[node.name.substring(1)] = tris\n\n\t\t\tscene.remove(node)\n\t\t\t;(node as THREE.Mesh).geometry.dispose()\n\t\t}\n\t}\n\n\treturn meta\n}\n\nconst gltfLoader = new GLTFLoader()\n\nexport class ThreeModelLoader implements ModelLoader{\n\tload(\n\t\tfile: string,\n\t\tonLoaded?:(meta:ModelMetaData)=>void,\n\t\tonError?:(err:ErrorEvent)=>void\n\t){\n\t\tlet model = new ThreeModel()\n\n\t\tgltfLoader.load(\n\t\t\tfile,\n\t\t\tfunction(gltf){\n\t\t\t\tmodel.threeObject = gltf.scene\n\t\t\t\tadaptModel(model.threeObject)\n\t\t\t\tlet meta = extractMetaData(model.threeObject as THREE.Scene)\n\t\t\t\tif(onLoaded !== undefined){\n\t\t\t\t\tonLoaded(meta)\n\t\t\t\t}\n\t\t\t},\n\t\t\tundefined,\n\t\t\tonError\n\t\t)\n\t\n\t\treturn model\n\t}\n}","\nimport {Asset, LoadAssetFunction} from \"./asset\"\nimport { Triangle3 } from \"utilities/math_utils\"\n\nexport class Model implements Asset<\"model\">{\n\tkind:\"model\"\n}\n\nexport interface ModelMetaData{\n\t[key:string]:Triangle3[]\n}\n\nexport interface ModelLoader{\n\tload:LoadAssetFunction<Model, ModelMetaData>\n}","\nimport * as THREE from \"three\"\nimport {SceneNode, SceneNodeConfig} from \"domain/graphics/scenenode\"\nimport {vec3, quat} from \"gl-matrix\"\nimport {Kind, copy} from \"utils\"\n\nexport abstract class ThreeSceneNode<K extends Kind> implements SceneNode<K>{\n\tkind:K\n\tthreeScene:THREE.Scene\n\tthreeObject:THREE.Object3D\n\t\n\tconstructor(\n\t\tscene:THREE.Scene,\n\t\tobject:THREE.Object3D,\n\t\tconfig:SceneNodeConfig<K>\n\t){\n\t\tthis.threeScene = scene\n\t\tthis.threeObject = object\n\t\tscene.add(object)\n\n\t\tcopy(this, config, [\"kind\", \"position\", \"orientation\", \"scaling\"])\n\t}\n\n\tset position(p:vec3){\n\t\tthis.threeObject.position.set(p[0], p[1], p[2])\n\t}\n\n\tset orientation(q:quat){\n\t\tthis.threeObject.quaternion.set(q[0], q[1], q[2], q[3])\n\t}\n\n\tset scaling(s:vec3){\n\t\tthis.threeObject.scale.set(s[0], s[1], s[2])\n\t}\n\n\tremove(){\n\t\tthis.threeScene.remove(this.threeObject)\n\t}\n}\n","\nimport {ThreeSceneNode} from \"./threescenenode\"\nimport {Camera, CameraConfig, CameraFactory} from \"domain/graphics/camera\"\nimport {SceneInfo} from \"./sceneinfo\"\nimport * as THREE from \"three\"\nimport {copy} from \"utils\"\nimport { renderer } from \"./threerenderer\"\nimport { PerspectiveCamera } from \"three\"\n\nexport class ThreeCamera extends ThreeSceneNode<\"camera\"> implements Camera{\n\n\tthreeObject:THREE.PerspectiveCamera\n\t_onAspectChange: (aspect:number)=>void\n\n\tset nearClip(nc:number){\n\t\tthis.threeObject.near = nc\n\t\tthis.threeObject.updateProjectionMatrix()\n\t}\n\n\tset farClip(fc:number){\n\t\tthis.threeObject.far = fc\n\t\tthis.threeObject.updateProjectionMatrix()\n\t}\n\n\tset verticalAngleOfViewInDeg(aov:number){\n\t\tthis.threeObject.fov = aov\n\t\tthis.threeObject.updateProjectionMatrix()\n\t}\n\n\tset onAspectChange(cb:(aspect:number)=>void){\n\t\tthis._onAspectChange = cb\n\t\tcb((this.threeObject as THREE.PerspectiveCamera).aspect)\n\t}\n\n\tget onAspectChange(){\n\t\treturn this._onAspectChange\n\t}\n\n\tconstructor(scene:THREE.Scene, config:CameraConfig){\n\t\tlet threeCam = new THREE.PerspectiveCamera()\n\n\t\tsuper(scene, threeCam, config)\n\t\tcopy(this, config, [\"nearClip\", \"farClip\", \"verticalAngleOfViewInDeg\", \"onAspectChange\"])\n\n\t\tconst resize = ()=>{\n\t\t\tlet aspect = renderer.domElement.clientWidth / renderer.domElement.clientHeight\n\t\t\tthreeCam.aspect = aspect\n\t\t\tthreeCam.updateProjectionMatrix()\n\t\t\tthis.onAspectChange(aspect)\n\t\t}\n\t\t\n\t\twindow.addEventListener('resize', resize)\n\t\tresize()\t\t\n\t}\n\n\tactivate(){\n\t\t;(this.threeScene.userData as SceneInfo).activeCamera = this.threeObject\n\t}\n}\n\nexport class ThreeCameraFactory implements CameraFactory{\n\tthreeScene:THREE.Scene\n\n\tconstructor(scene:THREE.Scene){\n\t\tthis.threeScene = scene\n\t}\n\n\tcreate(config: CameraConfig){\n\t\treturn new ThreeCamera(this.threeScene, config)\n\t}\n}","\nimport {Color} from \"utils\"\nimport {ThreeSceneNode} from \"./threescenenode\"\nimport {\n\tPointLight,\n\tPointLightConfig,\n\tHemisphereLight,\n\tHemisphereLightConfig,\n\tLightFactory\n} from \"domain/graphics/light\"\nimport * as THREE from \"three\"\n\nexport class ThreePointLight extends ThreeSceneNode<\"pointlight\"> implements PointLight{\n\n\tthreeObject:THREE.PointLight\n\n\tset color(col:Color){\n\t\tthis.threeObject.color.setRGB(col.r, col.g, col.b)\n\t}\n\n\tconstructor(scene:THREE.Scene, config:PointLightConfig){\n\t\tsuper(scene, new THREE.PointLight(), config)\n\n\t\tthis.color = config.color\n\t}\n}\n\nexport class ThreeHemisphereLight extends ThreeSceneNode<\"hemispherelight\"> implements HemisphereLight{\n\n\tthreeObject:THREE.HemisphereLight\n\n\tset groundColor(col:Color){\n\t\tthis.threeObject.groundColor.setRGB(col.r, col.g, col.b)\n\t}\n\n\tset skyColor(col:Color){\n\t\tthis.threeObject.color.setRGB(col.r, col.g, col.b)\n\t}\n\n\tconstructor(scene:THREE.Scene, config:HemisphereLightConfig){\n\t\tsuper(scene, new THREE.HemisphereLight(), config)\n\n\t\tthis.groundColor = config.groundColor\n\t\tthis.skyColor = config.skyColor\n\t}\n}\n\nexport class ThreeLightFactory implements LightFactory{\n\tthreeScene:THREE.Scene\n\n\tconstructor(scene:THREE.Scene){\n\t\tthis.threeScene = scene\n\t}\n\n\tcreatePointLight(config: PointLightConfig){\n\t\treturn new ThreePointLight(this.threeScene, config)\n\t}\n\n\tcreateHemisphereLight(config: HemisphereLightConfig){\n\t\treturn new ThreeHemisphereLight(this.threeScene, config)\n\t}\n}","\nimport {Mesh, MeshConfig, ModelMeshConfig, MeshFactory} from \"domain/graphics/mesh\"\nimport {ThreeSceneNode} from \"./threescenenode\"\nimport * as THREE from \"three\"\nimport {copy, Color} from \"utils\"\nimport {ThreeModel} from \"./threemodel\"\n\nfunction colorRecursive(obj: THREE.Object3D, col:Color){\n\tif(obj.type == \"mesh\"){\n\t\t((obj as THREE.Mesh).material as THREE.MeshStandardMaterial).color.setRGB(col.r, col.g, col.b)\n\t}\n\t\n\tfor(let c of obj.children){\n\t\tcolorRecursive(c, col)\n\t}\n}\n\nexport class ThreeMesh extends ThreeSceneNode<\"mesh\"> implements Mesh{\n\n\tthreeObject:THREE.Object3D\n\n\tset baseColor(col:Color){\n\t\t// TODO: proper filtering which parts to color and whether to color diffuse or emissive\n\t\tcolorRecursive(this.threeObject, col)\n\t}\n\n\tset accentColor(col:Color){\n\t\tcolorRecursive(this.threeObject, col)\n\t}\n\n\tconstructor(scene:THREE.Scene, template:THREE.Object3D, config:MeshConfig){\n\t\tsuper(scene, template.clone(), config)\n\t\tcopy(this, config, [\"baseColor\", \"accentColor\"])\n\t}\n}\n\nexport class ThreeMeshFactory implements MeshFactory{\n\n\tthreeScene:THREE.Scene\n\n\tconstructor(scene:THREE.Scene){\n\t\tthis.threeScene = scene\n\t}\n\n\tcreateFromModel(config:ModelMeshConfig){\n\t\treturn new ThreeMesh(\n\t\t\tthis.threeScene,\n\t\t\t(config.asset as ThreeModel).threeObject.clone(),\n\t\t\tconfig\n\t\t)\n\t}\n}","\nimport {SceneInfo} from \"./sceneinfo\"\nimport {ThreeGraphics} from \"./threegraphics\"\nimport {renderer} from \"./threerenderer\"\nimport {GraphicsController} from \"domain/graphics/graphicscontroller\"\nimport { quat } from \"gl-matrix\"\nimport { Skybox } from \"domain/graphics/skybox\"\nimport { ThreeSkybox } from \"./threeskybox\"\nimport { LightProbeGenerator } from 'three/examples/jsm/lights/LightProbeGenerator.js'\nimport * as THREE from \"three\"\n\nexport class ThreeGraphicsController implements GraphicsController{\n\n\tgraphics:ThreeGraphics\n\n\tconstructor(graphics:ThreeGraphics){\n\t\tthis.graphics = graphics\n\n\t\tconst resize = ()=>{\n\t\t\trenderer.setSize(\n\t\t\t\trenderer.domElement.clientWidth,\n\t\t\t\trenderer.domElement.clientHeight,\n\t\t\t\tfalse\n\t\t\t)\n\t\t}\n\t\t\n\t\twindow.addEventListener('resize', resize)\n\t\tresize()\n\t}\n\n\tsetSceneOrientation(q:quat){\n\t\tthis.graphics.scene.quaternion.set(q[0], q[1], q[2], q[3])\n\t}\n\n\tsetEnvironment(env:Skybox){\n\t\tthis.graphics.scene.background = (env as ThreeSkybox).threeCubemap\n\t\tthis.graphics.scene.environment = (env as ThreeSkybox).threePmrem\n\n\t\t/*\n\t\tlet lightProbe = new THREE.LightProbe()\n\t\tthis.graphics.scene.add( lightProbe )\n\n\t\tlightProbe.copy( LightProbeGenerator.fromCubeTexture( cubeMap ) )\n\t\t*/\n\t}\n\n\tupdate(time: number){\n\t\trenderer.render(\n\t\t\tthis.graphics.scene, \n\t\t\t(this.graphics.scene.userData as SceneInfo).activeCamera\n\t\t)\n\t}\n}","\nimport * as THREE from \"three\"\nimport {renderer} from \"./threerenderer\"\nimport { Skybox, SkyboxLoader } from \"domain/graphics/skybox\"\n\nexport class ThreeSkybox extends Skybox{\n\tthreeCubemap:THREE.CubeTexture = undefined\n\tthreePmrem:THREE.Texture = undefined\n}\n\nconst cubeLoader = new THREE.CubeTextureLoader()\nconst pmremGenerator = new THREE.PMREMGenerator(renderer)\npmremGenerator.compileCubemapShader()\n\nexport class ThreeSkyboxLoader implements SkyboxLoader{\n\tload(\n\t\tfile: string,\n\t\tonLoaded?:()=>void,\n\t\tonError?:(err:ErrorEvent)=>void\n\t){\n\t\tlet skybox = new ThreeSkybox()\n\n\t\tcubeLoader.load([\n\t\t\tfile.replace(\"*\", \"px\"), file.replace(\"*\", \"nx\"),\n\t\t\tfile.replace(\"*\", \"py\"), file.replace(\"*\", \"ny\"),\n\t\t\tfile.replace(\"*\", \"pz\"), file.replace(\"*\", \"nz\")\n\t\t],\n\t\tfunction(map){\n\t\t\tlet pmrem = pmremGenerator.fromCubemap(map)\n\t\t\tskybox.threeCubemap = map\n\t\t\tskybox.threePmrem = pmrem.texture\n\t\t\tonLoaded()\n\t\t},\n\t\tundefined,\n\t\tonError)\n\t\n\t\treturn skybox\n\t}\n}","\nimport {Asset, LoadAssetFunction} from \"./asset\"\n\nexport class Skybox implements Asset<\"skybox\">{\n\tkind:\"skybox\"\n}\n\nexport interface SkyboxLoader{\n\tload:LoadAssetFunction<Skybox>\n}","import { Controller } from \"domain/controller/controller\";\n\nenum Keys {\n\tUP = \"KeyW\",\n\tDOWN = \"KeyS\",\n\tRIGHT = \"KeyD\",\n\tLEFT = \"KeyA\",\n\tSHOOT = \"Space\",\n\tPAUSE = \"Pause\",\n\tSWITCH_MODE = \"KeyM\"\n}\n\nexport class Keyboard implements Controller {\n\n\tprivate shooting: boolean = false\n\tprivate currentStrategy: ControlStrategy = new RelativeStrategy()\n\n\tconstructor() {\n\t\tdocument.addEventListener(\"keydown\", (event) => {\n\t\t\tthis.onKeyAction(event, true)\n\t\t})\n\t\tdocument.addEventListener(\"keyup\", (event) => {\n\t\t\tthis.onKeyAction(event, false)\n\t\t})\n\t}\n\n\tgetAbsoluteDirection(): number {\n\t\treturn this.currentStrategy.getAbsoluteDirection();\n\t}\n\n\tgetTurnRate(): number {\n\t\treturn this.currentStrategy.getTurnRate();\n\t}\n\n\tgetThrust(): number {\n\t\treturn this.currentStrategy.getThrust();\n\t}\n\n\tisShooting(): boolean {\n\t\treturn this.shooting\n\t}\n\n\tsetPauseCallback(callback: () => void): void {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\tprivate onKeyAction(event: KeyboardEvent, isPressed: boolean) {\n\t\tif (!event.repeat) {\n\t\t\tthis.onGeneralKeyAction(event.code, isPressed)\n\t\t\tthis.currentStrategy.onKeyAction(event.code, isPressed)\n\t\t}\n\t}\n\tprivate onGeneralKeyAction(keyCode: string, isPressed: boolean) {\n\t\tswitch (keyCode) {\n\t\t\tcase Keys.SHOOT:\n\t\t\t\tthis.shooting = isPressed;\n\t\t\t\tbreak;\n\t\t\tcase Keys.SWITCH_MODE:\n\t\t\t\tif (isPressed) {\n\t\t\t\t\tthis.switchStrategy();\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t}\n\t}\n\tprivate switchStrategy() {\n\t\tif (this.currentStrategy instanceof RelativeStrategy) {\n\t\t\tconsole.log(\"Switch to absolute keyboard\")\n\t\t\tthis.currentStrategy = new AbsoluteStrategy()\n\t\t} else {\n\t\t\tconsole.log(\"Switch to relative keyboard\")\n\t\t\tthis.currentStrategy = new RelativeStrategy()\n\t\t}\n\t}\n}\n\ninterface ControlStrategy {\n\tgetAbsoluteDirection(): number\n\tgetTurnRate(): number\n\tgetThrust(): number\n\tonKeyAction(keyCode: string, isPressed: boolean): void\n}\n\nclass RelativeStrategy implements ControlStrategy {\n\n\tprivate turnRate: number = 0\n\tprivate thrust: number = 0\n\n\tprivate valueLeft = 0;\n\tprivate valueRight = 0;\n\n\tgetAbsoluteDirection(): number {\n\t\treturn undefined;\n\t}\n\n\tgetTurnRate(): number {\n\t\treturn this.turnRate\n\t}\n\n\tgetThrust(): number {\n\t\treturn this.thrust\n\t}\n\n\tonKeyAction(keyCode: string, isPressed: boolean) {\n\t\tif (keyCode == Keys.UP) {\n\t\t\tthis.thrust = isPressed ? 1 : 0\n\t\t}\n\t\tif (keyCode == Keys.LEFT) {\n\t\t\tthis.valueLeft = isPressed ? 1 : 0\n\t\t}\n\t\tif (keyCode == Keys.RIGHT) {\n\t\t\tthis.valueRight = isPressed ? 1 : 0\n\t\t}\n\t\tthis.turnRate = this.valueLeft - this.valueRight;\n\t}\n}\n\nclass AbsoluteStrategy implements ControlStrategy {\n\n\tprivate absoluteDirection: number = undefined\n\tprivate thrust: number = 0\n\n\tprivate valueUp: number = 0\n\tprivate valueDown: number = 0\n\tprivate valueLeft: number = 0\n\tprivate valueRight: number = 0\n\n\tgetAbsoluteDirection(): number {\n\t\treturn this.absoluteDirection\n\t}\n\n\tgetTurnRate(): number {\n\t\treturn undefined\n\t}\n\n\tgetThrust(): number {\n\t\treturn this.thrust\n\t}\n\n\tonKeyAction(keyCode: string, isPressed: boolean) {\t\t\n\t\tswitch (keyCode) {\n\t\t\tcase Keys.UP:\n\t\t\t\tthis.valueUp = isPressed ? 1 : 0\n\t\t\t\tbreak\n\t\t\tcase Keys.DOWN:\n\t\t\t\tthis.valueDown = isPressed ? 1 : 0\n\t\t\t\tbreak\n\t\t\tcase Keys.RIGHT:\n\t\t\t\tthis.valueRight = isPressed ? 1 : 0\n\t\t\t\tbreak\n\t\t\tcase Keys.LEFT:\n\t\t\t\tthis.valueLeft = isPressed ? 1 : 0\n\t\t\t\tbreak\n\t\t}\n\t\tlet thrustX = this.valueRight - this.valueLeft;\n\t\tlet thrustY = this.valueUp - this.valueDown;\n\n\t\tif (thrustX != 0 || thrustY != 0) {\n\t\t\tthis.absoluteDirection = Math.atan2(thrustY, thrustX)\n\t\t} else {\n\t\t\tthis.absoluteDirection = undefined\n\t\t}\n\t\tthis.thrust = (thrustX != 0 || thrustY != 0) ? 1 : 0;\n\t}\n}","import { Controller } from \"domain/controller/controller\";\nimport { bridge } from \"worker/worker\";\nimport { ControllerBridge } from \"./controllerbridge\";\n\n/**\n * Wraps a Controller connected to the UI with a layer to communication with a corresponding Client on\n * engine side.\n */\nexport class ControllerServer {\n\n\tprivate controllerBridge: ControllerBridge\n\n\t/**\n\t * @param controller The controller to wrap\n\t * @param bridgeKey The communication key which has to match the corresponding client\n\t */\n\tconstructor(private controller: Controller, bridgeKey: string) {\n\t\tthis.initProxy(bridgeKey)\n\t}\n\n\tprivate async initProxy(bridgeKey: string) {\n\t\ttry {\n\t\t\tthis.controllerBridge = await bridge.createProxy(bridgeKey)\n\t\t} catch (err) {\n\t\t\tconsole.error(\"Failed to create ControllerBridge proxy for key \" + bridgeKey + \". Reason: \" + err)\n\t\t}\n\t}\n\n\t/**\n\t * Pushes all values of this Controller to the other bridge side.\n\t * Has to be called on a regular basis.\n\t */\n\tupdate() {\n\t\tif (this.controllerBridge !== undefined) {\n\t\t\tthis.controllerBridge.setAbsoluteDirection(this.controller.getAbsoluteDirection())\n\t\t\tthis.controllerBridge.setTurnRate(this.controller.getTurnRate())\n\t\t\tthis.controllerBridge.setThrust(this.controller.getThrust())\n\t\t\tthis.controllerBridge.setShooting(this.controller.isShooting())\n\t\t}\n\t}\n}\n","\nimport {bridge} from \"worker/worker\"\nimport {ThreeGraphics} from \"adapters/graphics/threegraphics/threegraphics\"\nimport {createGraphicsServer} from \"adapters/graphics/graphicsbridge/graphicsserver\"\nimport { DefaultControllerManager } from \"adapters/controller/defaultcontrollermanager\"\nimport { ControllerManagerServer } from \"adapters/controller/controllerbridge/controllermanagerserver\"\n\nlet graphics = new ThreeGraphics()\ncreateGraphicsServer(graphics)\n\nlet controllerManagerServer = new ControllerManagerServer(new DefaultControllerManager(), \"controllerManager\")\n\nfunction animate(time:number){\n\trequestAnimationFrame(animate)\n\tgraphics.control.update(time)\n\tcontrollerManagerServer.update()\n\tbridge.sendAll()\n}\nrequestAnimationFrame(animate)\n","\nimport {vec2, vec3} from \"gl-matrix\"\n\nimport * as THREE from \"three\"\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\n\nimport {Graphics} from \"domain/graphics/graphics\"\nimport {GraphicsController} from \"domain/graphics/graphicscontroller\"\nimport {CameraConfig} from \"domain/graphics/camera\"\n\nimport {renderer} from \"./threerenderer\"\nimport {SceneInfo} from \"./sceneinfo\"\n\nimport {ThreeModelLoader} from \"./threemodel\"\n\nimport {ThreeCameraFactory, ThreeCamera} from \"./threecamera\"\nimport {ThreeLightFactory} from \"./threelight\"\nimport {ThreeMeshFactory} from \"./threemesh\"\n\nimport {ThreeGraphicsController} from \"./threegraphicscontroller\"\nimport { ThreeSkyboxLoader } from \"./threeskybox\"\n\nexport class ThreeGraphics implements Graphics{\n\n\tscene:THREE.Scene\n\n\tmodel: ThreeModelLoader\n\tskybox: ThreeSkyboxLoader\n\n\tcamera: ThreeCameraFactory\n\tlight: ThreeLightFactory\n\tmesh: ThreeMeshFactory\n\n\tcontrol: GraphicsController\n\n\tconstructor(){\n\t\t\n\t\tthis.scene = new THREE.Scene()\n\t\t//@ts-ignore\n\t\twindow[\"scene\"] = this.scene\n\n\t\tthis.model = new ThreeModelLoader()\n\t\tthis.skybox = new ThreeSkyboxLoader()\n\n\t\tthis.camera = new ThreeCameraFactory(this.scene)\n\t\tthis.light = new ThreeLightFactory(this.scene)\n\t\tthis.mesh = new ThreeMeshFactory(this.scene)\n\n\n\t\t// controllable test camera\n\t\tlet defaultCam = this.camera.create(new CameraConfig())\n\t\tdefaultCam.position = vec3.fromValues(0, 0, 10)\n\t\tdefaultCam.activate()\n\t\tdefaultCam.threeObject.up.set(0, 0, 1)\n\t\tthis.scene.add(defaultCam.threeObject)\n\n\t\tconst controls = new OrbitControls(defaultCam.threeObject, renderer.domElement)\n\t\tcontrols.screenSpacePanning = true\n\n\t\t// default lighting\n\t\t//this.scene.add(new THREE.HemisphereLight(\"white\", \"black\"))\n\n\t\t// origin\n\t\t//this.scene.add(new THREE.AxesHelper())\n\n\t\t/*\n\t\tlet sphere = new THREE.Mesh(\n\t\t\tnew THREE.SphereGeometry(10, 32, 32),\n\t\t\tnew THREE.MeshStandardMaterial()\n\t\t)\n\t\tthis.scene.add(sphere)\n\t\t*/\n\t\t\n\n\t\tthis.control = new ThreeGraphicsController(this)\n\t}\n\n}\n","\nimport {Graphics} from \"domain/graphics/graphics\"\nimport {bridge} from \"worker/worker\"\n\nexport function createGraphicsServer(graphics:Graphics){\n\tbridge.register(graphics, \"graphicsServer\")\n}\n","import { Controller } from \"domain/controller/controller\";\nimport { ControllerManager } from \"domain/controller/controllermanager\";\nimport { bridge } from \"worker/worker\";\nimport { ControllerManagerBridge } from \"./controllerbridge\";\nimport { ControllerServer } from \"./controllerserver\";\n\n/**\n * Wraps the ControllerManager on the UI side with a layer to communication with a corresponding Client on\n * engine side.\n */\nexport class ControllerManagerServer {\n\n\tprivate newControllerCounter = 0\n\n\tprivate controllerManagerBridge: ControllerManagerBridge\n\n\tprivate controllerMap: Map<string, ControllerServer> = new Map()\n\n\t/**\n\t * @param controllerManager The ControllerManager to wrap\n\t * @param bridgeKey The communication key which has to match the corresponding client\n\t */\n\tconstructor(controllerManager: ControllerManager, bridgeKey: string) {\n\t\tcontrollerManager.addConnectionCallback(this.controllerAdded.bind(this))\n\t\tthis.initProxy(bridgeKey)\n\t}\n\n\tprivate async initProxy(bridgeKey: string) {\n\t\ttry {\n\t\t\tthis.controllerManagerBridge = await bridge.createProxy(bridgeKey)\n\t\t\tthis.publishAllControllers()\n\t\t} catch (err) {\n\t\t\tconsole.error(\"Failed to create ControllerManagerBridge proxy for key \" + bridgeKey + \". Reason: \" + err)\n\t\t}\n\t}\n\n\tprivate publishAllControllers() {\n\t\tfor (const bridgeKey of this.controllerMap.keys()) {\n\t\t\tthis.controllerManagerBridge.controllerAdded(bridgeKey)\n\t\t}\n\t}\n\n\tprivate controllerAdded(controller: Controller) {\n\t\tlet bridgeKey = this.createRandomBridgeKey()\n\t\tthis.controllerMap.set(bridgeKey, new ControllerServer(controller, bridgeKey))\n\t\tif (this.controllerManagerBridge !== undefined) {\n\t\t\tthis.controllerManagerBridge.controllerAdded(bridgeKey)\n\t\t}\n\t}\n\n\tprivate createRandomBridgeKey() {\n\t\treturn \"controller\" + ++this.newControllerCounter;\n\t}\n\n\t/**\n\t * Updates all managed ControllerServers.\n\t * Has to be called on a regular basis.\n\t */\n\tupdate() {\n\t\tfor (const controllerServer of this.controllerMap.values()) {\n\t\t\tcontrollerServer.update()\n\t\t}\n\t}\n}","import { ConnectionCallback, ControllerManager } from \"domain/controller/controllermanager\";\nimport { Controller } from \"domain/controller/controller\";\nimport { Keyboard } from \"./keyboard\";\n\nexport class DefaultControllerManager implements ControllerManager {\n\n\tprivate connectedControllers:Set<Controller> = new Set()\n\tprivate connectionCallbacks:Set<ConnectionCallback> = new Set()\n\n\tconstructor() {\n\t\tthis.initKeyboard()\n\t}\n\n\taddConnectionCallback(callback: ConnectionCallback): void {\n\t\tthis.connectionCallbacks.add(callback)\n\t\tfor (const controller of this.connectedControllers) {\n\t\t\tcallback(controller)\n\t\t}\n\t}\n\n\tremoveConnectionCallback(callbackToBeRemoved: ConnectionCallback): void {\n\t\tthis.connectionCallbacks.delete(callbackToBeRemoved)\n\t}\n\n\tprivate initKeyboard():void {\n\t\tthis.addController(new Keyboard())\n\t}\n\n\tprivate addController(controller:Controller) {\n\t\tthis.connectedControllers.add(controller)\n\t\tfor (const callback of this.connectionCallbacks) {\n\t\t\tcallback(controller)\n\t\t}\n\t}\n\t\n}"],"sourceRoot":""}