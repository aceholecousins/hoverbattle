{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/domain/graphics/scenenode.ts","webpack:///./src/domain/graphics/camera.ts","webpack:///./src/utils.ts","webpack:///./src/adapters/graphics/threegraphics/threerenderer.ts","webpack:///./src/adapters/graphics/threegraphics/threemodel.ts","webpack:///./src/domain/graphics/model.ts","webpack:///./src/adapters/graphics/threegraphics/threescenenode.ts","webpack:///./src/adapters/graphics/threegraphics/threecamera.ts","webpack:///./src/adapters/graphics/threegraphics/threelight.ts","webpack:///./src/adapters/graphics/threegraphics/threemesh.ts","webpack:///./src/adapters/graphics/threegraphics/threegraphicscontroller.ts","webpack:///./src/adapters/graphics/threegraphics/threeskybox.ts","webpack:///./src/domain/graphics/skybox.ts","webpack:///./src/adapters/graphics/threegraphics/threearena.ts","webpack:///./src/domain/graphics/arena.ts","webpack:///./src/ui_main.ts","webpack:///./src/adapters/graphics/threegraphics/threegraphics.ts","webpack:///./src/adapters/graphics/graphicsbridge/graphicsserver.ts","webpack:///./src/worker/debug.ts","webpack:///./src/worker/proxy.ts","webpack:///./src/worker/path.ts","webpack:///./src/worker/referencify.ts","webpack:///./src/worker/handlers.ts","webpack:///./src/worker/workerbridge.ts","webpack:///./src/worker/worker.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","SceneNodeConfig","config","position","fromValues","orientation","scaling","this","kind","CameraConfig","super","nearClip","farClip","verticalAngleOfViewInDeg","onAspectChange","aspect","copy","target","source","keys","k","copyIfPresent","renderer","canvas","document","getElementById","threeObject","undefined","gltfLoader","GLTFLoader","ThreeModelLoader","file","onLoaded","onError","model","load","gltf","scene","processModel","mesh","material","normalMapType","child","children","threeScene","add","set","q","quaternion","scale","remove","threeCam","resize","domElement","clientWidth","clientHeight","updateProjectionMatrix","addEventListener","nc","near","fc","far","aov","fov","cb","_onAspectChange","userData","activeCamera","ThreeCameraFactory","color","col","setRGB","g","b","groundColor","skyColor","ThreeLightFactory","colorRecursive","obj","type","template","clone","ThreeMeshFactory","asset","graphics","setSize","env","background","threeCubemap","environment","threePmrem","time","render","cubeLoader","pmremGenerator","compileCubemapShader","ThreeSkyboxLoader","skybox","replace","map","pmrem","fromCubemap","texture","arena","boundary","tris","node","console","log","startsWith","updateMatrixWorld","bufGeom","geometry","toNonIndexed","verts","fromBufferGeometry","vertices","va","localToWorld","A","x","y","vb","B","vc","C","dispose","extractBoundary","camera","light","defaultCam","activate","up","OrbitControls","screenSpacePanning","control","register","requestAnimationFrame","animate","update","sendAll","DBG_LOG","msgs","_createProxy","bridge","ref","JSON","stringify","resolvePath","remoteOtherIndexCounter","enqueueMsg","path","id","Proxy","prop","val","referencifyObject","receiver","parent","makeLazyPath","thisArg","args","construct","Array","isArray","wrapped","referencifyChildren","__ref__","fn","__cb__","localOwnIndexCounter","newIndex","localRegistry","referencifyFunction","Error","resolveReferences","remoteOwnIndexCounter","field","resolveReferenceMembers","handleMessage","msg","connected","sendWhenConnected","handleReady","remoteRegistry","pendingProxies","resolve","handleRegister","localOtherIndexCounter","handleLinkage","warn","handleCall","handleNew","handlePropertySet","handleDispose","workerFile","worker","Set","msgQueue","Worker","onmessage","receive","postMessage","event","remoteKey","isNaN","Promise"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAKlC,IAFGe,GAAqBA,EAAoBhB,GAEtCO,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrBiB,EAAG,GAGAZ,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU8B,QAGnC,IAAIC,EAASH,EAAiB5B,GAAY,CACzCK,EAAGL,EACHgC,GAAG,EACHF,QAAS,IAUV,OANAhB,EAAQd,GAAUW,KAAKoB,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG/DK,EAAOC,GAAI,EAGJD,EAAOD,QAKfJ,EAAoBO,EAAInB,EAGxBY,EAAoBQ,EAAIN,EAGxBF,EAAoBS,EAAI,SAASL,EAASM,EAAMC,GAC3CX,EAAoBY,EAAER,EAASM,IAClC5B,OAAO+B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEX,EAAoBgB,EAAI,SAASZ,GACX,oBAAXa,QAA0BA,OAAOC,aAC1CpC,OAAO+B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DrC,OAAO+B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKzC,OAAO0C,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBzC,OAAO+B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBS,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAL,EAAoBS,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRX,EAAoBY,EAAI,SAASgB,EAAQC,GAAY,OAAO/C,OAAOC,UAAUC,eAAeC,KAAK2C,EAAQC,IAGzG7B,EAAoB8B,EAAI,GAExB,IAAIC,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAW5C,KAAKuC,KAAKK,GAC5CA,EAAW5C,KAAOf,EAClB2D,EAAaA,EAAWG,QACxB,IAAI,IAAIvD,EAAI,EAAGA,EAAIoD,EAAWlD,OAAQF,IAAKP,EAAqB2D,EAAWpD,IAC3E,IAAIU,EAAsB4C,EAI1B1C,EAAgBJ,KAAK,CAAC,GAAG,IAElBM,I,kCCtJT,oDAWO,MAAM0C,EAMZ,YAAYC,EAAqC,IAJjD,KAAAC,SAAW,IAAKC,WAAW,EAAG,EAAG,GACjC,KAAAC,YAAc,IAAKD,WAAW,EAAG,EAAG,EAAG,GACvC,KAAAE,QAAU,IAAKF,WAAW,EAAG,EAAG,GAG/BG,KAAKC,KAAON,EAAOM,KACnB,YAAcD,KAAML,EAAQ,CAAC,WAAY,cAAe,e,gCCnB1D,qDAaO,MAAMO,UAAqB,IAOjC,YAAYP,EAA+B,IAC1CQ,MAAMR,GAPP,KAAAM,KAAgB,SAChB,KAAAG,SAAW,GACX,KAAAC,QAAU,IACV,KAAAC,yBAA2B,GAC3B,KAAAC,eAAiB,SAASC,KAIzB,YAAcR,KAAML,EAAQ,CAAC,WAAY,UAAW,gC,+BCL/C,SAASc,EACfC,EAAWC,EAAWC,GAEtB,IAAI,MAAMC,KAAKD,EACbF,EAAeG,GAAMF,EAAeE,GAIhC,SAASC,EACfJ,EAAWC,EAAWC,GAEtB,IAAI,MAAMC,KAAKD,EACXC,KAAKF,IACND,EAAeG,GAAMF,EAAeE,IAbxC,qE,gFCbO,IAAIE,EAAW,IAAI,KACzB,CAACC,OAAOC,SAASC,eAAe,kB,YCD1B,MAAM,UCFN,QDEP,c,oBACC,KAAAC,iBAA6BC,GAc9B,MAAMC,EAAa,IAAIC,EAAA,EAEhB,MAAMC,EACZ,KACCC,EACAC,EACAC,GAEA,IAAIC,EAAQ,IAAI,EAehB,OAbAN,EAAWO,KACVJ,GACA,SAASK,GACRF,EAAMR,YAAcU,EAAKC,MAxB7B,SAASC,EAAaC,GAClB,aAAcA,GAAQ,kBAAoBA,EAAoBC,WAC9DD,EAAoBC,SAAwCC,cAC5D,KAGH,IAAI,IAAIC,KAASH,EAAKI,SACrBL,EAAaI,GAkBXJ,CAAaJ,EAAMR,kBACHC,IAAbK,GACFA,WAGFL,EACAM,GAGMC,G,WErCF,MAAe,EAKrB,YACCG,EACA3C,EACAQ,GAEAK,KAAKqC,WAAaP,EAClB9B,KAAKmB,YAAchC,EACnB2C,EAAMQ,IAAInD,GAEV,YAAKa,KAAML,EAAQ,CAAC,OAAQ,WAAY,cAAe,YAGxD,aAAaN,GACZW,KAAKmB,YAAYvB,SAAS2C,IAAIlD,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAG7C,gBAAgBmD,GACfxC,KAAKmB,YAAYsB,WAAWF,IAAIC,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAGrD,YAAYhF,GACXwC,KAAKmB,YAAYuB,MAAMH,IAAI/E,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAG1C,SACCwC,KAAKqC,WAAWM,OAAO3C,KAAKmB,cC3BvB,MAAM,UAAoB,EA6BhC,YAAYW,EAAmBnC,GAC9B,IAAIiD,EAAW,IAAI,IAEnBzC,MAAM2B,EAAOc,EAAUjD,GACvB,YAAKK,KAAML,EAAQ,CAAC,WAAY,UAAW,2BAA4B,mBAEvE,MAAMkD,EAAS,KACd,IAAIrC,EAASO,EAAS+B,WAAWC,YAAchC,EAAS+B,WAAWE,aACnEJ,EAASpC,OAASA,EAClBoC,EAASK,yBACTjD,KAAKO,eAAeC,IAGrBjB,OAAO2D,iBAAiB,SAAUL,GAClCA,IAtCD,aAAaM,GACZnD,KAAKmB,YAAYiC,KAAOD,EACxBnD,KAAKmB,YAAY8B,yBAGlB,YAAYI,GACXrD,KAAKmB,YAAYmC,IAAMD,EACvBrD,KAAKmB,YAAY8B,yBAGlB,6BAA6BM,GAC5BvD,KAAKmB,YAAYqC,IAAMD,EACvBvD,KAAKmB,YAAY8B,yBAGlB,mBAAmBQ,GAClBzD,KAAK0D,gBAAkBD,EACvBA,EAAIzD,KAAKmB,YAAwCX,QAGlD,qBACC,OAAOR,KAAK0D,gBAoBb,WACG1D,KAAKqC,WAAWsB,SAAuBC,aAAe5D,KAAKmB,aAIxD,MAAM0C,EAGZ,YAAY/B,GACX9B,KAAKqC,WAAaP,EAGnB,OAAOnC,GACN,OAAO,IAAI,EAAYK,KAAKqC,WAAY1C,ICxDnC,MAAM,UAAwB,EAQpC,YAAYmC,EAAmBnC,GAC9BQ,MAAM2B,EAAO,IAAI,IAAoBnC,GAErCK,KAAK8D,MAAQnE,EAAOmE,MAPrB,UAAUC,GACT/D,KAAKmB,YAAY2C,MAAME,OAAOD,EAAIxF,EAAGwF,EAAIE,EAAGF,EAAIG,IAU3C,MAAM,UAA6B,EAYzC,YAAYpC,EAAmBnC,GAC9BQ,MAAM2B,EAAO,IAAI,IAAyBnC,GAE1CK,KAAKmE,YAAcxE,EAAOwE,YAC1BnE,KAAKoE,SAAWzE,EAAOyE,SAZxB,gBAAgBL,GACf/D,KAAKmB,YAAYgD,YAAYH,OAAOD,EAAIxF,EAAGwF,EAAIE,EAAGF,EAAIG,GAGvD,aAAaH,GACZ/D,KAAKmB,YAAY2C,MAAME,OAAOD,EAAIxF,EAAGwF,EAAIE,EAAGF,EAAIG,IAW3C,MAAMG,EAGZ,YAAYvC,GACX9B,KAAKqC,WAAaP,EAGnB,iBAAiBnC,GAChB,OAAO,IAAI,EAAgBK,KAAKqC,WAAY1C,GAG7C,sBAAsBA,GACrB,OAAO,IAAI,EAAqBK,KAAKqC,WAAY1C,ICpDnD,SAAS2E,EAAeC,EAAqBR,GAC7B,QAAZQ,EAAIC,MACJD,EAAmBtC,SAAwC6B,MAAME,OAAOD,EAAIxF,EAAGwF,EAAIE,EAAGF,EAAIG,GAG7F,IAAI,IAAInG,KAAKwG,EAAInC,SAChBkC,EAAevG,EAAGgG,GAIb,MAAM,UAAkB,EAa9B,YAAYjC,EAAmB2C,EAAyB9E,GACvDQ,MAAM2B,EAAO2C,EAASC,QAAS/E,GAC/B,YAAKK,KAAML,EAAQ,CAAC,YAAa,gBAXlC,cAAcoE,GAEbO,EAAetE,KAAKmB,YAAa4C,GAGlC,gBAAgBA,GACfO,EAAetE,KAAKmB,YAAa4C,IAS5B,MAAMY,EAIZ,YAAY7C,GACX9B,KAAKqC,WAAaP,EAGnB,gBAAgBnC,GACf,OAAO,IAAI,EACVK,KAAKqC,WACJ1C,EAAOiF,MAAqBzD,YAAYuD,QACzC/E,ICrCI,MAAM,EAIZ,YAAYkF,GACX7E,KAAK6E,SAAWA,EAEhB,MAAMhC,EAAS,KACd9B,EAAS+D,QACR/D,EAAS+B,WAAWC,YACpBhC,EAAS+B,WAAWE,cACpB,IAIFzD,OAAO2D,iBAAiB,SAAUL,GAClCA,IAGD,oBAAoBL,GACnBxC,KAAK6E,SAAS/C,MAAMW,WAAWF,IAAIC,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAGxD,eAAeuC,GACd/E,KAAK6E,SAAS/C,MAAMkD,WAAcD,EAAoBE,aACtDjF,KAAK6E,SAAS/C,MAAMoD,YAAeH,EAAoBI,WAUxD,OAAOC,GACNrE,EAASsE,OACRrF,KAAK6E,SAAS/C,MACb9B,KAAK6E,SAAS/C,MAAM6B,SAAuBC,eC5CxC,MAAM,UCFN,QDEP,c,oBACC,KAAAqB,kBAAiC7D,EACjC,KAAA+D,gBAA2B/D,GAG5B,MAAMkE,EAAa,IAAI,IACjBC,EAAiB,IAAI,IAAqBxE,GAChDwE,EAAeC,uBAER,MAAMC,EACZ,KACCjE,EACAC,EACAC,GAEA,IAAIgE,EAAS,IAAI,EAgBjB,OAdAJ,EAAW1D,KAAK,CACfJ,EAAKmE,QAAQ,IAAK,MAAOnE,EAAKmE,QAAQ,IAAK,MAC3CnE,EAAKmE,QAAQ,IAAK,MAAOnE,EAAKmE,QAAQ,IAAK,MAC3CnE,EAAKmE,QAAQ,IAAK,MAAOnE,EAAKmE,QAAQ,IAAK,QAE5C,SAASC,GACR,IAAIC,EAAQN,EAAeO,YAAYF,GACvCF,EAAOT,aAAeW,EACtBF,EAAOP,WAAaU,EAAME,QAC1BtE,WAEDL,EACAM,GAEOgE,GE3BF,MAAM,UCJN,QDIP,c,oBACC,KAAAvE,iBAA6BC,GAiCvB,MAAM,EACZ,KACCI,EACAC,EACAC,GAEA,IAAIsE,EAAQ,IAAI,EAGZrE,GAFc,IAAIJ,GAEEK,KACvBJ,GACA,WAEC,GADAwE,EAAM7E,YAAcQ,EAAMR,iBACVC,IAAbK,EAAuB,CACzB,IAAIwE,EA5CT,SAAyBnE,GACxB,IAAIoE,EAAyB,GAE7B,IAAI,IAAIC,KAAQrE,EAAMM,SAErB,GADAgE,QAAQC,IAAIF,GACTA,EAAKlI,KAAKqI,WAAW,iBAAiB,CACxCH,EAAKI,oBACL,IAAIC,EAAYL,EAAoBM,SAAkCC,eAElEC,GADO,IAAI,KAAiBC,mBAAmBJ,GAClCK,SAEjB,IAAI,IAAI3K,EAAE,EAAGA,EAAEyK,EAAMvK,OAAQF,GAAG,EAAE,CACjC,IAAI4K,EAAKX,EAAKY,aAAaJ,EAAMzK,IAC7B8K,EAAI,IAAKnH,WAAWiH,EAAGG,EAAGH,EAAGI,GAC7BC,EAAKhB,EAAKY,aAAaJ,EAAMzK,EAAE,IAC/BkL,EAAI,IAAKvH,WAAWsH,EAAGF,EAAGE,EAAGD,GAC7BG,EAAKlB,EAAKY,aAAaJ,EAAMzK,EAAE,IAC/BoL,EAAI,IAAKzH,WAAWwH,EAAGJ,EAAGI,EAAGH,GACjChB,EAAKxJ,KAAK,CAACsK,EAAGI,EAAGE,IAGlBxF,EAAMa,OAAOwD,GACXA,EAAoBM,SAASc,UAIjC,OAAOrB,EAkBYsB,CAAgB7F,EAAMR,aACrCM,EAAS,CAACwE,gBAGZvE,GAGD,OAAOsE,GE1DT,IAAI,EAAW,ICiBR,MAcN,cAEChG,KAAK8B,MAAQ,IAAI,KAEjBvC,OAAc,MAAIS,KAAK8B,MAEvB9B,KAAK2B,MAAQ,IAAIJ,EACjBvB,KAAKgG,MAAQ,IAAI,EACjBhG,KAAK0F,OAAS,IAAID,EAElBzF,KAAKyH,OAAS,IAAI5D,EAAmB7D,KAAK8B,OAC1C9B,KAAK0H,MAAQ,IAAIrD,EAAkBrE,KAAK8B,OACxC9B,KAAKgC,KAAO,IAAI2C,EAAiB3E,KAAK8B,OAItC,IAAI6F,EAAa3H,KAAKyH,OAAO1I,OAAO,IAAI,KACxC4I,EAAW/H,SAAW,IAAKC,WAAW,EAAG,EAAG,IAC5C8H,EAAWC,WACXD,EAAWxG,YAAY0G,GAAGtF,IAAI,EAAG,EAAG,GACpCvC,KAAK8B,MAAMQ,IAAIqF,EAAWxG,aAET,IAAI2G,EAAA,EAAcH,EAAWxG,YAAaJ,EAAS+B,YAC3DiF,oBAAqB,EAiB9B/H,KAAKgI,QAAU,IAAI,EAAwBhI,QCzEtC,IAA8B6E,IFGhB,EEFpB,IAAOoD,SAASpD,EAAU,kBFS3BqD,uBALA,SAASC,EAAQ/C,GAChB8C,sBAAsBC,GACtB,EAASH,QAAQI,OAAOhD,GACxB,IAAOiD,c,iEGVoC,oBAAb,QAA0C9I,OAKlE,SAAS+I,KAAWC,GANN,ECKd,SAASC,EAAaC,EAAsBC,GASlDJ,EACCK,KAAKC,UAA2B,mBAAV,EAAuBF,IAAQA,IAGtD,IAAItG,EAA6B,GAKjC,SAASyG,IAUR,MATmB,mBAAV,IACRP,EAEiBG,EAAOK,wBAAgCH,KAAKC,UAAUF,MAGvED,EAAOM,WAAW,CAAC9I,KAAK,OAAQ+I,KAAKN,MACrCA,EAAMD,EAAOK,2BAEPJ,EAOR,SAASnB,IACRkB,EAAOM,WAAW,CACjB9I,KAAK,MACLgJ,GAAGJ,MAEJH,OAAMtH,EAGP,OAAO,IAAI8H,MAAM7M,OAAQ,CAExBkG,IAAG,CAAC7B,EAAYyI,EAAaC,KAC5BX,EAAOM,WAAW,CACjB9I,KAAK,MACLgJ,GAAGJ,IACHM,OAAMC,IAAIC,EAAkBZ,EAAQW,MAE9B,GAGR,IAAI1I,EAAYyI,EAAaG,GAC5B,GAAY,SAATH,EAGH,MAAY,YAATA,EACKN,IAEI,YAATM,EACK5B,GAEH4B,KAAQ/G,IACZA,EAAS+G,GAAQX,EAAaC,EChE3B,SAAsBc,EAAmBJ,GAE/C,OAAO,WACN,MAAsB,mBAAb,EACD,IAAII,IAAUJ,GAGd,CAACI,EAAQJ,IDyDuBK,CAAad,EAAKS,KAElD/G,EAAS+G,KAGjBpM,MAAK,CAAC2D,EAAY+I,EAAaC,KAC9BjB,EAAOM,WAAW,CACjB9I,KAAK,OACLgJ,GAAGJ,IACHa,KAAKL,EAAkBZ,EAAQiB,KAEhCpB,EACkCO,IACIJ,EAAOK,yBAEtCN,EAAaC,EAAQA,EAAOK,4BAGpCa,UAAS,CAACjJ,EAAYgJ,KACrBjB,EAAOM,WAAW,CACjB9I,KAAK,MACLgJ,GAAGJ,IACHa,KAAKL,EAAkBZ,EAAQiB,KAEhCpB,EACyCO,IACHJ,EAAOK,yBAEtCN,EAAaC,EAAQA,EAAOK,8BE7C/B,SAASO,EAAkBZ,EAAqB/J,GACtD,cAAa,GACZ,IAAK,SACL,IAAK,SACL,IAAK,UACJ,OAAOA,EACR,IAAK,SACJ,OAjCI,SAA6B+J,EAAqBlE,GACxD,IAAI9D,EAAWmJ,MAAMC,QAAQtF,GAAM,GAAK,GAExC,IAAI,IAAIvF,KAAOuF,EAAI,CAElB,IAAIuF,EAAUT,EAAkBZ,EAAQlE,EAAIvF,IAErB,iBAAd,IACL,WAAY8K,IAEdrJ,EAAa,QAAI,GAEf,YAAaqJ,IAEfrJ,EAAc,SAAI,IAIpBA,EAAKzB,GAAO8K,EAEb,OAAOrJ,EAaEsJ,CAAoBtB,EAAQ/J,GACpC,IAAK,WACJ,YAAqB0C,IAAlB1C,EAAMsL,QAtDL,SAA6BvB,EAAqBwB,GACxD,QAAiB7I,IAAd6I,EAAGC,OAAqB,CAK1B5B,EAAqBG,EAAO0B,sBAC5B7B,IAEA,IAAI8B,EAAW3B,EAAO0B,uBAGtB,OAFAF,EAAGC,OAASE,EACZ3B,EAAO4B,cAAcD,GAAYH,EAC1B,CAACC,OAAO,OAGf,MAAO,CAACA,OAAOD,EAAGC,QAwCTI,CAAoB7B,EAAQ/J,GAK5B,CAACsL,QAAQtL,EAAMsL,SAIzB,MAAM,IAAIO,MAAM,2BAA4B,GAwDtC,SAASC,EAAkB/B,EAAqB/J,GACtD,cAAa,GACZ,IAAK,SACL,IAAK,SACL,IAAK,UACJ,OAAOA,EACR,IAAK,SACJ,OA5DI,SAAiC+J,EAAqBlE,GAC5D,GAAG,WAAYA,EAAI,CAClB,GAA6B,iBAAnBA,EAAa,OAKtB,OAAOiE,EAAaC,EAAQlE,EAAY,QAEpC,GAAqB,QAAlBA,EAAY,OAOnB,OANA+D,EAEiBG,EAAOgC,uBAIjBjC,EAAaC,EAAQA,EAAOgC,yBAE/B,IAAqB,IAAlBlG,EAAY,OAAW,CAE9B,IAAI,IAAImG,KAASnG,EAChBA,EAAImG,GAASF,EAAkB/B,EAAQlE,EAAImG,IAE5C,OAAOnG,EAGP,MAAM,IAAIgG,MAAM,sCAGb,GAAG,YAAahG,EAAI,CACxB,GAC4B,iBAApBA,EAAc,SACM,iBAApBA,EAAc,QAGrB,OAAOkE,EAAO4B,cAAc9F,EAAIyF,SAE5B,IAAsB,IAAnBzF,EAAa,QAAW,CAE/B,IAAI,IAAImG,KAASnG,EAChBA,EAAImG,GAASF,EAAkB/B,EAAQlE,EAAImG,IAE5C,OAAOnG,EAGP,MAAM,IAAIgG,MAAM,6BAIjB,OAAOhG,EAWCoG,CAAwBlC,EAAQ/J,IC9HnC,SAASkM,EAAcnC,EAAqBoC,GAClD,OAAOA,EAAI5K,MACV,IAAK,SAwBP,SAAqBwI,GACpBA,EAAOqC,WAAY,EAChBrC,EAAOsC,mBACTtC,EAAOJ,UA1BN2C,CAAYvC,GACZ,MACD,IAAK,OA4BP,SAAwBA,EAAqBoC,GAE5C,GADApC,EAAOwC,eAAe3I,IAAIuI,EAAI5B,IAC3B4B,EAAI5B,MAAMR,EAAOyC,eACnB,IAAI,IAAIC,KAAW1C,EAAOyC,eAAeL,EAAI5B,IAC5CkC,IA/BAC,CAAe3C,EAAQoC,GACvB,MACD,IAAK,QAkCP,SAAuBpC,EAAqBoC,GAC3C,IAAItG,EAAUkE,EAAO4B,cACrB,IAAI,IAAIK,KAAUG,EAAgB7B,KAAK,CACtC,IAAI7G,EAAQoC,EAAImG,GACK,mBAAZ,IACRvI,EAAQA,EAAMlD,KAAKsF,IAEpBA,EAAMpC,EAEP,GAAmB,iBAAV,GAAsC,mBAAV,EACpC,MAAM,IAAIoI,MAAM,6DAA+DM,EAAI7B,MJ7DhE,EImEpBP,EAAO4B,cAAc5B,EAAO4C,0BAA4B9G,EAjDtD+G,CAAc7C,EAAQoC,GACtB,MACD,IAAK,QAkDP,SAAoBpC,EAAqBoC,GACxC,IAAI5N,EAASwL,EAAO4B,cAAcQ,EAAI5B,OAClCuB,EAAkB/B,EAAQoC,EAAInB,OAGd,iBAAb,GACa,mBAAb,EAKNjB,EAAO4B,cAAc5B,EAAO4C,0BAA4BpO,QAG1CmE,IAAXnE,GACFmJ,QAAQmF,KAAK,sDASd9C,EAAO4C,0BAzENG,CAAW/C,EAAQoC,GACnB,MACD,IAAK,OA2EP,SAAmBpC,EAAqBoC,GACvC,IAAI5N,EAAS,IAAIwL,EAAO4B,cAAcQ,EAAI5B,OACtCuB,EAAkB/B,EAAQoC,EAAInB,OJpGd,EIyGpBjB,EAAO4B,cAAc5B,EAAO4C,0BAA4BpO,EAjFtDwO,CAAUhD,EAAQoC,GAClB,MACD,IAAK,OAkFP,SAA2BpC,EAAqBoC,GAC/CpC,EAAO4B,cAAcQ,EAAI5B,IAAI4B,EAAI1B,MAChCqB,EAAkB/B,EAAQoC,EAAIzB,KAnF7BsC,CAAkBjD,EAAQoC,GAC1B,MACD,IAAK,OAoFP,SAAuBpC,EAAqBoC,QACCzJ,IAAzCqH,EAAO4B,cAAcQ,EAAI5B,IAAI1B,SAC/BkB,EAAO4B,cAAcQ,EAAI5B,IAAI1B,iBAEvBkB,EAAO4B,cAAcQ,EAAI5B,IAvF9B0C,CAAclD,EAAQoC,I,0SCblB,MAAM,EAsCZ,YAAYe,GApCZ,KAAAC,YAAgBzK,EAChB,KAAA0J,WAAY,EACZ,KAAAC,mBAAoB,EAIpB,KAAAV,cAGI,GAGJ,KAAAY,eAAiB,IAAIa,IAIrB,KAAAZ,eAEI,GAIJ,KAAAf,qBAAuB,EAGvB,KAAAkB,wBAA0B,EAI1B,KAAAZ,sBAAwB,EAGxB,KAAA3B,yBAA2B,EAiB3B,KAAAiD,SAAwB,QAZL3K,IAAfwK,GACF5L,KAAK6L,OAAS,IAAIG,OAAOJ,GACzB5L,KAAK6L,OAAOI,UAAYjM,KAAKkM,QAAQjN,KAAKe,QAG1CiM,UAAYjM,KAAKkM,QAAQjN,KAAKe,MAC9BA,KAAK+I,WAAW,CAAC9I,KAAK,UACtBD,KAAKqI,UACLrI,KAAK8K,WAAY,GAMnB,WAAWD,GACV7K,KAAK+L,SAASrP,KAAKmO,GAGpB,UACC,GAA2B,GAAxB7K,KAAK+L,SAAS3P,OAAjB,CAIAkM,IACA,IAAI,IAAIuC,KAAO7K,KAAK+L,SACnBzD,EAAgBK,KAAKC,UAAUiC,SAGbzJ,IAAhBpB,KAAK6L,OACJ7L,KAAK8K,WACP9K,KAAK6L,OAAOM,YAAYnM,KAAK+L,UAC7B/L,KAAK+L,SAAW,IAGhB/L,KAAK+K,mBAAoB,GAM1BoB,YAAYnM,KAAK+L,UACjB/L,KAAK+L,SAAW,KAIlB,QAAQK,GACP,IAAI,IAAIlQ,KAAKkQ,EAAMxQ,KAAK,CACvB,IAAIiP,EAAMuB,EAAMxQ,KAAKM,GACrBoM,IACAA,IACAsC,EAAc5K,KAAM6K,IAKtB,SAAS1L,EAAelB,GACvBqK,IACAtI,KAAKqK,cAAcpM,GAAQkB,EAC3Ba,KAAK+I,WAAW,CAAC9I,KAAK,MAAOgJ,GAAGhL,IAI3B,YAAYoO,G,yCAGjB,IAAIC,MAAMD,GACT,MAAM,IAAI9B,MAAM,sDAEjB,GAAG8B,KAAarM,KAAKiL,eACpB,OAAOzC,EAAaxI,KAAMqM,GAEvB,CACH,IAAI5D,EAASzI,KACb,OAAO,IAAIuM,SAAQ,SAASpB,GACtBkB,KAAa5D,EAAOyC,iBAExBzC,EAAOyC,eAAemB,GAAa,IAEpC5D,EAAOyC,eAAemB,GAAW3P,MAChC,WACCyO,EAAQ3C,EAAaC,EAAQ4D,eCpInC,IAAI,OAEmBjL,IAApB7B,OAAO0B,UACTmF,QAAQC,IAAI,kBACZ,EAAS,IAAI,EAAa,yBAI1B,EAAS,IAAI","file":"acechase_ui.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([74,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\nimport {vec3, quat} from \"gl-matrix\"\nimport {Kind, copyIfPresent} from \"utils\"\n\nexport interface SceneNode<K extends Kind>{\n\tkind:K\n\tposition?:vec3\n\torientation?:quat\n\tscaling?:vec3\n\tremove():void\n}\n\nexport class SceneNodeConfig<K extends Kind>{\n\tkind: K\n\tposition = vec3.fromValues(0, 0, 0)\n\torientation = quat.fromValues(0, 0, 0, 1)\n\tscaling = vec3.fromValues(1, 1, 1)\n\n\tconstructor(config:Partial<SceneNodeConfig<K>> = {}){\n\t\tthis.kind = config.kind\n\t\tcopyIfPresent(this, config, [\"position\", \"orientation\", \"scaling\"])\n\t}\n}\n\nexport type NodeKind<T> =\n\tT extends SceneNode<infer K> ? K:\n\tT extends SceneNodeConfig< infer K> ? K:\n\tnever\n","\nimport {SceneNode, SceneNodeConfig} from \"./scenenode\"\nimport {copyIfPresent} from \"utils\"\n\nexport interface Camera extends SceneNode<\"camera\">{\n\tkind:\"camera\"\n\tnearClip:number\n\tfarClip:number\n\tverticalAngleOfViewInDeg:number\n\tonAspectChange: (aspect:number)=>void\n\n\tactivate():void\n}\n\nexport class CameraConfig extends SceneNodeConfig<\"camera\">{\n\tkind:\"camera\" = \"camera\"\n\tnearClip = 0.1\n\tfarClip = 1000\n\tverticalAngleOfViewInDeg = 40\n\tonAspectChange = function(aspect:number){}\n\n\tconstructor(config:Partial<CameraConfig> = {}){\n\t\tsuper(config)\n\t\tcopyIfPresent(this, config, [\"nearClip\", \"farClip\", \"verticalAngleOfViewInDeg\"])\n\t}\t\n}\n\nexport interface CameraFactory{\n\tcreate(config: CameraConfig): Camera\n}","\nexport type Registry<T> = { [index: string]: T }\n\nexport interface Color{\n\tr:number\n\tg:number\n\tb:number\n}\n\nexport type Kind = string\n\n// https://stackoverflow.com/a/49579497/3825996\ntype OptionalKeys<T> = { [K in keyof T]-?:\n  ({} extends { [P in K]: T[K] } ? K : never)\n}[keyof T]\n\nexport type Optionals<T> = Required<Pick<T, OptionalKeys<T>>>\n\nexport function copy<T1, T2, K extends keyof T1 & keyof T2>(\n\ttarget:T1, source:T2, keys:K[]){\n\n\tfor(const k of keys){\n\t\t(target as any)[k] = (source as any)[k]\n\t}\n}\n\nexport function copyIfPresent<T1, T2, K extends keyof T1 & keyof T2>(\n\ttarget:T1, source:T2, keys:K[]){\n\n\tfor(const k of keys){\n\t\tif(k in source){\n\t\t\t(target as any)[k] = (source as any)[k]\n\t\t}\n\t}\n}","\nimport * as THREE from \"three\"\n\n// resources like textures can not be shared across renderers\n// so we need one global renderer for all scenes and texture generators and the water and so on\nexport let renderer = new THREE.WebGLRenderer(\n\t{canvas:document.getElementById(\"rendertarget\") as HTMLCanvasElement}\n)","\nimport {Model, ModelLoader} from \"domain/graphics/model\"\nimport * as THREE from \"three\"\nimport {GLTFLoader} from 'three/examples/jsm/loaders/GLTFLoader'\n\nexport class ThreeModel extends Model{\n\tthreeObject:THREE.Object3D = undefined\n}\n\nfunction processModel(mesh:THREE.Object3D){\n\tif(\"material\" in mesh && \"normalMapType\" in (mesh as THREE.Mesh).material){\n\t\t((mesh as THREE.Mesh).material as THREE.MeshStandardMaterial).normalMapType =\n\t\t\t\tTHREE.ObjectSpaceNormalMap\n\t}\n\n\tfor(let child of mesh.children){\n\t\tprocessModel(child)\n\t}\n}\n\nconst gltfLoader = new GLTFLoader()\n\nexport class ThreeModelLoader implements ModelLoader{\n\tload(\n\t\tfile: string,\n\t\tonLoaded?:()=>void,\n\t\tonError?:(err:ErrorEvent)=>void\n\t){\n\t\tlet model = new ThreeModel()\n\n\t\tgltfLoader.load(\n\t\t\tfile,\n\t\t\tfunction(gltf){\n\t\t\t\tmodel.threeObject = gltf.scene\n\t\t\t\tprocessModel(model.threeObject)\n\t\t\t\tif(onLoaded !== undefined){\n\t\t\t\t\tonLoaded()\n\t\t\t\t}\n\t\t\t},\n\t\t\tundefined,\n\t\t\tonError\n\t\t)\n\t\n\t\treturn model\n\t}\n}","\nimport {Asset, LoadAssetFunction} from \"./asset\"\n\nexport class Model implements Asset<\"model\">{\n\tkind:\"model\"\n}\n\nexport interface ModelLoader{\n\tload:LoadAssetFunction<Model>\n}","\nimport * as THREE from \"three\"\nimport {SceneNode, SceneNodeConfig} from \"domain/graphics/scenenode\"\nimport {vec3, quat} from \"gl-matrix\"\nimport {Kind, copy} from \"utils\"\n\nexport abstract class ThreeSceneNode<K extends Kind> implements SceneNode<K>{\n\tkind:K\n\tthreeScene:THREE.Scene\n\tthreeObject:THREE.Object3D\n\t\n\tconstructor(\n\t\tscene:THREE.Scene,\n\t\tobject:THREE.Object3D,\n\t\tconfig:SceneNodeConfig<K>\n\t){\n\t\tthis.threeScene = scene\n\t\tthis.threeObject = object\n\t\tscene.add(object)\n\n\t\tcopy(this, config, [\"kind\", \"position\", \"orientation\", \"scaling\"])\n\t}\n\n\tset position(p:vec3){\n\t\tthis.threeObject.position.set(p[0], p[1], p[2])\n\t}\n\n\tset orientation(q:quat){\n\t\tthis.threeObject.quaternion.set(q[0], q[1], q[2], q[3])\n\t}\n\n\tset scaling(s:vec3){\n\t\tthis.threeObject.scale.set(s[0], s[1], s[2])\n\t}\n\n\tremove(){\n\t\tthis.threeScene.remove(this.threeObject)\n\t}\n}\n","\nimport {ThreeSceneNode} from \"./threescenenode\"\nimport {Camera, CameraConfig, CameraFactory} from \"domain/graphics/camera\"\nimport {SceneInfo} from \"./sceneinfo\"\nimport * as THREE from \"three\"\nimport {copy} from \"utils\"\nimport { renderer } from \"./threerenderer\"\nimport { PerspectiveCamera } from \"three\"\n\nexport class ThreeCamera extends ThreeSceneNode<\"camera\"> implements Camera{\n\n\tthreeObject:THREE.PerspectiveCamera\n\t_onAspectChange: (aspect:number)=>void\n\n\tset nearClip(nc:number){\n\t\tthis.threeObject.near = nc\n\t\tthis.threeObject.updateProjectionMatrix()\n\t}\n\n\tset farClip(fc:number){\n\t\tthis.threeObject.far = fc\n\t\tthis.threeObject.updateProjectionMatrix()\n\t}\n\n\tset verticalAngleOfViewInDeg(aov:number){\n\t\tthis.threeObject.fov = aov\n\t\tthis.threeObject.updateProjectionMatrix()\n\t}\n\n\tset onAspectChange(cb:(aspect:number)=>void){\n\t\tthis._onAspectChange = cb\n\t\tcb((this.threeObject as THREE.PerspectiveCamera).aspect)\n\t}\n\n\tget onAspectChange(){\n\t\treturn this._onAspectChange\n\t}\n\n\tconstructor(scene:THREE.Scene, config:CameraConfig){\n\t\tlet threeCam = new THREE.PerspectiveCamera()\n\n\t\tsuper(scene, threeCam, config)\n\t\tcopy(this, config, [\"nearClip\", \"farClip\", \"verticalAngleOfViewInDeg\", \"onAspectChange\"])\n\n\t\tconst resize = ()=>{\n\t\t\tlet aspect = renderer.domElement.clientWidth / renderer.domElement.clientHeight\n\t\t\tthreeCam.aspect = aspect\n\t\t\tthreeCam.updateProjectionMatrix()\n\t\t\tthis.onAspectChange(aspect)\n\t\t}\n\t\t\n\t\twindow.addEventListener('resize', resize)\n\t\tresize()\t\t\n\t}\n\n\tactivate(){\n\t\t;(this.threeScene.userData as SceneInfo).activeCamera = this.threeObject\n\t}\n}\n\nexport class ThreeCameraFactory implements CameraFactory{\n\tthreeScene:THREE.Scene\n\n\tconstructor(scene:THREE.Scene){\n\t\tthis.threeScene = scene\n\t}\n\n\tcreate(config: CameraConfig){\n\t\treturn new ThreeCamera(this.threeScene, config)\n\t}\n}","\nimport {Color} from \"utils\"\nimport {ThreeSceneNode} from \"./threescenenode\"\nimport {\n\tPointLight,\n\tPointLightConfig,\n\tHemisphereLight,\n\tHemisphereLightConfig,\n\tLightFactory\n} from \"domain/graphics/light\"\nimport * as THREE from \"three\"\n\nexport class ThreePointLight extends ThreeSceneNode<\"pointlight\"> implements PointLight{\n\n\tthreeObject:THREE.PointLight\n\n\tset color(col:Color){\n\t\tthis.threeObject.color.setRGB(col.r, col.g, col.b)\n\t}\n\n\tconstructor(scene:THREE.Scene, config:PointLightConfig){\n\t\tsuper(scene, new THREE.PointLight(), config)\n\n\t\tthis.color = config.color\n\t}\n}\n\nexport class ThreeHemisphereLight extends ThreeSceneNode<\"hemispherelight\"> implements HemisphereLight{\n\n\tthreeObject:THREE.HemisphereLight\n\n\tset groundColor(col:Color){\n\t\tthis.threeObject.groundColor.setRGB(col.r, col.g, col.b)\n\t}\n\n\tset skyColor(col:Color){\n\t\tthis.threeObject.color.setRGB(col.r, col.g, col.b)\n\t}\n\n\tconstructor(scene:THREE.Scene, config:HemisphereLightConfig){\n\t\tsuper(scene, new THREE.HemisphereLight(), config)\n\n\t\tthis.groundColor = config.groundColor\n\t\tthis.skyColor = config.skyColor\n\t}\n}\n\nexport class ThreeLightFactory implements LightFactory{\n\tthreeScene:THREE.Scene\n\n\tconstructor(scene:THREE.Scene){\n\t\tthis.threeScene = scene\n\t}\n\n\tcreatePointLight(config: PointLightConfig){\n\t\treturn new ThreePointLight(this.threeScene, config)\n\t}\n\n\tcreateHemisphereLight(config: HemisphereLightConfig){\n\t\treturn new ThreeHemisphereLight(this.threeScene, config)\n\t}\n}","\nimport {Mesh, MeshConfig, ModelMeshConfig, MeshFactory} from \"domain/graphics/mesh\"\nimport {ThreeSceneNode} from \"./threescenenode\"\nimport * as THREE from \"three\"\nimport {copy, Color} from \"utils\"\nimport {ThreeModel} from \"./threemodel\"\n\nfunction colorRecursive(obj: THREE.Object3D, col:Color){\n\tif(obj.type == \"mesh\"){\n\t\t((obj as THREE.Mesh).material as THREE.MeshStandardMaterial).color.setRGB(col.r, col.g, col.b)\n\t}\n\t\n\tfor(let c of obj.children){\n\t\tcolorRecursive(c, col)\n\t}\n}\n\nexport class ThreeMesh extends ThreeSceneNode<\"mesh\"> implements Mesh{\n\n\tthreeObject:THREE.Object3D\n\n\tset baseColor(col:Color){\n\t\t// TODO: proper filtering which parts to color and whether to color diffuse or emissive\n\t\tcolorRecursive(this.threeObject, col)\n\t}\n\n\tset accentColor(col:Color){\n\t\tcolorRecursive(this.threeObject, col)\n\t}\n\n\tconstructor(scene:THREE.Scene, template:THREE.Object3D, config:MeshConfig){\n\t\tsuper(scene, template.clone(), config)\n\t\tcopy(this, config, [\"baseColor\", \"accentColor\"])\n\t}\n}\n\nexport class ThreeMeshFactory implements MeshFactory{\n\n\tthreeScene:THREE.Scene\n\n\tconstructor(scene:THREE.Scene){\n\t\tthis.threeScene = scene\n\t}\n\n\tcreateFromModel(config:ModelMeshConfig){\n\t\treturn new ThreeMesh(\n\t\t\tthis.threeScene,\n\t\t\t(config.asset as ThreeModel).threeObject.clone(),\n\t\t\tconfig\n\t\t)\n\t}\n}","\nimport {SceneInfo} from \"./sceneinfo\"\nimport {ThreeGraphics} from \"./threegraphics\"\nimport {renderer} from \"./threerenderer\"\nimport {GraphicsController} from \"domain/graphics/graphicscontroller\"\nimport { quat } from \"gl-matrix\"\nimport { Skybox } from \"domain/graphics/skybox\"\nimport { ThreeSkybox } from \"./threeskybox\"\nimport { LightProbeGenerator } from 'three/examples/jsm/lights/LightProbeGenerator.js'\nimport * as THREE from \"three\"\n\nexport class ThreeGraphicsController implements GraphicsController{\n\n\tgraphics:ThreeGraphics\n\n\tconstructor(graphics:ThreeGraphics){\n\t\tthis.graphics = graphics\n\n\t\tconst resize = ()=>{\n\t\t\trenderer.setSize(\n\t\t\t\trenderer.domElement.clientWidth,\n\t\t\t\trenderer.domElement.clientHeight,\n\t\t\t\tfalse\n\t\t\t)\n\t\t}\n\t\t\n\t\twindow.addEventListener('resize', resize)\n\t\tresize()\n\t}\n\n\tsetSceneOrientation(q:quat){\n\t\tthis.graphics.scene.quaternion.set(q[0], q[1], q[2], q[3])\n\t}\n\n\tsetEnvironment(env:Skybox){\n\t\tthis.graphics.scene.background = (env as ThreeSkybox).threeCubemap\n\t\tthis.graphics.scene.environment = (env as ThreeSkybox).threePmrem\n\n\t\t/*\n\t\tlet lightProbe = new THREE.LightProbe()\n\t\tthis.graphics.scene.add( lightProbe )\n\n\t\tlightProbe.copy( LightProbeGenerator.fromCubeTexture( cubeMap ) )\n\t\t*/\n\t}\n\n\tupdate(time: number){\n\t\trenderer.render(\n\t\t\tthis.graphics.scene, \n\t\t\t(this.graphics.scene.userData as SceneInfo).activeCamera\n\t\t)\n\t}\n}","\nimport * as THREE from \"three\"\nimport {renderer} from \"./threerenderer\"\nimport { Skybox, SkyboxLoader } from \"domain/graphics/skybox\"\n\nexport class ThreeSkybox extends Skybox{\n\tthreeCubemap:THREE.CubeTexture = undefined\n\tthreePmrem:THREE.Texture = undefined\n}\n\nconst cubeLoader = new THREE.CubeTextureLoader()\nconst pmremGenerator = new THREE.PMREMGenerator(renderer)\npmremGenerator.compileCubemapShader()\n\nexport class ThreeSkyboxLoader implements SkyboxLoader{\n\tload(\n\t\tfile: string,\n\t\tonLoaded?:()=>void,\n\t\tonError?:(err:ErrorEvent)=>void\n\t){\n\t\tlet skybox = new ThreeSkybox()\n\n\t\tcubeLoader.load([\n\t\t\tfile.replace(\"*\", \"px\"), file.replace(\"*\", \"nx\"),\n\t\t\tfile.replace(\"*\", \"py\"), file.replace(\"*\", \"ny\"),\n\t\t\tfile.replace(\"*\", \"pz\"), file.replace(\"*\", \"nz\")\n\t\t],\n\t\tfunction(map){\n\t\t\tlet pmrem = pmremGenerator.fromCubemap(map)\n\t\t\tskybox.threeCubemap = map\n\t\t\tskybox.threePmrem = pmrem.texture\n\t\t\tonLoaded()\n\t\t},\n\t\tundefined,\n\t\tonError)\n\t\n\t\treturn skybox\n\t}\n}","\nimport {Asset, LoadAssetFunction} from \"./asset\"\n\nexport class Skybox implements Asset<\"skybox\">{\n\tkind:\"skybox\"\n}\n\nexport interface SkyboxLoader{\n\tload:LoadAssetFunction<Skybox>\n}","\nimport {Model, ModelLoader} from \"domain/graphics/model\"\nimport * as THREE from \"three\"\nimport {GLTFLoader} from 'three/examples/jsm/loaders/GLTFLoader'\nimport { Arena, ArenaLoader, ArenaInfo } from \"domain/graphics/arena\"\nimport { ThreeModel, ThreeModelLoader } from \"./threemodel\"\nimport { vec2 } from \"gl-matrix\"\nimport { TriangleCorners } from \"domain/physics/triangle\"\n\nexport class ThreeArena extends Arena{\n\tthreeObject:THREE.Object3D = undefined\n}\n\nfunction extractBoundary(scene:THREE.Scene){\n\tlet tris:TriangleCorners[] = []\n\n\tfor(let node of scene.children){\n\t\tconsole.log(node)\n\t\tif(node.name.startsWith(\"__collision__\")){\n\t\t\tnode.updateMatrixWorld()\n\t\t\tlet bufGeom = ((node as THREE.Mesh).geometry as THREE.BufferGeometry).toNonIndexed()\n\t\t\tlet geom = new THREE.Geometry().fromBufferGeometry(bufGeom)\n\t\t\tlet verts = geom.vertices\n\n\t\t\tfor(let i=0; i<verts.length; i+=3){\t\n\t\t\t\tlet va = node.localToWorld(verts[i])\n\t\t\t\tlet A = vec2.fromValues(va.x, va.y)\n\t\t\t\tlet vb = node.localToWorld(verts[i+1])\n\t\t\t\tlet B = vec2.fromValues(vb.x, vb.y)\n\t\t\t\tlet vc = node.localToWorld(verts[i+2])\n\t\t\t\tlet C = vec2.fromValues(vc.x, vc.y)\t\t\t\t\n\t\t\t\ttris.push([A, B, C])\n\t\t\t}\n\n\t\t\tscene.remove(node)\n\t\t\t;(node as THREE.Mesh).geometry.dispose()\n\t\t}\n\t}\n\n\treturn tris\n}\n\n// we delegate everything to the ThreeModelLoader but extract the information we need\nexport class ThreeArenaLoader implements ArenaLoader{\n\tload(\n\t\tfile: string,\n\t\tonLoaded?:(info:ArenaInfo)=>void,\n\t\tonError?:(err:ErrorEvent)=>void\n\t){\n\t\tlet arena = new ThreeArena()\n\t\tlet modelLoader = new ThreeModelLoader()\n\n\t\tlet model = modelLoader.load(\n\t\t\tfile,\n\t\t\tfunction(){\n\t\t\t\tarena.threeObject = model.threeObject\n\t\t\t\tif(onLoaded !== undefined){\n\t\t\t\t\tlet boundary = extractBoundary(model.threeObject as THREE.Scene)\n\t\t\t\t\tonLoaded({boundary})\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError\n\t\t)\n\n\t\treturn arena\n\t}\n}\n","\nimport {Asset, LoadAssetFunction} from \"./asset\"\nimport { TriangleCorners } from \"domain/physics/triangle\"\n\n\nexport class Arena implements Asset<\"arena\">{\n\tkind:\"arena\"\n}\n\nexport interface ArenaInfo{\n\tboundary: TriangleCorners[]\n}\n\nexport interface ArenaLoader{\n\tload:LoadAssetFunction<Arena, ArenaInfo>\n}","\nimport {bridge} from \"worker/worker\"\nimport {ThreeGraphics} from \"adapters/graphics/threegraphics/threegraphics\"\nimport {createGraphicsServer} from \"adapters/graphics/graphicsbridge/graphicsserver\"\nimport { Keyboard } from \"adapters/controller/keyboard\"\n\nlet graphics = new ThreeGraphics()\ncreateGraphicsServer(graphics)\n\nfunction animate(time:number){\n\trequestAnimationFrame(animate)\n\tgraphics.control.update(time)\n\tbridge.sendAll()\n}\nrequestAnimationFrame(animate)\n","\nimport {vec2, vec3} from \"gl-matrix\"\n\nimport * as THREE from \"three\"\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\n\nimport {Graphics} from \"domain/graphics/graphics\"\nimport {GraphicsController} from \"domain/graphics/graphicscontroller\"\nimport {CameraConfig} from \"domain/graphics/camera\"\n\nimport {renderer} from \"./threerenderer\"\nimport {SceneInfo} from \"./sceneinfo\"\n\nimport {ThreeModelLoader} from \"./threemodel\"\n\nimport {ThreeCameraFactory, ThreeCamera} from \"./threecamera\"\nimport {ThreeLightFactory} from \"./threelight\"\nimport {ThreeMeshFactory} from \"./threemesh\"\n\nimport {ThreeGraphicsController} from \"./threegraphicscontroller\"\nimport { ThreeSkyboxLoader } from \"./threeskybox\"\nimport { ThreeArenaLoader } from \"./threearena\"\n\nexport class ThreeGraphics implements Graphics{\n\n\tscene:THREE.Scene\n\n\tmodel: ThreeModelLoader\n\tarena: ThreeArenaLoader\n\tskybox: ThreeSkyboxLoader\n\n\tcamera: ThreeCameraFactory\n\tlight: ThreeLightFactory\n\tmesh: ThreeMeshFactory\n\n\tcontrol: GraphicsController\n\n\tconstructor(){\n\t\t\n\t\tthis.scene = new THREE.Scene()\n\t\t//@ts-ignore\n\t\twindow[\"scene\"] = this.scene\n\n\t\tthis.model = new ThreeModelLoader()\n\t\tthis.arena = new ThreeArenaLoader()\n\t\tthis.skybox = new ThreeSkyboxLoader()\n\n\t\tthis.camera = new ThreeCameraFactory(this.scene)\n\t\tthis.light = new ThreeLightFactory(this.scene)\n\t\tthis.mesh = new ThreeMeshFactory(this.scene)\n\n\n\t\t// controllable test camera\n\t\tlet defaultCam = this.camera.create(new CameraConfig())\n\t\tdefaultCam.position = vec3.fromValues(0, 0, 10)\n\t\tdefaultCam.activate()\n\t\tdefaultCam.threeObject.up.set(0, 0, 1)\n\t\tthis.scene.add(defaultCam.threeObject)\n\n\t\tconst controls = new OrbitControls(defaultCam.threeObject, renderer.domElement)\n\t\tcontrols.screenSpacePanning = true\n\n\t\t// default lighting\n\t\t//this.scene.add(new THREE.HemisphereLight(\"white\", \"black\"))\n\n\t\t// origin\n\t\t//this.scene.add(new THREE.AxesHelper())\n\n\t\t/*\n\t\tlet sphere = new THREE.Mesh(\n\t\t\tnew THREE.SphereGeometry(10, 32, 32),\n\t\t\tnew THREE.MeshStandardMaterial()\n\t\t)\n\t\tthis.scene.add(sphere)\n\t\t*/\n\t\t\n\n\t\tthis.control = new ThreeGraphicsController(this)\n\t}\n\n}\n","\nimport {Graphics} from \"domain/graphics/graphics\"\nimport {bridge} from \"worker/worker\"\n\nexport function createGraphicsServer(graphics:Graphics){\n\tbridge.register(graphics, \"graphicsServer\")\n}\n","\nexport const DEBUG = false\nexport const IN_WINDOW = typeof(window) !== \"undefined\" && \"document\" in window\nexport const IN_WORKER = !IN_WINDOW\nexport const DBG_ME = IN_WORKER? \"worker\" : \"window\"\nexport const DBG_OTHER = IN_WORKER? \"window\" : \"worker\"\n\nexport function DBG_LOG(...msgs:any[]){\n\tif(DEBUG){\n\t\tconsole.log(...msgs)\n\t}\n}","import { DBG_LOG, DBG_ME, DBG_OTHER } from \"./debug\"\nimport { ID, makeLazyPath, Reference } from \"./path\"\nimport { referencifyObject } from \"./referencify\"\nimport { WorkerBridge } from \"./workerbridge\"\n\n// more general proxy creation, also for anonymous objects and child objects\nexport function _createProxy(bridge: WorkerBridge, ref: Reference):any{\n\t// ref defines how this proxy relates to its target on the other side\n\t// - ID as Key means, the proxied object was explicitly registered\n\t//   on the remote side with a name\n\t// - ID as Index means, the proxied object is the result of a get\n\t//   or a call and it has no name but an index\n\t// - LazyPath means that this proxy relates to its target by being a field\n\t//   of its parent proxy\n\n\tDBG_LOG(DBG_ME, \"creates proxy to\", \n\t\tJSON.stringify((typeof(ref) === \"function\")? ref() : ref))\n\n\t// keep track of all the members that were get-ed\n\tlet children:{[key: string]:any}={}\n\n\t// If not yet done, directly link this proxy\n\t// to the corresponding object on the remote side.\n\t// It gets an index entry in the remote registry.\n\tfunction resolvePath():ID {\n\t\tif(typeof(ref) === \"function\"){\n\t\t\tDBG_LOG(\n\t\t\t\tDBG_ME, \"requests\",\n\t\t\t\tDBG_OTHER, \"[\", bridge.remoteOtherIndexCounter, \"] =\", JSON.stringify(ref())\n\t\t\t)\n\n\t\t\tbridge.enqueueMsg({kind:\"link\", path:ref()})\n\t\t\tref = bridge.remoteOtherIndexCounter--\n\t\t}\n\t\treturn ref\n\t}\n\n\t// this will be a special member of the proxy that also\n\t// deletes the registry entry on the remote side and\n\t// sets the reference of this proxy to undefined\n\t// so the GC can do its job\n\tfunction dispose(){\n\t\tbridge.enqueueMsg({\n\t\t\tkind:\"del\",\n\t\t\tid:resolvePath()\n\t\t})\n\t\tref = undefined // ensure this proxy is not used further\n\t}\n\n\treturn new Proxy(Object, {\n\n\t\tset(target:any, prop:string, val:any){\n\t\t\tbridge.enqueueMsg({\n\t\t\t\tkind:\"set\",\n\t\t\t\tid:resolvePath(),\n\t\t\t\tprop, val:referencifyObject(bridge, val)\n\t\t\t})\n\t\t\treturn true\n\t\t},\n\n\t\tget(target:any, prop:string, receiver:any){\n\t\t\tif(prop === \"then\"){\n\t\t\t\treturn // nothing so this proxy cannot act as a promise\n\t\t\t}\n\t\t\tif(prop === \"__ref__\"){\n\t\t\t\treturn resolvePath()\n\t\t\t}\n\t\t\tif(prop === \"dispose\"){\n\t\t\t\treturn dispose\n\t\t\t}\n\t\t\tif(!(prop in children)){\n\t\t\t\tchildren[prop] = _createProxy(bridge, makeLazyPath(ref, prop))\n\t\t\t}\n\t\t\treturn children[prop]\n\t\t},\n\n\t\tapply(target:any, thisArg:any, args:any[]){\n\t\t\tbridge.enqueueMsg({\n\t\t\t\tkind:\"call\",\n\t\t\t\tid:resolvePath(),\n\t\t\t\targs:referencifyObject(bridge, args)\n\t\t\t})\n\t\t\tDBG_LOG(\n\t\t\t\tDBG_ME, \"calls\", DBG_OTHER, \"[\", resolvePath(), \"]\",\n\t\t\t\t\", store result in\", DBG_OTHER, \"[\", bridge.remoteOtherIndexCounter, \"]\"\n\t\t\t)\n\t\t\treturn _createProxy(bridge, bridge.remoteOtherIndexCounter--)\n\t\t},\n\n\t\tconstruct(target:any, args:any){\n\t\t\tbridge.enqueueMsg({\n\t\t\t\tkind:\"new\",\n\t\t\t\tid:resolvePath(),\n\t\t\t\targs:referencifyObject(bridge, args)\n\t\t\t})\n\t\t\tDBG_LOG(\n\t\t\t\tDBG_ME, \"calls new on\", DBG_OTHER, \"[\", resolvePath(), \"]\",\n\t\t\t\t\", store object in\", DBG_OTHER, \"[\", bridge.remoteOtherIndexCounter, \"]\"\n\t\t\t)\n\t\t\treturn _createProxy(bridge, bridge.remoteOtherIndexCounter--)\n\t\t}\n\t})\n}","export type Key = string // for explicitly registered objects\nexport type Index = number // for automatically registered objects\nexport type ID = Key | Index // for all objects\nexport type Path = ID[] // for relating a proxy via its parent (or grandparent etc.)\nexport type LazyPath = ()=>Path // for lazy evaluation\nexport type Reference = ID | LazyPath\n\nexport function makeLazyPath(parent: Reference, prop: string){\n\t// a lazy path is a function that returns a path when it's called\n\treturn function(){\n\t\tif(typeof(parent) === \"function\"){ // the parent is itself a lazy path\n\t\t\treturn [...parent(), prop]\n\t\t}\n\t\telse{ // the parent is already a directly linked reference\n\t\t\treturn [parent, prop]\n\t\t}\n\t}\n}","// these functions deal with substitution of arguments and callbacks with proxies\n\nimport { DBG_LOG, DBG_ME, DBG_OTHER } from \"./debug\"\nimport { _createProxy } from \"./proxy\"\nimport { WorkerBridge } from \"./workerbridge\"\n\ntype Pod = any\ntype TaggedCallback = Function & {__cb__?:number}\n\nexport function referencifyFunction(bridge:WorkerBridge, fn:TaggedCallback){\n\tif(fn.__cb__ === undefined){\n\t\t// tag this function with a __cb__ index\n\t\t// so that it will not be indexed multiple times\n\t\t// TODO: if we allow the bridge to be reset, all tagged\n\t\t// functions must be untagged\n\t\tDBG_LOG(DBG_ME, \"[\", bridge.localOwnIndexCounter, \"] = callback\")\n\t\tDBG_LOG(fn)\n\n\t\tlet newIndex = bridge.localOwnIndexCounter++\n\t\tfn.__cb__ = newIndex\n\t\tbridge.localRegistry[newIndex] = fn\n\t\treturn {__cb__:\"new\"}\n\t}\n\telse{\n\t\treturn {__cb__:fn.__cb__}\n\t}\n}\n\nexport function referencifyChildren(bridge:WorkerBridge, obj:any){\n\tlet copy:any = Array.isArray(obj)? [] : {}\n\n\tfor(let key in obj){\n\n\t\tlet wrapped = referencifyObject(bridge, obj[key])\n\n\t\tif(typeof(wrapped) === \"object\"){\n\t\t\tif(\"__cb__\" in wrapped){\n\t\t\t\t// this object or a sub object contains callbacks\n\t\t\t\tcopy[\"__cb__\"] = true\n\t\t\t}\n\t\t\tif(\"__ref__\" in wrapped){\n\t\t\t\t// this object or a sub object contains proxies\n\t\t\t\tcopy[\"__ref__\"] = true\n\t\t\t}\n\t\t}\n\n\t\tcopy[key] = wrapped\n\t}\n\treturn copy\n}\n\n// scan an object for functions, store local references for them\n// and replace the functions with the references\n// this is for sending callbacks through the worker bridge\nexport function referencifyObject(bridge:WorkerBridge, value:any):Pod{\n\tswitch(typeof(value)){\n\t\tcase \"number\":\n\t\tcase \"string\":\n\t\tcase \"boolean\":\n\t\t\treturn value\n\t\tcase \"object\":\n\t\t\treturn referencifyChildren(bridge, value)\n\t\tcase \"function\":\n\t\t\tif(value.__ref__ === undefined){\n\t\t\t\treturn referencifyFunction(bridge, value)\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// value is not a function but a proxy object\n\t\t\t\t// (all bridge proxies wrap functions so operator() works)\n\t\t\t\treturn {__ref__:value.__ref__}\n\t\t\t}\n\t}\n\n\tthrow new Error(\"unsendable type: \" + typeof(value))\n}\n\nexport function resolveReferenceMembers(bridge:WorkerBridge, obj:any){\n\tif(\"__cb__\" in obj){\n\t\tif(typeof(obj[\"__cb__\"]) === \"number\"){\n\t\t\t// reference to a callback that was already registered before\n\t\t\t// return another proxy to it\n\t\t\t// TODO: are we allowed to hand out multiple proxies to the same object?\n\t\t\t// what if only one of them gets disposed?\n\t\t\treturn _createProxy(bridge, obj[\"__cb__\"])\n\t\t}\n\t\telse if(obj[\"__cb__\"] === \"new\"){\n\t\t\tDBG_LOG(\n\t\t\t\tDBG_ME, \"expects that\",\n\t\t\t\tDBG_OTHER, \"[\", bridge.remoteOwnIndexCounter, \"] is a callback\"\n\t\t\t)\n\t\t\t\n\t\t\t// return a new proxy to a newly registered callback\n\t\t\treturn _createProxy(bridge, bridge.remoteOwnIndexCounter++)\n\t\t}\n\t\telse if(obj[\"__cb__\"] === true){\n\t\t\t// a child or a grandchild etc. is a callback\n\t\t\tfor(let field in obj){\n\t\t\t\tobj[field] = resolveReferences(bridge, obj[field])\n\t\t\t}\n\t\t\treturn obj\n\t\t}\n\t\telse{\n\t\t\tthrow new Error(\"unexpected callback reference type\")\n\t\t}\n\t}\n\telse if(\"__ref__\" in obj){\n\t\tif(\n\t\t\ttypeof(obj[\"__ref__\"]) === \"number\" ||\n\t\t\ttypeof(obj[\"__ref__\"]) === \"string\"\n\t\t){\n\t\t\t// the remote object is a proxy, return the registry entry\n\t\t\treturn bridge.localRegistry[obj.__ref__]\n\t\t}\n\t\telse if(obj[\"__ref__\"] === true){\n\t\t\t// a child or a grandchild etc. is a proxy\n\t\t\tfor(let field in obj){\n\t\t\t\tobj[field] = resolveReferences(bridge, obj[field])\n\t\t\t}\n\t\t\treturn obj\n\t\t}\n\t\telse{\n\t\t\tthrow new Error(\"unexpected reference type\")\n\t\t}\n\t}\n\telse{\n\t\treturn obj\n\t}\n}\n\nexport function resolveReferences(bridge:WorkerBridge, value:Pod):any{\n\tswitch(typeof(value)){\n\t\tcase \"number\":\n\t\tcase \"string\":\n\t\tcase \"boolean\":\n\t\t\treturn value\n\t\tcase \"object\":\n\t\t\treturn resolveReferenceMembers(bridge, value)\n\t}\n}","\n// here are the handler methods of the bridge\n// the leading underscore is so that you don't accidentally call\n// doStuff() instead of bridge.doStuff()\n\nimport { BridgeMsg, CallMsg, DisposeMsg, LinkMsg, NewMsg, RegisterMsg, SetMsg } from \"./messages\"\nimport {DEBUG, DBG_ME, DBG_OTHER} from \"./debug\"\nimport { WorkerBridge } from \"./workerbridge\"\nimport { resolveReferences } from \"./referencify\"\n\nexport function handleMessage(bridge:WorkerBridge, msg:BridgeMsg){\n\tswitch(msg.kind){\n\t\tcase \"ready\":\n\t\t\thandleReady(bridge)\n\t\t\tbreak\n\t\tcase \"reg\":\n\t\t\thandleRegister(bridge, msg)\n\t\t\tbreak\n\t\tcase \"link\":\n\t\t\thandleLinkage(bridge, msg)\n\t\t\tbreak\n\t\tcase \"call\":\n\t\t\thandleCall(bridge, msg)\n\t\t\tbreak\n\t\tcase \"new\":\n\t\t\thandleNew(bridge, msg)\n\t\t\tbreak\n\t\tcase \"set\":\n\t\t\thandlePropertySet(bridge, msg)\n\t\t\tbreak\n\t\tcase \"del\":\n\t\t\thandleDispose(bridge, msg)\n\t\t\tbreak\n\t}\n}\n\nfunction handleReady(bridge:WorkerBridge){\n\tbridge.connected = true\n\tif(bridge.sendWhenConnected){\n\t\tbridge.sendAll()\n\t}\n}\n\nfunction handleRegister(bridge:WorkerBridge, msg:RegisterMsg){\n\tbridge.remoteRegistry.add(msg.id)\n\tif(msg.id in bridge.pendingProxies){\n\t\tfor(let resolve of bridge.pendingProxies[msg.id]){\n\t\t\tresolve()\n\t\t}\n\t}\n}\n\nfunction handleLinkage(bridge:WorkerBridge, msg:LinkMsg){\n\tlet obj:any = bridge.localRegistry\n\tfor(let field of (msg as LinkMsg).path){\n\t\tlet child = obj[field]\n\t\tif(typeof(child) === \"function\"){\n\t\t\tchild = child.bind(obj) // make sure we keep \"bridge\"\n\t\t}\n\t\tobj = child\n\t}\n\tif(typeof(obj) !== \"object\" && typeof(obj) !== \"function\"){\n\t\tthrow new Error(\"tried to link a field which is not an object or a method: \" + msg.path)\n\t}\n\tif(DEBUG){\n\t\tconsole.log(DBG_ME, \"[\", bridge.localOtherIndexCounter, \"] =\")\n\t\tconsole.log(obj)\n\t}\n\tbridge.localRegistry[bridge.localOtherIndexCounter--] = obj\n}\n\nfunction handleCall(bridge:WorkerBridge, msg:CallMsg){\n\tlet result = bridge.localRegistry[msg.id](\n\t\t...resolveReferences(bridge, msg.args)\n\t)\n\tif(\n\t\ttypeof(result) === \"object\" ||\n\t\ttypeof(result) === \"function\"\n\t){\n\t\tif(DEBUG){\n\t\t\tconsole.log(DBG_ME, \"[\", bridge.localOtherIndexCounter, \"] is result\", result)\n\t\t}\n\t\tbridge.localRegistry[bridge.localOtherIndexCounter--] = result\n\t}\n\telse{\n\t\tif(result !== undefined){\n\t\t\tconsole.warn(\"result of remotely called function will be ignored\")\n\t\t}\n\t\t// the remote side will inc its counter so we also have to\n\t\tif(DEBUG){\n\t\t\tconsole.log(\n\t\t\t\tDBG_ME, \"discards result\", result,\n\t\t\t\t\"and skips index\", bridge.localOtherIndexCounter\n\t\t\t)\n\t\t}\n\t\tbridge.localOtherIndexCounter--\n\t}\n}\n\nfunction handleNew(bridge:WorkerBridge, msg:NewMsg){\n\tlet result = new bridge.localRegistry[msg.id](\n\t\t...resolveReferences(bridge, msg.args)\n\t)\n\tif(DEBUG){\n\t\tconsole.log(DBG_ME, \"[\", bridge.localOtherIndexCounter, \"] is the new\", result)\n\t}\n\tbridge.localRegistry[bridge.localOtherIndexCounter--] = result\n}\n\nfunction handlePropertySet(bridge:WorkerBridge, msg:SetMsg){\n\tbridge.localRegistry[msg.id][msg.prop] =\n\t\tresolveReferences(bridge, msg.val)\n}\n\nfunction handleDispose(bridge:WorkerBridge, msg: DisposeMsg){\n\tif(bridge.localRegistry[msg.id].dispose !== undefined){\n\t\tbridge.localRegistry[msg.id].dispose()\n\t}\n\tdelete bridge.localRegistry[msg.id]\n}\n\n","\n/*\nParadigms:\n\n- the bridge is intended to change and call objects on the remote side,\n  you never get any values back, only handles to remote objects\n- if you need to get values back, send callbacks and call them there\n- don't use new dynamically generated callbacks all the time as they are\n  going to persist in the registry and won't get garbage collected\n*/\n\nimport { DBG_LOG, DBG_ME, DBG_OTHER } from \"./debug\"\nimport { handleMessage } from \"./handlers\"\nimport { Key } from \"./path\"\nimport { BridgeMsg } from \"./messages\"\nimport { _createProxy } from \"./proxy\"\n\n\nexport class WorkerBridge{\n\t\n\tworker:Worker = undefined\n\tconnected = false\n\tsendWhenConnected = false\n\n\t// locally stored objects\n\t// (typescript complains about key:Key and about key:(string | number) )\n\tlocalRegistry:{\n\t\t[key: string]: any,\n\t\t[index: number]: any\n\t} = {}\n\n\t// remotely manually registered objects\n\tremoteRegistry = new Set<string>()\n\n\t// proxies that were requested but we don't know yet if the other side has registered them yet\n\t// they will hang in promise limbo until we get the respective \"reg\" message\n\tpendingProxies:{\n\t\t[key: string]: (()=>void)[] // array of promise resolver functions\n\t} = {}\n\t\n\t// counter for locally stored anonymous objects\n\t// whose creation was caused by this side, counts positive\n\tlocalOwnIndexCounter = 1\n\t// counter for locally stored anonymous objects\n\t// whose creation was caused by the other side, counts negative\n\tlocalOtherIndexCounter = -1\n\n\t// counter for remotely stored anonymous objects\n\t// whose creation was caused by the remote side itself, counts positive\n\tremoteOwnIndexCounter = 1\n\t// counter for remotely stored anonymous objects\n\t// whose creation was caused by this side, counts negative\n\tremoteOtherIndexCounter = -1\n\n\t/** leave worker empty when calling from inside a worker\n\t * and building a bridge to the window */\n\tconstructor(workerFile?:string){\n\t\tif(workerFile !== undefined){\n\t\t\tthis.worker = new Worker(workerFile)\n\t\t\tthis.worker.onmessage = this.receive.bind(this)\n\t\t}\n\t\telse{\n\t\t\tonmessage = this.receive.bind(this)\n\t\t\tthis.enqueueMsg({kind:\"ready\"})\n\t\t\tthis.sendAll()\n\t\t\tthis.connected = true\n\t\t}\n\t}\n\n\tmsgQueue: BridgeMsg[] = []\n\n\tenqueueMsg(msg:BridgeMsg){\n\t\tthis.msgQueue.push(msg)\n\t}\n\n\tsendAll(){\n\t\tif(this.msgQueue.length == 0){\n\t\t\treturn\n\t\t}\n\n\t\tDBG_LOG(DBG_ME, \"->\", DBG_OTHER, \":\")\n\t\tfor(let msg of this.msgQueue){\n\t\t\tDBG_LOG(\"-> \" + JSON.stringify(msg))\n\t\t}\n\n\t\tif(this.worker !== undefined){\n\t\t\tif(this.connected){\n\t\t\t\tthis.worker.postMessage(this.msgQueue)\n\t\t\t\tthis.msgQueue = []\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.sendWhenConnected = true\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\t// TypeScript does not know we mean postMessage from inside a worker\n\t\t\t//@ts-ignore\n\t\t\tpostMessage(this.msgQueue)\n\t\t\tthis.msgQueue = []\n\t\t}\n\t}\n\n\treceive(event:MessageEvent){\n\t\tfor(let i in event.data){\n\t\t\tlet msg = event.data[i] as BridgeMsg\n\t\t\tDBG_LOG(DBG_ME, \"handles\")\n\t\t\tDBG_LOG(msg)\n\t\t\thandleMessage(this, msg)\n\t\t}\n\t}\n\n\t/** register an object for being accessible by the remote side */\n\tregister(object:Object, name:string){\n\t\tDBG_LOG(DBG_ME, \"[\", name, \"] =\", object)\n\t\tthis.localRegistry[name] = object\n\t\tthis.enqueueMsg({kind:\"reg\", id:name})\n\t}\n\n\t/** create a proxy for an object on the remote side */\n\tasync createProxy(remoteKey: Key){\n\t\t// this function is an interface to the outside, it only allows reference\n\t\t// to targets that were explicitly registered on the remote side\n\t\tif(!isNaN(remoteKey as any)){\n\t\t\tthrow new Error(\"numeric indices are reserved for anonymous objects\")\n\t\t}\n\t\tif(remoteKey in this.remoteRegistry){\n\t\t\treturn _createProxy(this, remoteKey)\n\t\t}\n\t\telse{\n\t\t\tlet bridge = this\n\t\t\treturn new Promise(function(resolve){\n\t\t\t\tif(!(remoteKey in bridge.pendingProxies))\n\t\t\t\t{\n\t\t\t\t\tbridge.pendingProxies[remoteKey] = []\n\t\t\t\t}\n\t\t\t\tbridge.pendingProxies[remoteKey].push(\n\t\t\t\t\tfunction(){\n\t\t\t\t\t\tresolve(_createProxy(bridge, remoteKey))\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t}\n}\n","\n//*\n\nimport {WorkerBridge} from \"./workerbridge\"\n\nlet bridge:WorkerBridge\n\nif(window.document !== undefined){ // we are the main window and start the worker\n\tconsole.log(\"loading engine\")\n\tbridge = new WorkerBridge(\"./acechase_engine.js\")\n}\nelse{\n\t// we are inside the worker\n\tbridge = new WorkerBridge()\n}\n\nexport {bridge}\n\n/*/\n\nimport {WorkerBridgeDummy} from \"./workerbridgedummy\"\nimport \"engine_main\"\n\nexport let bridge = new WorkerBridgeDummy()\n\n/**/"],"sourceRoot":""}