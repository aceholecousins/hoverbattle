{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./experiments/workerbridge2/main.ts","webpack:///./experiments/workerbridge2/workerbridge.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","bridge","myObj","body","leg","foot","toe","nail","arg1","arg2","arg3","console","log","cb","setTimeout","sendAll","arg","child","thing","register","JSON","stringify","WorkerBridge","workerFile","onReady","worker","undefined","objectRegistry","localIndexCounter","remoteIndexCounter","msgQueue","this","Worker","onmessage","receive","enqueueMsg","kind","msg","push","postMessage","target","field","path","Error","result","id","resolveReferences","args","warn","prop","val","dispose","event","data","handleLinkage","handleCall","handleNew","handlePropertySet","handleDispose","remoteKey","isNaN","_createProxy","ref","children","resolvePath","Proxy","set","referencifyObject","receiver","parent","makeLazyPath","apply","thisArg","construct","fn","__cb__","newIndex","obj","copy","Array","isArray","wrapped","referencifyChildren","__ref__","referencifyFunction","resolveReferenceMembers"],"mappings":"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","file":"workerbridge2/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","\nimport {WorkerBridge} from \"./workerbridge\"\n\nlet bridge = new WorkerBridge(\"worker.js\")\n\nlet myObj = {\n\tproperty:0,\n\tname:\"Fred\",\n\n\tbody:{leg:{foot:{toe:{\n\t\tnail:\"long\"\n\t}}}},\n\n\tmethod(arg1:number, arg2:number, arg3:number){\n\t\tconsole.log(\"called myObj.method(\", arg1, \",\", arg2, \",\", arg3, \")\")\n\t},\n\n\tcallMeBack(cb:Function){\n\t\tsetTimeout(()=>{\n\t\t\tconsole.log(\"----------------------------\")\n\t\t\tconsole.log(\"remote side inside callMeBack(cb):\")\n\t\t\tconsole.log('cb(\"ding\")')\n\t\t\tcb(\"ding!\")\n\t\t\tbridge.sendAll()\n\t\t\tconsole.log(\"----------------------------\")\n\t\t}, 200)\n\t},\n\n\tuseNestedCallback(arg:any){\n\t\tsetTimeout(()=>{\n\t\t\tconsole.log(\"----------------------------\")\n\t\t\tconsole.log(\"remote side inside useNestedCallback(arg):\")\n\t\t\tconsole.log('arg.child.cb(\"dong!\")')\n\t\t\targ.child.cb(\"dong!\")\n\t\t\tbridge.sendAll()\n\t\t\tconsole.log(\"----------------------------\")\n\t\t}, 400)\n\t},\n\n\tsayTheName(thing:any){\n\t\tconsole.log(\"----------------------------\")\n\t\tconsole.log(\"remote side inside sayTheName(thing):\")\n\t\tconsole.log('console.log(thing.name)')\n\t\tconsole.log(thing.name)\n\t\tconsole.log(\"----------------------------\")\n\t},\n\n\tdispose(){\n\t\tconsole.log(\"----------------------------\")\n\t\tconsole.log(\"remote side: dispose() called on myObj\")\n\t\tconsole.log(\"----------------------------\")\t\t\n\t}\n}\n\nclass MyClass{\n\tconstructor(arg1:number, arg2:number){\n\t\tconsole.log(\"----------------------------\")\n\t\tconsole.log(\"remote side: new MyClass(\" + arg1 + \", \" + arg2 + \")\")\n\t\tconsole.log(\"----------------------------\")\n\t}\n\n\ttoot(){\n\t\tconsole.log(\"toot\")\n\t}\n}\n\nconsole.log(\"----------------------------\")\nconsole.log('remote side: bridge.register(myObj, \"myObj\")')\nbridge.register(myObj, \"myObj\")\nconsole.log('bridge.registry[\"myObj\"] now points to myObj')\nbridge.register(MyClass, \"MyClass\")\nconsole.log(\"----------------------------\")\n\nsetTimeout(function(){\n\tconsole.log(\"myObj is now:\")\n\tconsole.log(JSON.stringify(myObj))\n}, 1000)","\n// OBSOLETE, use the bridge in src/worker\n\n/*\nParadigms:\n\n- the bridge is intended to change and call objects on the remote side,\n  you never get any values back, only handles to remote objects\n- if you need to get values back, send callbacks and call them there\n- don't use new dynamically generated callbacks all the time as they are\n  going to persist in the registry and won't get garbage collected\n*/\n\ntype Pod = any\ntype Kind = string\n\ntype Key = string // for explicitly registered objects\ntype Index = number // for automatically registered objects\ntype ID = Key | Index // for all objects\ntype Path = ID[] // for relating a proxy via its parent (or grandparent etc.)\ntype LazyPath = ()=>Path // for lazy evaluation\ntype Reference = ID | LazyPath\n\nfunction makeLazyPath(parent: Reference, prop: string){\n\t// a lazy path is a function that returns a path when it's called\n\treturn function(){\n\t\tif(typeof(parent) === \"function\"){ // the parent is itself a lazy path\n\t\t\treturn [...parent(), prop]\n\t\t}\n\t\telse{ // the parent is already a directly linked reference\n\t\t\treturn [parent, prop]\n\t\t}\n\t}\n}\n\ntype TaggedCallback = Function & {__cb__?:number}\n\n// generic message\ninterface Msg<K extends Kind>{\n\tkind:K\n}\n\n/**\n * hand shake\n */\ninterface ReadyMsg extends Msg<\"ready\">{}\n\n/**\n * {kind:\"link\", path:[\"myObj\", \"a\", \"b\", \"c\"]} means \\\n * registry[indexCounter++] = registry[\"myObj\"].a.b.c \\\n * so a proxy that was before only related to its remote target through its parent\n * now gets its own entry in the remote registry\n */\ninterface LinkMsg extends Msg<\"link\">{\n\tpath:Path\n}\n\n/**\n * registry[id].prop = val \\\n * if the value contains any callbacks, they will be registered\n */\ninterface SetMsg extends Msg<\"set\">{\n\tid:ID\n\tprop:ID\n\tval:any\n}\n\n/**\n * registry[indexCounter++] = registry[id]([...args])\n * if the args contain any callbacks, they will be registered\n */\ninterface CallMsg extends Msg<\"call\">{\n\tid:ID\n\targs:any[]\n}\n\n/**\n * registry[indexCounter++] = new registry[id]([...args])\n */\ninterface NewMsg extends Msg<\"new\">{\n\tid:ID\n\targs:any[]\n}\n\n\n/**\n * registry[id].dispose() // if defined\n * delete registry[id]\n */\ninterface DisposeMsg extends Msg<\"del\">{\n\tid:ID\n}\n\n\ntype BridgeMsg = ReadyMsg | LinkMsg | SetMsg | CallMsg | NewMsg | DisposeMsg\n\nexport class WorkerBridge{\n\t\n\tprivate worker:Worker = undefined\n\tprivate onReady:()=>void = undefined\n\n\t// locally stored objects\n\t// (typescript complains about key:Key and about key:(string | number) )\n\tprivate objectRegistry:{\n\t\t[key: string]: any,\n\t\t[index: number]: any\n\t} = {}\n\t\n\t// counter for locally stored anonymous objects\n\tprivate localIndexCounter = 0\n\n\t// counter for remotely stored anonymous objects\n\tprivate remoteIndexCounter = 0\n\t\n\t/** leave worker empty when calling from inside a worker\n\t * and building a bridge to the window */\n\tconstructor(workerFile?:string, onReady?:()=>void){\n\t\tif(typeof(workerFile) !== \"undefined\"){\n\t\t\tthis.worker = new Worker(workerFile)\n\t\t\tthis.worker.onmessage = this.receive.bind(this)\n\t\t\tthis.onReady = onReady\n\t\t}\n\t\telse{\n\t\t\tonmessage = this.receive.bind(this)\n\t\t\tthis.enqueueMsg({kind:\"ready\"})\n\t\t\tthis.sendAll()\n\t\t}\n\t}\n\n\tprivate msgQueue: BridgeMsg[] = []\n\tprivate enqueueMsg(msg:BridgeMsg){\n\t\tthis.msgQueue.push(msg)\n\t}\n\n\tsendAll(){\n\t\tif(typeof(this.worker) !== \"undefined\"){\n\t\t\tconsole.log(\"window -> worker:\")\n\t\t\tfor(let msg of this.msgQueue){\n\t\t\t\tconsole.log(\"-> \" + JSON.stringify(msg))\n\t\t\t}\n\t\t\tthis.worker.postMessage(this.msgQueue)\n\t\t}\n\t\telse{\n\t\t\tconsole.log(\"worker -> window:\")\n\t\t\tfor(let msg of this.msgQueue){\n\t\t\t\tconsole.log(\"-> \" + JSON.stringify(msg))\n\t\t\t}\n\t\t\t//@ts-ignore\n\t\t\tpostMessage(this.msgQueue)\n\t\t}\n\t\tthis.msgQueue = []\n\t}\n\n\tprivate handleLinkage(msg: LinkMsg){\n\t\tlet target:any = this.objectRegistry\n\t\tfor(let field of (msg as LinkMsg).path){\n\t\t\ttarget = target[field]\n\t\t}\n\t\tif(typeof(target) !== \"object\" && typeof(target) !== \"function\"){\n\t\t\tthrow new Error(\"tried to link a field which is not an object or a method: \" + msg.path)\n\t\t}\n\t\tthis.objectRegistry[this.localIndexCounter++] = target\n\t}\n\n\tprivate handleCall(msg: CallMsg){\n\t\tlet result = this.objectRegistry[msg.id](\n\t\t\t...this.resolveReferences(msg.args)\n\t\t)\n\t\tif(\n\t\t\ttypeof(result) === \"object\" ||\n\t\t\ttypeof(result) === \"function\"\n\t\t){\n\t\t\tthis.objectRegistry[this.localIndexCounter++] = result\n\t\t}\n\t\telse{\n\t\t\tif(result !== undefined){\n\t\t\t\tconsole.warn(\"result of remotely called function will be ignored\")\n\t\t\t}\n\t\t\t// the remote side will inc its counter so we also have to\n\t\t\tthis.localIndexCounter++\n\t\t}\n\t}\n\n\tprivate handleNew(msg: NewMsg){\n\t\tlet result = new this.objectRegistry[msg.id](\n\t\t\t...this.resolveReferences(msg.args)\n\t\t)\t\n\t\tthis.objectRegistry[this.localIndexCounter++] = result\n\t}\n\n\tprivate handlePropertySet(msg: SetMsg){\n\t\tthis.objectRegistry[msg.id][msg.prop] =\n\t\t\tthis.resolveReferences(msg.val)\n\t}\n\n\tprivate handleDispose(msg: DisposeMsg){\n\t\tif(this.objectRegistry[msg.id].dispose !== undefined){\n\t\t\tthis.objectRegistry[msg.id].dispose()\n\t\t}\n\t\tdelete this.objectRegistry[msg.id]\n\t}\n\n\tprivate receive(event:MessageEvent){\n\t\tfor(let i in event.data){\n\t\t\tlet msg = event.data[i] as BridgeMsg\n\t\t\tswitch(msg.kind){\n\t\t\t\tcase \"ready\":\n\t\t\t\t\tif(this.onReady !== undefined){\n\t\t\t\t\t\tthis.onReady()\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\tcase \"link\":\n\t\t\t\t\tthis.handleLinkage(msg)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"call\":\n\t\t\t\t\tthis.handleCall(msg)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"new\":\n\t\t\t\t\tthis.handleNew(msg)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"set\":\n\t\t\t\t\tthis.handlePropertySet(msg)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"del\":\n\t\t\t\t\tthis.handleDispose(msg)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\t/** register an object for being accessible by the remote side */\n\tregister(object:Object, name:string){\n\t\tthis.objectRegistry[name] = object\n\t}\n\n\t/** create a proxy for an object on the remote side */\n\tcreateProxy(remoteKey: Key){\n\t\t// this function is an interface to the outside, it only allows reference\n\t\t// to targets that were explicitly registered on the remote side\n\t\tif(!isNaN(remoteKey as any)){\n\t\t\tthrow new Error(\"numeric indices are reserved for anonymous objects\")\n\t\t}\n\t\treturn this._createProxy(remoteKey)\n\t}\n\n\t// more general proxy creation, also for anonymous objects and child objects\n\tprivate _createProxy(ref: Reference):any{\n\t\t// ref defines how this proxy relates to its target on the other side\n\t\t// - ID as Key means, the proxied object was explicitly registered\n\t\t//   on the remote side with a name\n\t\t// - ID as Index means, the proxied object is the result of a get\n\t\t//   or a call and it has no name but an index\n\t\t// - LazyPath means that this proxy relates to its target by being a field\n\t\t//   of its parent proxy\n\n\t\t// keep track of all the members that were get-ed\n\t\tlet children:{[key: string]:any}={}\n\t\n\t\tlet bridge = this\n\n\t\t// If not yet done, directly link this proxy\n\t\t// to the corresponding object on the remote side.\n\t\t// It gets an index entry in the remote registry.\n\t\tfunction resolvePath():ID {\n\t\t\tif(typeof(ref) === \"function\"){\n\t\t\t\tbridge.enqueueMsg({kind:\"link\", path:ref()})\n\t\t\t\tref = bridge.remoteIndexCounter++\n\t\t\t}\n\t\t\treturn ref\n\t\t}\n\n\t\t// this will be a special member of the proxy that also\n\t\t// deletes the registry entry on the remote side and\n\t\t// sets the reference of this proxy to undefined\n\t\t// so the GC can do its job\n\t\tfunction dispose(){\n\t\t\tbridge.enqueueMsg({\n\t\t\t\tkind:\"del\",\n\t\t\t\tid:resolvePath()\n\t\t\t})\n\t\t\tref = undefined // ensure this proxy is not used further\n\t\t}\n\n\t\treturn new Proxy(Object, {\n\n\t\t\tset(target:any, prop:string, val:any){\n\t\t\t\tbridge.enqueueMsg({\n\t\t\t\t\tkind:\"set\",\n\t\t\t\t\tid:resolvePath(),\n\t\t\t\t\tprop, val:bridge.referencifyObject(val)\n\t\t\t\t})\n\t\t\t\treturn true\n\t\t\t},\n\n\t\t\tget(target:any, prop:string, receiver:any){\n\t\t\t\tif(prop === \"__ref__\"){\n\t\t\t\t\treturn resolvePath()\n\t\t\t\t}\n\t\t\t\tif(prop === \"dispose\"){\n\t\t\t\t\treturn dispose\n\t\t\t\t}\n\t\t\t\tif(!(prop in children)){\n\t\t\t\t\tchildren[prop] = bridge._createProxy(makeLazyPath(ref, prop))\n\t\t\t\t}\n\t\t\t\treturn children[prop]\n\t\t\t},\n\n\t\t\tapply(target:any, thisArg:any, args:any[]){\n\t\t\t\tbridge.enqueueMsg({\n\t\t\t\t\tkind:\"call\",\n\t\t\t\t\tid:resolvePath(),\n\t\t\t\t\targs:bridge.referencifyObject(args)\n\t\t\t\t})\n\t\t\t\treturn bridge._createProxy(bridge.remoteIndexCounter++)\n\t\t\t},\n\n\t\t\tconstruct(target:any, args:any){\n\t\t\t\tbridge.enqueueMsg({\n\t\t\t\t\tkind:\"new\",\n\t\t\t\t\tid:resolvePath(),\n\t\t\t\t\targs:bridge.referencifyObject(args)\n\t\t\t\t})\n\t\t\t\treturn bridge._createProxy(bridge.remoteIndexCounter++)\n\t\t\t}\n\t\t})\n\t}\n\n\tprivate referencifyFunction(fn:TaggedCallback){\n\t\tif(fn.__cb__ === undefined){\n\t\t\t// tag this function with a __cb__ index\n\t\t\t// so that it will not be indexed multiple times\n\t\t\t// TODO: if we allow the bridge to be reset, all tagged\n\t\t\t// functions must be untagged\n\t\t\tlet newIndex = this.localIndexCounter++\n\t\t\tfn.__cb__ = newIndex\n\t\t\tthis.objectRegistry[newIndex] = fn\n\t\t\treturn {__cb__:\"new\"}\n\t\t}\n\t\telse{\n\t\t\treturn {__cb__:fn.__cb__}\n\t\t}\n\t}\n\n\tprivate referencifyChildren(obj:any){\n\t\tlet copy:any = Array.isArray(obj)? [] : {}\n\n\t\tfor(let key in obj){\n\n\t\t\tlet wrapped = this.referencifyObject(obj[key])\n\n\t\t\tif(typeof(wrapped) === \"object\"){\n\t\t\t\tif(\"__cb__\" in wrapped){\n\t\t\t\t\t// this object or a sub object contains callbacks\n\t\t\t\t\tcopy[\"__cb__\"] = true\n\t\t\t\t}\n\t\t\t\tif(\"__ref__\" in wrapped){\n\t\t\t\t\t// this object or a sub object contains proxies\n\t\t\t\t\tcopy[\"__ref__\"] = true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcopy[key] = wrapped\n\t\t}\n\t\treturn copy\n\t}\n\n\t// scan an object for functions, store local references for them\n\t// and replace the functions with the references\n\t// this is for sending callbacks through the worker bridge\n\tprivate referencifyObject(value:any):Pod{\n\t\tswitch(typeof(value)){\n\t\t\tcase \"number\":\n\t\t\tcase \"string\":\n\t\t\tcase \"boolean\":\n\t\t\t\treturn value\n\t\t\tcase \"object\":\n\t\t\t\treturn this.referencifyChildren(value)\n\t\t\tcase \"function\":\n\t\t\t\tif(value.__ref__ === undefined){\n\t\t\t\t\treturn this.referencifyFunction(value)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// value is not a function but a proxy object\n\t\t\t\t\t// (all bridge proxies wrap functions so operator() works)\n\t\t\t\t\treturn {__ref__:value.__ref__}\n\t\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"unsendable type: \" + typeof(value))\n\t}\n\n\tprivate resolveReferenceMembers(obj:any){\n\t\tif(\"__cb__\" in obj){\n\t\t\tif(typeof(obj[\"__cb__\"]) === \"number\"){\n\t\t\t\t// reference to a callback that was already registered before\n\t\t\t\t// return another proxy to it\n\t\t\t\t// TODO: are we allowed to hand out multiple proxies to the same object?\n\t\t\t\t// what if only one of them gets disposed?\n\t\t\t\treturn this._createProxy(obj[\"__cb__\"])\n\t\t\t}\n\t\t\telse if(obj[\"__cb__\"] === \"new\"){\n\t\t\t\t// return a new proxy to a newly registered callback\n\t\t\t\treturn this._createProxy(this.remoteIndexCounter++)\n\t\t\t}\n\t\t\telse if(obj[\"__cb__\"] === true){\n\t\t\t\t// a child or a grandchild etc. is a callback\n\t\t\t\tfor(let field in obj){\n\t\t\t\t\tobj[field] = this.resolveReferences(obj[field])\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow new Error(\"unexpected callback reference type\")\n\t\t\t}\n\t\t}\n\t\telse if(\"__ref__\" in obj){\n\t\t\tif(\n\t\t\t\ttypeof(obj[\"__ref__\"]) === \"number\" ||\n\t\t\t\ttypeof(obj[\"__ref__\"]) === \"string\"\n\t\t\t){\n\t\t\t\t// the remote object is a proxy, return the registry entry\n\t\t\t\treturn this.objectRegistry[obj.__ref__]\n\t\t\t}\n\t\t\telse if(obj[\"__ref__\"] === true){\n\t\t\t\t// a child or a grandchild etc. is a proxy\n\t\t\t\tfor(let field in obj){\n\t\t\t\t\tobj[field] = this.resolveReferences(obj[field])\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow new Error(\"unexpected reference type\")\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\treturn obj\n\t\t}\n\t}\n\n\tprivate resolveReferences(value:Pod):any{\n\t\tswitch(typeof(value)){\n\t\t\tcase \"number\":\n\t\t\tcase \"string\":\n\t\t\tcase \"boolean\":\n\t\t\t\treturn value\n\t\t\tcase \"object\":\n\t\t\t\treturn this.resolveReferenceMembers(value)\n\t\t}\n\t}\n}\n"],"sourceRoot":""}