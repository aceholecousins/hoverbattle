{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/domain/graphics/scenenode.ts","webpack:///./src/utils.ts","webpack:///./src/worker/workerbridge.ts","webpack:///./src/worker/worker.ts","webpack:///./src/domain/graphics/mesh.ts","webpack:///./src/checklist.ts","webpack:///./src/adapters/physics/p2/p2shape.ts","webpack:///./src/adapters/physics/p2/p2rigidbody.ts","webpack:///./src/adapters/physics/p2/p2circle.ts","webpack:///./src/domain/physics/circle.ts","webpack:///./src/domain/physics/shape.ts","webpack:///./src/domain/physics/rigidbody.ts","webpack:///./src/utilities/math_utils.ts","webpack:///./src/engine_main.ts","webpack:///./src/adapters/physics/p2/p2physics.ts","webpack:///./src/adapters/graphics/graphicsbridge/graphicsclient.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","SceneNodeConfig","config","position","fromValues","orientation","scaling","this","kind","copy","target","source","keys","k","copyIfPresent","document","WorkerBridge","workerFile","worker","undefined","connected","sendWhenConnected","objectRegistry","localOwnIndexCounter","localOtherIndexCounter","remoteOwnIndexCounter","remoteOtherIndexCounter","msgQueue","Worker","onmessage","receive","enqueueMsg","sendAll","msg","postMessage","obj","field","path","child","Error","id","resolveReferences","args","console","warn","prop","val","dispose","event","handleReady","handleLinkage","handleCall","handleNew","handlePropertySet","handleDispose","remoteKey","isNaN","_createProxy","ref","children","bridge","resolvePath","Proxy","set","referencifyObject","receiver","parent","makeLazyPath","thisArg","construct","fn","__cb__","newIndex","Array","isArray","wrapped","referencifyChildren","__ref__","referencifyFunction","resolveReferenceMembers","log","super","ModelMeshConfig","asset","ChecklistItem","onCheck","note","check","p2shapeFactory","constructors","factory","p2world","toBeDeleted","p2body","p2","mass","assign","shapeCfg","shapes","shape","createShape","addShape","p2shape","addBody","updateMassProperties","clone","v","velocity","damping","phi","angle","omega","angularVelocity","angularDamping","force","localPointOfApplication","applyForce","applyForceLocal","impulse","applyImpulse","applyImpulseLocal","torque","angularForce","angularMomentum","invInertia","removeBody","register","updateBoundingRadius","body","aabbNeedsUpdate","radius","updateP2","boundingRadius","offset","offsetAngle","wrapAngle","wrapAt","Math","PI","revs","floor","graphics","gliderAsset","physics","gravity","dt","step","checklist","onItemCheck","onComplete","items","Set","numTotalItems","thisItem","delete","size","add","clear","gliderBodyCfg","gliderModelCfg","controller","getThrust","getTurnRate","isShooting","gliders","glider","random","setInterval","update","initGraphics","newItem","loadGlider","setTimeout","createProxy","model","load","bodyCfg","modelCfg","thrust","addRigidBody","mesh","createFromModel","applyLocalForce","turnRate","applyTorque","direction","getAbsoluteDirection","turnToDirection","fromEuler","wrappedAngle","directionDiff","abs","sign","applyAngularMomentum"],"mappings":"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","file":"acechase_engine.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([72,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\nimport {vec3, quat} from \"gl-matrix\"\nimport {Kind, copyIfPresent} from \"utils\"\n\nexport interface SceneNode<K extends Kind>{\n\tkind:K\n\tposition?:vec3\n\torientation?:quat\n\tscaling?:vec3\n\tremove():void\n}\n\nexport class SceneNodeConfig<K extends Kind>{\n\tkind: K\n\tposition = vec3.fromValues(0, 0, 0)\n\torientation = quat.fromValues(0, 0, 0, 1)\n\tscaling = vec3.fromValues(1, 1, 1)\n\n\tconstructor(config:Partial<SceneNodeConfig<K>> = {}){\n\t\tthis.kind = config.kind\n\t\tcopyIfPresent(this, config, [\"position\", \"orientation\", \"scaling\"])\n\t}\n}\n\nexport type NodeKind<T> =\n\tT extends SceneNode<infer K> ? K:\n\tT extends SceneNodeConfig< infer K> ? K:\n\tnever\n","\nexport type Registry<T> = { [index: string]: T }\n\nexport interface Color{\n\tr:number\n\tg:number\n\tb:number\n}\n\nexport type Kind = string\n\n// https://stackoverflow.com/a/49579497/3825996\ntype OptionalKeys<T> = { [K in keyof T]-?:\n  ({} extends { [P in K]: T[K] } ? K : never)\n}[keyof T]\n\nexport type Optionals<T> = Required<Pick<T, OptionalKeys<T>>>\n\nexport function copy<T1, T2, K extends keyof T1 & keyof T2>(\n\ttarget:T1, source:T2, keys:K[]){\n\n\tfor(const k of keys){\n\t\t(target as any)[k] = (source as any)[k]\n\t}\n}\n\nexport function copyIfPresent<T1, T2, K extends keyof T1 & keyof T2>(\n\ttarget:T1, source:T2, keys:K[]){\n\n\tfor(const k of keys){\n\t\tif(k in source){\n\t\t\t(target as any)[k] = (source as any)[k]\n\t\t}\n\t}\n}","\n/*\nParadigms:\n\n- the bridge is intended to change and call objects on the remote side,\n  you never get any values back, only handles to remote objects\n- if you need to get values back, send callbacks and call them there\n- don't use new dynamically generated callbacks all the time as they are\n  going to persist in the registry and won't get garbage collected\n*/\n\nconst DEBUG = false\nconst DBG_ME = window.document === undefined? \"worker\" : \"window\"\nconst DBG_OTHER = window.document === undefined? \"window\" : \"worker\"\n\nimport {Kind} from \"utils\"\ntype Pod = any\n\ntype Key = string // for explicitly registered objects\ntype Index = number // for automatically registered objects\ntype ID = Key | Index // for all objects\ntype Path = ID[] // for relating a proxy via its parent (or grandparent etc.)\ntype LazyPath = ()=>Path // for lazy evaluation\ntype Reference = ID | LazyPath\n\nfunction makeLazyPath(parent: Reference, prop: string){\n\t// a lazy path is a function that returns a path when it's called\n\treturn function(){\n\t\tif(typeof(parent) === \"function\"){ // the parent is itself a lazy path\n\t\t\treturn [...parent(), prop]\n\t\t}\n\t\telse{ // the parent is already a directly linked reference\n\t\t\treturn [parent, prop]\n\t\t}\n\t}\n}\n\ntype TaggedCallback = Function & {__cb__?:number}\n\n// generic message\ninterface Msg<K extends Kind>{\n\tkind:K\n}\n\n/**\n * hand shake\n */\ninterface ReadyMsg extends Msg<\"ready\">{}\n\n/**\n * {kind:\"link\", path:[\"myObj\", \"a\", \"b\", \"c\"]} means \\\n * registry[indexCounter++] = registry[\"myObj\"].a.b.c \\\n * so a proxy that was before only related to its remote target through its parent\n * now gets its own entry in the remote registry\n */\ninterface LinkMsg extends Msg<\"link\">{\n\tpath:Path\n}\n\n/**\n * registry[id].prop = val \\\n * if the value contains any callbacks, they will be registered\n */\ninterface SetMsg extends Msg<\"set\">{\n\tid:ID\n\tprop:ID\n\tval:any\n}\n\n/**\n * registry[indexCounter++] = registry[id]([...args])\n * if the args contain any callbacks, they will be registered\n */\ninterface CallMsg extends Msg<\"call\">{\n\tid:ID\n\targs:any[]\n}\n\n/**\n * registry[indexCounter++] = new registry[id]([...args])\n */\ninterface NewMsg extends Msg<\"new\">{\n\tid:ID\n\targs:any[]\n}\n\n\n/**\n * registry[id].dispose() // if defined\n * delete registry[id]\n */\ninterface DisposeMsg extends Msg<\"del\">{\n\tid:ID\n}\n\n\ntype BridgeMsg = ReadyMsg | LinkMsg | SetMsg | CallMsg | NewMsg | DisposeMsg\n\nexport class WorkerBridge{\n\t\n\tprivate worker:Worker = undefined\n\tprivate connected = false\n\tprivate sendWhenConnected = false\n\n\t// locally stored objects\n\t// (typescript complains about key:Key and about key:(string | number) )\n\tprivate objectRegistry:{\n\t\t[key: string]: any,\n\t\t[index: number]: any\n\t} = {}\n\t\n\t// counter for locally stored anonymous objects\n\t// whose creation was caused by this side, counts positive\n\tprivate localOwnIndexCounter = 1\n\t// counter for locally stored anonymous objects\n\t// whose creation was caused by the other side, counts negative\n\tprivate localOtherIndexCounter = -1\n\n\t// counter for remotely stored anonymous objects\n\t// whose creation was caused by the remote side itself, counts positive\n\tprivate remoteOwnIndexCounter = 1\n\t// counter for remotely stored anonymous objects\n\t// whose creation was caused by this side, counts negative\n\tprivate remoteOtherIndexCounter = -1\n\n\t/** leave worker empty when calling from inside a worker\n\t * and building a bridge to the window */\n\tconstructor(workerFile?:string){\n\t\tif(workerFile !== undefined){\n\t\t\tthis.worker = new Worker(workerFile)\n\t\t\tthis.worker.onmessage = this.receive.bind(this)\n\t\t}\n\t\telse{\n\t\t\tonmessage = this.receive.bind(this)\n\t\t\tthis.enqueueMsg({kind:\"ready\"})\n\t\t\tthis.sendAll()\n\t\t\tthis.connected = true\n\t\t}\n\t}\n\n\tprivate msgQueue: BridgeMsg[] = []\n\tprivate enqueueMsg(msg:BridgeMsg){\n\t\tthis.msgQueue.push(msg)\n\t}\n\n\tsendAll(){\n\t\tif(this.msgQueue.length == 0){\n\t\t\treturn\n\t\t}\n\n\t\tif(DEBUG){\n\t\t\tconsole.log(DBG_ME, \"->\", DBG_OTHER, \":\")\n\t\t\tfor(let msg of this.msgQueue){\n\t\t\t\tconsole.log(\"-> \" + JSON.stringify(msg))\n\t\t\t}\n\t\t}\n\n\t\tif(this.worker !== undefined){\n\t\t\tif(this.connected){\n\t\t\t\tthis.worker.postMessage(this.msgQueue)\n\t\t\t\tthis.msgQueue = []\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.sendWhenConnected = true\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\t// TypeScript does not know we mean postMessage from inside a worker\n\t\t\t//@ts-ignore\n\t\t\tpostMessage(this.msgQueue)\n\t\t\tthis.msgQueue = []\n\t\t}\n\t}\n\n\tprivate handleReady(){\n\t\tthis.connected = true\n\t\tif(this.sendWhenConnected){\n\t\t\tthis.sendAll()\n\t\t}\n\t}\n\n\tprivate handleLinkage(msg: LinkMsg){\n\t\tlet obj:any = this.objectRegistry\n\t\tfor(let field of (msg as LinkMsg).path){\n\t\t\tlet child = obj[field]\n\t\t\tif(typeof(child) === \"function\"){\n\t\t\t\tchild = child.bind(obj) // make sure we keep \"this\"\n\t\t\t}\n\t\t\tobj = child\n\t\t}\n\t\tif(typeof(obj) !== \"object\" && typeof(obj) !== \"function\"){\n\t\t\tthrow new Error(\"tried to link a field which is not an object or a method: \" + msg.path)\n\t\t}\n\t\tif(DEBUG){\n\t\t\tconsole.log(DBG_ME, \"[\", this.localOtherIndexCounter, \"] =\")\n\t\t\tconsole.log(obj)\n\t\t}\n\t\tthis.objectRegistry[this.localOtherIndexCounter--] = obj\n\t}\n\n\tprivate handleCall(msg: CallMsg){\n\t\tlet result = this.objectRegistry[msg.id](\n\t\t\t...this.resolveReferences(msg.args)\n\t\t)\n\t\tif(\n\t\t\ttypeof(result) === \"object\" ||\n\t\t\ttypeof(result) === \"function\"\n\t\t){\n\t\t\tif(DEBUG){\n\t\t\t\tconsole.log(DBG_ME, \"[\", this.localOtherIndexCounter, \"] is result\", result)\n\t\t\t}\n\t\t\tthis.objectRegistry[this.localOtherIndexCounter--] = result\n\t\t}\n\t\telse{\n\t\t\tif(result !== undefined){\n\t\t\t\tconsole.warn(\"result of remotely called function will be ignored\")\n\t\t\t}\n\t\t\t// the remote side will inc its counter so we also have to\n\t\t\tif(DEBUG){\n\t\t\t\tconsole.log(\n\t\t\t\t\tDBG_ME, \"discards result\", result,\n\t\t\t\t\t\"and skips index\", this.localOtherIndexCounter\n\t\t\t\t)\n\t\t\t}\n\t\t\tthis.localOtherIndexCounter--\n\t\t}\n\t}\n\n\tprivate handleNew(msg: NewMsg){\n\t\tlet result = new this.objectRegistry[msg.id](\n\t\t\t...this.resolveReferences(msg.args)\n\t\t)\n\t\tif(DEBUG){\n\t\t\tconsole.log(DBG_ME, \"[\", this.localOtherIndexCounter, \"] is the new\", result)\n\t\t}\n\t\tthis.objectRegistry[this.localOtherIndexCounter--] = result\n\t}\n\n\tprivate handlePropertySet(msg: SetMsg){\n\t\tthis.objectRegistry[msg.id][msg.prop] =\n\t\t\tthis.resolveReferences(msg.val)\n\t}\n\n\tprivate handleDispose(msg: DisposeMsg){\n\t\tif(this.objectRegistry[msg.id].dispose !== undefined){\n\t\t\tthis.objectRegistry[msg.id].dispose()\n\t\t}\n\t\tdelete this.objectRegistry[msg.id]\n\t}\n\n\tprivate receive(event:MessageEvent){\n\t\tfor(let i in event.data){\n\t\t\tlet msg = event.data[i] as BridgeMsg\n\t\t\tif(DEBUG){\n\t\t\t\tconsole.log(DBG_ME, \"handles\")\n\t\t\t\tconsole.log(msg)\n\t\t\t}\n\t\t\tswitch(msg.kind){\n\t\t\t\tcase \"ready\":\n\t\t\t\t\tthis.handleReady()\n\t\t\t\t\tbreak\n\t\t\t\tcase \"link\":\n\t\t\t\t\tthis.handleLinkage(msg)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"call\":\n\t\t\t\t\tthis.handleCall(msg)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"new\":\n\t\t\t\t\tthis.handleNew(msg)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"set\":\n\t\t\t\t\tthis.handlePropertySet(msg)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"del\":\n\t\t\t\t\tthis.handleDispose(msg)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\t/** register an object for being accessible by the remote side */\n\tregister(object:Object, name:string){\n\t\tif(DEBUG){\n\t\t\tconsole.log(DBG_ME, \"[\", name, \"] =\", object)\n\t\t}\n\t\tthis.objectRegistry[name] = object\n\t}\n\n\t/** create a proxy for an object on the remote side */\n\tcreateProxy(remoteKey: Key){\n\t\t// this function is an interface to the outside, it only allows reference\n\t\t// to targets that were explicitly registered on the remote side\n\t\tif(!isNaN(remoteKey as any)){\n\t\t\tthrow new Error(\"numeric indices are reserved for anonymous objects\")\n\t\t}\n\t\treturn this._createProxy(remoteKey)\n\t}\n\n\t// more general proxy creation, also for anonymous objects and child objects\n\tprivate _createProxy(ref: Reference):any{\n\t\t// ref defines how this proxy relates to its target on the other side\n\t\t// - ID as Key means, the proxied object was explicitly registered\n\t\t//   on the remote side with a name\n\t\t// - ID as Index means, the proxied object is the result of a get\n\t\t//   or a call and it has no name but an index\n\t\t// - LazyPath means that this proxy relates to its target by being a field\n\t\t//   of its parent proxy\n\n\t\tif(DEBUG){\n\t\t\tconsole.log(DBG_ME, \"creates proxy to\", \n\t\t\t\tJSON.stringify((typeof(ref) === \"function\")? ref() : ref))\n\t\t}\n\n\t\t// keep track of all the members that were get-ed\n\t\tlet children:{[key: string]:any}={}\n\t\n\t\tlet bridge = this\n\n\t\t// If not yet done, directly link this proxy\n\t\t// to the corresponding object on the remote side.\n\t\t// It gets an index entry in the remote registry.\n\t\tfunction resolvePath():ID {\n\t\t\tif(typeof(ref) === \"function\"){\n\t\t\t\tif(DEBUG){\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\tDBG_ME, \"requests\",\n\t\t\t\t\t\tDBG_OTHER, \"[\", bridge.remoteOtherIndexCounter, \"] =\", JSON.stringify(ref())\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tbridge.enqueueMsg({kind:\"link\", path:ref()})\n\t\t\t\tref = bridge.remoteOtherIndexCounter--\n\t\t\t}\n\t\t\treturn ref\n\t\t}\n\n\t\t// this will be a special member of the proxy that also\n\t\t// deletes the registry entry on the remote side and\n\t\t// sets the reference of this proxy to undefined\n\t\t// so the GC can do its job\n\t\tfunction dispose(){\n\t\t\tbridge.enqueueMsg({\n\t\t\t\tkind:\"del\",\n\t\t\t\tid:resolvePath()\n\t\t\t})\n\t\t\tref = undefined // ensure this proxy is not used further\n\t\t}\n\n\t\treturn new Proxy(Object, {\n\n\t\t\tset(target:any, prop:string, val:any){\n\t\t\t\tbridge.enqueueMsg({\n\t\t\t\t\tkind:\"set\",\n\t\t\t\t\tid:resolvePath(),\n\t\t\t\t\tprop, val:bridge.referencifyObject(val)\n\t\t\t\t})\n\t\t\t\treturn true\n\t\t\t},\n\n\t\t\tget(target:any, prop:string, receiver:any){\n\t\t\t\tif(prop === \"__ref__\"){\n\t\t\t\t\treturn resolvePath()\n\t\t\t\t}\n\t\t\t\tif(prop === \"dispose\"){\n\t\t\t\t\treturn dispose\n\t\t\t\t}\n\t\t\t\tif(!(prop in children)){\n\t\t\t\t\tchildren[prop] = bridge._createProxy(makeLazyPath(ref, prop))\n\t\t\t\t}\n\t\t\t\treturn children[prop]\n\t\t\t},\n\n\t\t\tapply(target:any, thisArg:any, args:any[]){\n\t\t\t\tbridge.enqueueMsg({\n\t\t\t\t\tkind:\"call\",\n\t\t\t\t\tid:resolvePath(),\n\t\t\t\t\targs:bridge.referencifyObject(args)\n\t\t\t\t})\n\t\t\t\tif(DEBUG){\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\tDBG_ME, \"calls\", DBG_OTHER, \"[\", resolvePath(), \"]\",\n\t\t\t\t\t\t\", store result in\", DBG_OTHER, \"[\", bridge.remoteOtherIndexCounter, \"]\"\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\treturn bridge._createProxy(bridge.remoteOtherIndexCounter--)\n\t\t\t},\n\n\t\t\tconstruct(target:any, args:any){\n\t\t\t\tbridge.enqueueMsg({\n\t\t\t\t\tkind:\"new\",\n\t\t\t\t\tid:resolvePath(),\n\t\t\t\t\targs:bridge.referencifyObject(args)\n\t\t\t\t})\n\t\t\t\tif(DEBUG){\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\tDBG_ME, \"calls new on\", DBG_OTHER, \"[\", resolvePath(), \"]\",\n\t\t\t\t\t\t\", store object in\", DBG_OTHER, \"[\", bridge.remoteOtherIndexCounter, \"]\"\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\treturn bridge._createProxy(bridge.remoteOtherIndexCounter--)\n\t\t\t}\n\t\t})\n\t}\n\n\tprivate referencifyFunction(fn:TaggedCallback){\n\t\tif(fn.__cb__ === undefined){\n\t\t\t// tag this function with a __cb__ index\n\t\t\t// so that it will not be indexed multiple times\n\t\t\t// TODO: if we allow the bridge to be reset, all tagged\n\t\t\t// functions must be untagged\n\t\t\tif(DEBUG){\n\t\t\t\tconsole.log(DBG_ME, \"[\", this.localOwnIndexCounter, \"] = callback\")\n\t\t\t\tconsole.log(fn)\n\t\t\t}\n\t\t\tlet newIndex = this.localOwnIndexCounter++\n\t\t\tfn.__cb__ = newIndex\n\t\t\tthis.objectRegistry[newIndex] = fn\n\t\t\treturn {__cb__:\"new\"}\n\t\t}\n\t\telse{\n\t\t\treturn {__cb__:fn.__cb__}\n\t\t}\n\t}\n\n\tprivate referencifyChildren(obj:any){\n\t\tlet copy:any = Array.isArray(obj)? [] : {}\n\n\t\tfor(let key in obj){\n\n\t\t\tlet wrapped = this.referencifyObject(obj[key])\n\n\t\t\tif(typeof(wrapped) === \"object\"){\n\t\t\t\tif(\"__cb__\" in wrapped){\n\t\t\t\t\t// this object or a sub object contains callbacks\n\t\t\t\t\tcopy[\"__cb__\"] = true\n\t\t\t\t}\n\t\t\t\tif(\"__ref__\" in wrapped){\n\t\t\t\t\t// this object or a sub object contains proxies\n\t\t\t\t\tcopy[\"__ref__\"] = true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcopy[key] = wrapped\n\t\t}\n\t\treturn copy\n\t}\n\n\t// scan an object for functions, store local references for them\n\t// and replace the functions with the references\n\t// this is for sending callbacks through the worker bridge\n\tprivate referencifyObject(value:any):Pod{\n\t\tswitch(typeof(value)){\n\t\t\tcase \"number\":\n\t\t\tcase \"string\":\n\t\t\tcase \"boolean\":\n\t\t\t\treturn value\n\t\t\tcase \"object\":\n\t\t\t\treturn this.referencifyChildren(value)\n\t\t\tcase \"function\":\n\t\t\t\tif(value.__ref__ === undefined){\n\t\t\t\t\treturn this.referencifyFunction(value)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// value is not a function but a proxy object\n\t\t\t\t\t// (all bridge proxies wrap functions so operator() works)\n\t\t\t\t\treturn {__ref__:value.__ref__}\n\t\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"unsendable type: \" + typeof(value))\n\t}\n\n\tprivate resolveReferenceMembers(obj:any){\n\t\tif(\"__cb__\" in obj){\n\t\t\tif(typeof(obj[\"__cb__\"]) === \"number\"){\n\t\t\t\t// reference to a callback that was already registered before\n\t\t\t\t// return another proxy to it\n\t\t\t\t// TODO: are we allowed to hand out multiple proxies to the same object?\n\t\t\t\t// what if only one of them gets disposed?\n\t\t\t\treturn this._createProxy(obj[\"__cb__\"])\n\t\t\t}\n\t\t\telse if(obj[\"__cb__\"] === \"new\"){\n\t\t\t\tif(DEBUG){\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\tDBG_ME, \"expects that\",\n\t\t\t\t\t\tDBG_OTHER, \"[\", this.remoteOwnIndexCounter, \"] is a callback\"\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t// return a new proxy to a newly registered callback\n\t\t\t\treturn this._createProxy(this.remoteOwnIndexCounter++)\n\t\t\t}\n\t\t\telse if(obj[\"__cb__\"] === true){\n\t\t\t\t// a child or a grandchild etc. is a callback\n\t\t\t\tfor(let field in obj){\n\t\t\t\t\tobj[field] = this.resolveReferences(obj[field])\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow new Error(\"unexpected callback reference type\")\n\t\t\t}\n\t\t}\n\t\telse if(\"__ref__\" in obj){\n\t\t\tif(\n\t\t\t\ttypeof(obj[\"__ref__\"]) === \"number\" ||\n\t\t\t\ttypeof(obj[\"__ref__\"]) === \"string\"\n\t\t\t){\n\t\t\t\t// the remote object is a proxy, return the registry entry\n\t\t\t\treturn this.objectRegistry[obj.__ref__]\n\t\t\t}\n\t\t\telse if(obj[\"__ref__\"] === true){\n\t\t\t\t// a child or a grandchild etc. is a proxy\n\t\t\t\tfor(let field in obj){\n\t\t\t\t\tobj[field] = this.resolveReferences(obj[field])\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow new Error(\"unexpected reference type\")\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\treturn obj\n\t\t}\n\t}\n\n\tprivate resolveReferences(value:Pod):any{\n\t\tswitch(typeof(value)){\n\t\t\tcase \"number\":\n\t\t\tcase \"string\":\n\t\t\tcase \"boolean\":\n\t\t\t\treturn value\n\t\t\tcase \"object\":\n\t\t\t\treturn this.resolveReferenceMembers(value)\n\t\t}\n\t}\n}\n","\n//*\n\nimport {WorkerBridge} from \"./workerbridge\"\n\nlet bridge:WorkerBridge\n\nif(window.document !== undefined){ // we are the main window and start the worker\n\tconsole.log(\"loading engine\")\n\tbridge = new WorkerBridge(\"./acechase_engine.js\")\n}\nelse{\n\t// we are inside the worker\n\tbridge = new WorkerBridge()\n}\n\nexport {bridge}\n\n/*/\n\nimport {WorkerBridgeDummy} from \"./workerbridgedummy\"\nimport \"engine_main\"\n\nexport let bridge = new WorkerBridgeDummy()\n\n/**/","\nimport {Color, copyIfPresent} from \"utils\"\nimport {SceneNode, SceneNodeConfig} from \"./scenenode\"\nimport {Model} from \"./model\"\n\nexport interface Mesh extends SceneNode<\"mesh\">{\n\tbaseColor: Color\n\taccentColor: Color\n}\n\nexport class MeshConfig extends SceneNodeConfig<\"mesh\">{\n\tkind: \"mesh\" = \"mesh\"\n\tbaseColor: Color\n\taccentColor: Color\n\n\tconstructor(config: Partial<MeshConfig> = {}){\n\t\tsuper(config)\n\t\tcopyIfPresent(this, config, [\"baseColor\", \"accentColor\"])\n\t}\n}\n\nexport class ModelMeshConfig extends MeshConfig{\n\tasset:Model\n\tconstructor(config: Partial<MeshConfig> & Pick<ModelMeshConfig, \"asset\">){\n\t\tsuper(config)\n\t\tthis.asset = config.asset\n\t}\n}\n\nexport interface MeshFactory{\n\tcreateFromModel: (config:ModelMeshConfig) => Mesh\n}","\nexport class ChecklistItem{\n\tcheck:()=>void\n\tnote?:string\n\n\tconstructor(onCheck:()=>void, note?:string){\n\t\tthis.note = note\n\t\tthis.check = onCheck\n\t}\n}\n\nexport class Checklist{\n\titems = new Set<ChecklistItem>()\n\tnumTotalItems:number = 0\n\tonItemCheck:(note?:string)=>void\n\tonComplete:()=>void\n\n\tconstructor(\n\t\t{\n\t\t\tonItemCheck = (note?:string)=>{},\n\t\t\tonComplete = ()=>{}\n\t\t}:{\n\t\t\tonItemCheck?:(note?:string)=>void,\n\t\t\tonComplete?:()=>void\n\t\t} = {}\n\t){\n\t\tthis.onItemCheck = onItemCheck\n\t\tthis.onComplete = onComplete\n\t}\n\n\tnewItem({onCheck = ()=>{}, note}:{onCheck?:()=>void, note?:string} = {}){\n\t\tthis.numTotalItems++\n\t\tlet checklist = this\n\n\t\tlet thisItem = new ChecklistItem(()=>{\n\t\t\tonCheck()\n\t\t\t\n\t\t\tchecklist.onItemCheck(thisItem.note)\n\t\t\tchecklist.items.delete(thisItem)\n\t\t\t\n\t\t\tif(checklist.items.size == 0){\n\t\t\t\tchecklist.onComplete()\n\t\t\t}\n\t\t}, note)\n\n\t\tthis.items.add(thisItem)\n        return thisItem\n\t}\n\n\tgetProgress(){\n\t\treturn 1.0 - this.items.size / this.numTotalItems\n\t}\n\n\treset(){\n\t\tthis.items.clear()\n\t\tthis.numTotalItems = 0\n\t}\n}\n","import {Shape, ShapeConfig} from \"domain/physics/shape\"\nimport * as p2 from \"p2\"\nimport { vec2 } from \"gl-matrix\"\nimport {Kind, Registry} from \"utils\"\n\nexport abstract class P2Shape<K extends Kind> implements Shape<K>{\n\tkind: K\n\t\n\tabstract p2shape: p2.Shape\n\t\n\tupdateP2(){\n\t\tthis.p2shape.updateBoundingRadius()\n\t\tif(this.p2shape.body !== null){ // when called before the shape was added to the body\n\t\t\tthis.p2shape.body.aabbNeedsUpdate = true\n\t\t\tthis.p2shape.body.updateBoundingRadius()\n\t\t}\n\t}\n\n\tset offset(p: vec2){\n\t\tvec2.copy(this.p2shape.position, p)\n\t}\n\tget offset(){\n\t\treturn vec2.clone(this.p2shape.position)\n\t}\n\n\tset offsetAngle(phi: number){\n\t\tthis.p2shape.angle = phi\n\t}\n\tget offsetAngle(){\n\t\treturn this.p2shape.angle\n\t}\n\n\tabstract boundingRadius: number\n}\n\n\n// factory for distinct shape types\n// where shape modules can register their individual constructors\ntype P2ShapeConstructor<K extends Kind> = new(config: ShapeConfig<K>) => P2Shape<K>\n\nclass P2ShapeFactory{\n\n    private constructors: Registry<P2ShapeConstructor<any>> = {}\n\n    register(kind: string, factory: P2ShapeConstructor<any>): void {\n        this.constructors[kind] = factory\n    }\n\n    createShape<K extends Kind>(config: ShapeConfig<K>): P2Shape<K> {\n\t\tif(!this.constructors.hasOwnProperty(config.kind)){\n\t\t\tthrow new Error(\"P2ShapeFactory cannot create a \" + config.kind)\n\t\t}\n        return new this.constructors[config.kind](config)\n    }\n}\n\nexport const p2shapeFactory = new P2ShapeFactory()\n","import * as p2 from \"p2\"\nimport {vec2} from \"gl-matrix\"\nimport {P2Physics} from \"./p2physics\"\nimport {Shape, ShapeConfig} from \"domain/physics/shape\"\nimport {P2Shape, p2shapeFactory} from \"./p2shape\"\nimport {RigidBody, RigidBodyConfig} from \"domain/physics/rigidbody\"\n\nexport class P2RigidBody implements RigidBody{\n\tkind:\"rigidbody\"\n\tp2world:p2.World\n\tp2body:p2.Body\n\t//readonly shapes: Shape<any>[]\n\ttoBeDeleted: boolean = false\n\n\tconstructor(p2world:p2.World, config:RigidBodyConfig){\n\t\tthis.p2world = p2world\n\t\tthis.p2body = new p2.Body({mass:1}) // mass set to 1 so the body is considered DYNAMIC\n\n\t\tObject.assign(this, config)\n\n\t\tfor(let shapeCfg of config.shapes){\n\t\t\tlet shape = p2shapeFactory.createShape<any>(shapeCfg)\n\t\t\t//this.shapes.push(shape)\n\t\t\tthis.p2body.addShape(shape.p2shape)\n\t\t}\n\n\t\tthis.p2world.addBody(this.p2body)\n\t}\n\n\tset mass(m: number){\n\t\tthis.p2body.mass = m\n\t\tthis.p2body.updateMassProperties()\n\t}\n\tget mass(){\n\t\treturn this.p2body.mass\n\t}\n\n\tset position(p: vec2){\n\t\tvec2.copy(this.p2body.position, p)\n\t}\n\tget position(){\n\t\treturn vec2.clone(this.p2body.position)\n\t}\n\n\tset velocity(v: vec2){\n\t\tvec2.copy(this.p2body.velocity, v)\n\t}\n\tget velocity(){\n\t\treturn vec2.clone(this.p2body.velocity)\n\t}\n\n\tset damping(d: number){\n\t\tthis.p2body.damping = d\n\t}\n\tget damping(){\n\t\treturn this.p2body.damping\n\t}\n\n\n\tset angle(phi: number){\n\t\tthis.p2body.angle = phi\n\t}\n\tget angle(){\n\t\treturn this.p2body.angle\n\t}\n\n\tset angularVelocity(omega: number){\n\t\tthis.p2body.angularVelocity = omega\n\t}\n\tget angularVelocity(){\n\t\treturn this.p2body.angularVelocity\n\t}\n\n\tset angularDamping(d: number){\n\t\tthis.p2body.angularDamping = d\n\t}\n\tget angularDamping(){\n\t\treturn this.p2body.angularDamping\n\t}\n\n\n\tapplyForce(\n\t\tforce: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyForce(\n\t\t\t[force[0], force[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyLocalForce(\n\t\tforce: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyForceLocal(\n\t\t\t[force[0], force[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyImpulse(\n\t\timpulse: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyImpulse(\n\t\t\t[impulse[0], impulse[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyLocalImpulse(\n\t\timpulse: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyImpulseLocal(\n\t\t\t[impulse[0], impulse[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyTorque(torque: number){\n\t\tthis.p2body.angularForce += torque\n\t}\n\n\tapplyAngularMomentum(angularMomentum: number){\n\t\tthis.p2body.angularVelocity += this.p2body.invInertia * angularMomentum\n\t}\n\n\t\n\tremove(){\n\t\tthis.p2world.removeBody(this.p2body)\n\t}\n}","\nimport * as p2 from \"p2\"\nimport {P2Shape, p2shapeFactory} from \"./p2shape\"\nimport {Circle, CircleConfig} from \"domain/physics/circle\"\n\nexport class P2Circle extends P2Shape<\"circle\"> implements Circle{\n\tkind:\"circle\"\n\tp2shape:p2.Circle\n\n\tconstructor(config: CircleConfig){\n\t\tsuper()\n\t\tthis.p2shape = new p2.Circle()\n\t\tObject.assign(this, config)\n\t}\n\n\tset radius(r: number){\n\t\tthis.p2shape.radius = r\n\t\tthis.updateP2()\n\t}\n\tget radius():number{\n\t\treturn this.p2shape.radius\n\t}\n\n\tset boundingRadius(r: number){\n\t\tthis.p2shape.radius = r\n\t\tthis.updateP2()\n\t}\n\tget boundingRadius(){\n\t\treturn this.p2shape.boundingRadius\n\t}\n}\n\np2shapeFactory.register(\"circle\", P2Circle)\n\n\n","\nimport {ShapeConfig, Shape} from \"./shape\"\nimport {copyIfPresent} from \"utils\"\n\nexport interface Circle extends Shape<\"circle\">{\n\tkind: \"circle\"\n\tradius: number\n}\n\nexport class CircleConfig extends ShapeConfig<\"circle\">{\n\tkind: \"circle\" = \"circle\"\n\tradius = 1\n\t\n\tconstructor(config: Partial<CircleConfig>){\n\t\tsuper(config)\n\t\tcopyIfPresent(this, config, [\"radius\"])\n\t}\n}","\nimport {vec2} from \"gl-matrix\"\nimport {Kind, copyIfPresent} from \"utils\"\n\n// parameters that are common to all shapes\n\nexport interface Shape<K extends Kind> {\n    kind: K\n\toffset: vec2\n\toffsetAngle: number\n\tboundingRadius: number\n}\n\nexport class ShapeConfig<K extends Kind>{\n\tkind: K\n\toffset = vec2.fromValues(0, 0)\n\toffsetAngle = 0\n\n\tconstructor(config:Partial<ShapeConfig<K>>){\n\t\tthis.kind = config.kind\n\t\tcopyIfPresent(this, config, [\"offset\", \"offsetAngle\"])\n\t}\n}","import {vec2} from \"gl-matrix\"\nimport {ShapeConfig, Shape} from \"./shape\"\nimport {copyIfPresent} from \"utils\"\n\nexport interface RigidBody{\n\tkind: \"rigidbody\"\n\n\t//readonly shapes: Shape<any>[]\n\n\tmass: number\n\n\tposition: vec2\n\tvelocity: vec2\n\tdamping: number\n\n\tangle: number\n\tangularVelocity: number\n\tangularDamping: number\n\n\tapplyForce(force:vec2, localPointOfApplication?:vec2):void\n\tapplyLocalForce(force:vec2, localPointOfApplication?:vec2):void\n\tapplyImpulse(impulse:vec2, localPointOfApplication?:vec2):void\n\tapplyLocalImpulse(impulse:vec2, localPointOfApplication?:vec2):void\n\tapplyTorque(torque:number):void\n\tapplyAngularMomentum(angularMomentum:number):void\n\n\tremove():void\n}\n\nexport class RigidBodyConfig{\n\tshapes: ShapeConfig<any>[]\n\t\n\tmass = 1\n\n\tposition = vec2.fromValues(0, 0)\n\tvelocity = vec2.fromValues(0, 0)\n\tdamping = 0.1\n\n\tangle = 0\n\tangularVelocity = 0\n\tangularDamping = 0.1\n\n\tconstructor(config:Partial<RigidBodyConfig>){\n\t\tcopyIfPresent(this, config, [\n\t\t\t\"shapes\", \"mass\", \"position\", \"velocity\", \"damping\",\n\t\t\t\"angle\", \"angularVelocity\", \"angularDamping\"\n\t\t])\n\t}\n}","/**\n * Wraps an angle in order to be in the limits of the wrapping point.\n * \n * @param angle Angle to be wrapped in rad\n * @param wrapAt Wrapping point. Defaults to Math.PI\n * \n * @returns the wrapped angle in the range between [-wrapAt, wrapAt)\n */\nexport function wrapAngle(angle: number, wrapAt = Math.PI): number {\n\tlet revs = (angle - wrapAt) / 2.0 / Math.PI;\n  return (revs - Math.floor(revs) - 1) * 2.0 * Math.PI + wrapAt\n}","\nimport { bridge } from \"worker/worker\"\nimport {Graphics} from \"domain/graphics/graphics\"\nimport {createGraphicsClient} from \"adapters/graphics/graphicsbridge/graphicsclient\"\nimport {ModelMeshConfig, Mesh} from \"domain/graphics/mesh\"\nimport {Checklist} from \"./checklist\"\nimport { P2Physics } from \"adapters/physics/p2/p2physics\"\nimport { CircleConfig } from \"domain/physics/circle\"\nimport { vec2, quat } from \"gl-matrix\"\nimport { RigidBody, RigidBodyConfig } from \"domain/physics/rigidbody\"\nimport { Controller } from \"domain/controller/controller\"\nimport { wrapAngle } from \"utilities/math_utils\"\nimport { Physics } from \"domain/physics/physics\"\nimport { Model } from \"domain/graphics/model\"\n\nlet dt = 1/100\n\nlet graphics:Graphics\nlet physics:Physics = new P2Physics() as Physics\nlet gliderAsset:Model\n\nlet checklist = new Checklist({onComplete:start})\n\nlet initGraphics = checklist.newItem()\nlet loadGlider = checklist.newItem()\n\nsetTimeout(function(){\n\t// when we are not using a worker, we have to be sure that the graphics server\n\t// is registered at the bridge dummy before the client requests it\n\t// so we use a timeout here\n\tgraphics = createGraphicsClient()\n\tinitGraphics.check()\n\n\tgliderAsset = graphics.model.load(\n\t\t\"glider/glider.gltf\",\n\t\tloadGlider.check\n\t)\n\tbridge.sendAll()\n}, 0)\n\n\n\nclass Glider{\n\tbody:RigidBody\n\tmesh:Mesh\n\tcontroller:Controller\n\n\tthrust:number = 0\n\n\tconstructor(bodyCfg:RigidBodyConfig, modelCfg:ModelMeshConfig, controller:Controller){\n\t\tthis.body = physics.addRigidBody(bodyCfg)\n\t\tthis.mesh = graphics.mesh.createFromModel(modelCfg)\n\t\tthis.controller = controller\n\t}\n\n\tupdate(){\n\t\tthis.thrust = this.controller.getThrust() * 10;\n\t\tthis.body.applyLocalForce(vec2.fromValues(this.thrust, 0))\n\n\t\tconst turnRate = this.controller.getTurnRate()\n\t\tif(turnRate != undefined) {\n\t\t\tthis.body.applyTorque(turnRate * 10)\n\t\t}\n\t\tconst direction = this.controller.getAbsoluteDirection()\n\t\tif(direction != undefined) {\n\t\t\tthis.turnToDirection(direction)\n\t\t}\n\t\t\n\t\tthis.mesh.position = [\n\t\t\tthis.body.position[0], this.body.position[1], 0]\n\t\tthis.mesh.orientation = quat.fromEuler(\n\t\t\t[0,0,0,0], 0, 0, this.body.angle /Math.PI * 180)\n\t}\n\tturnToDirection(direction: number) {\n\t\tlet wrappedAngle = wrapAngle(this.body.angle);\t\t\n\t\tlet directionDiff = wrapAngle(wrappedAngle - direction);\n\t\tlet threshold = 0.0001;\n\t\tif(Math.abs(directionDiff) > threshold) {\n\t\t\tlet sign = Math.sign(directionDiff)\n\t\t\tthis.body.applyAngularMomentum(-sign * 0.3)\n\t\t}\n\t}\n}\n\nfunction start(){\n\tconst gliderBodyCfg = new RigidBodyConfig({\n\t\tshapes:[new CircleConfig({radius:1})],\n\t\tdamping: 0.7,\n\t\tangularDamping: 0.99\n\t})\n\n\tconst gliderModelCfg:ModelMeshConfig = new ModelMeshConfig({\n\t\tasset:gliderAsset\n\t})\n\n\tconst controller:Controller = {\n\t\tgetAbsoluteDirection(){return undefined},\n\t\tgetThrust(){return 1},\n\t\tgetTurnRate(){return 1},\n\t\tisShooting(){return false},\n\t\tsetPauseCallback(fn){}\n\t}\n\tlet gliders:Glider[] = []\n\tfor(let i=0; i<50; i++){\n\t\tlet glider = new Glider(gliderBodyCfg, gliderModelCfg, controller)\n\t\tglider.body.position = vec2.fromValues(Math.random()*20-10, Math.random()*20-10)\n\t\tglider.body.angle = Math.random()*1000\n\t\tgliders.push(glider)\n\t}\n\n\tsetInterval(()=>{\n\t\tfor(let glider of gliders){\n\t\t\tglider.update()\n\t\t}\n\t\tphysics.step(dt)\n\t\tbridge.sendAll()\n\t}, 1000*dt)\n}\n","\nimport {RigidBodyConfig, RigidBody} from \"domain/physics/rigidbody\"\nimport {Physics} from \"domain/physics/physics\"\nimport {P2RigidBody} from \"./p2rigidbody\"\nimport * as p2 from \"p2\"\nimport \"./p2factorylist\"\n\nexport class P2Physics implements Physics{\n\n\tp2world:p2.World\n\n\tconstructor(){\n\t\tthis.p2world = new p2.World({gravity:[0, 0]})\n\t}\n\n\taddRigidBody(config: RigidBodyConfig):RigidBody{\n\t\tconst body = new P2RigidBody(this.p2world, config)\n\t\treturn body\n\t}\n\n\tstep(dt:number){\n\t\tthis.p2world.step(dt)\n\t}\n\n}\n\n","\nimport {Graphics} from \"domain/graphics/graphics\"\nimport {bridge} from \"worker/worker\"\n\nexport function createGraphicsClient(){\n\treturn bridge.createProxy(\"graphicsServer\") as Graphics\n}"],"sourceRoot":""}