{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/domain/graphics/scenenode.ts","webpack:///./src/domain/graphics/camera.ts","webpack:///./src/utils.ts","webpack:///./src/domain/graphics/mesh.ts","webpack:///./src/checklist.ts","webpack:///./src/adapters/physics/p2/p2shape.ts","webpack:///./src/adapters/physics/p2/p2rigidbody.ts","webpack:///./src/adapters/physics/p2/p2circle.ts","webpack:///./src/adapters/physics/p2/p2triangle.ts","webpack:///./src/domain/physics/circle.ts","webpack:///./src/domain/physics/shape.ts","webpack:///./src/domain/physics/rigidbody.ts","webpack:///./src/utilities/math_utils.ts","webpack:///./src/utilities/executefile.ts","webpack:///./src/arena/arena.ts","webpack:///./src/domain/actioncam.ts","webpack:///./src/engine_main.ts","webpack:///./src/adapters/physics/p2/p2physics.ts","webpack:///./src/adapters/graphics/graphicsbridge/graphicsclient.ts","webpack:///./src/worker/workerbridge.ts","webpack:///./src/worker/worker.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","SceneNodeConfig","config","position","fromValues","orientation","scaling","this","kind","CameraConfig","super","nearClip","farClip","verticalAngleOfViewInDeg","onAspectChange","aspect","copy","target","source","keys","k","copyIfPresent","ModelMeshConfig","asset","ChecklistItem","onCheck","note","check","p2shape","updateBoundingRadius","body","aabbNeedsUpdate","clone","phi","angle","p2shapeFactory","constructors","factory","Error","p2world","toBeDeleted","p2body","p2","assign","shapeCfg","shapes","shape","createShape","addShape","addBody","Infinity","type","STATIC","DYNAMIC","mass","updateMassProperties","v","velocity","damping","omega","angularVelocity","angularDamping","force","localPointOfApplication","applyForce","applyForceLocal","impulse","applyImpulse","applyImpulseLocal","torque","angularForce","angularMomentum","invInertia","removeBody","register","radius","updateP2","boundingRadius","area","triangleArea","corners","Math","abs","console","error","vertices","factor","offset","offsetAngle","wrapAngle","wrapAt","PI","revs","floor","functionCache","loadArena","url","graphics","physics","onLoaded","args","onError","returned","request","XMLHttpRequest","addEventListener","fnBody","responseText","fn","Function","join","undefined","open","send","executeFile","dMin","marginFactor","tau","xy","up","down","focus","tauFocus","distanceOverWidth","distanceOverHeight","locks","Set","camera","tan","cam","currentPosition","currentFocus","add","lock","delete","dt","xMin","xMax","yMin","yMax","min","max","kxy","exp","tauz","kz","kxyz","kfocus","dim","z","subtract","normalize","y","x","cross","ori","out","mat3fromVectors","fromMat3","gliderAsset","arena","actionCam","gravity","step","checklist","onItemCheck","onComplete","items","numTotalItems","thisItem","size","clear","gliderBodyCfg","gliderModelCfg","controller","getThrust","getTurnRate","isShooting","gliders","glider","random","follow","setInterval","update","sendAll","initGraphicsItem","newItem","loadGliderItem","loadArenaItem","setTimeout","createProxy","control","setSceneOrientation","SQRT1_2","activate","model","load","loaded","bodyCfg","modelCfg","thrust","addRigidBody","mesh","createFromModel","applyLocalForce","turnRate","applyTorque","direction","getAbsoluteDirection","turnToDirection","fromEuler","wrappedAngle","directionDiff","sign","applyAngularMomentum","document","WorkerBridge","workerFile","worker","connected","sendWhenConnected","objectRegistry","localOwnIndexCounter","localOtherIndexCounter","remoteOwnIndexCounter","remoteOtherIndexCounter","msgQueue","Worker","onmessage","receive","enqueueMsg","msg","postMessage","obj","field","path","child","id","resolveReferences","warn","prop","val","dispose","event","handleReady","handleLinkage","handleCall","handleNew","handlePropertySet","handleDispose","remoteKey","isNaN","_createProxy","ref","children","bridge","resolvePath","Proxy","set","referencifyObject","receiver","parent","makeLazyPath","thisArg","construct","__cb__","newIndex","Array","isArray","wrapped","referencifyChildren","__ref__","referencifyFunction","resolveReferenceMembers","log"],"mappings":"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","file":"acechase_engine.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([73,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\nimport {vec3, quat} from \"gl-matrix\"\nimport {Kind, copyIfPresent} from \"utils\"\n\nexport interface SceneNode<K extends Kind>{\n\tkind:K\n\tposition?:vec3\n\torientation?:quat\n\tscaling?:vec3\n\tremove():void\n}\n\nexport class SceneNodeConfig<K extends Kind>{\n\tkind: K\n\tposition = vec3.fromValues(0, 0, 0)\n\torientation = quat.fromValues(0, 0, 0, 1)\n\tscaling = vec3.fromValues(1, 1, 1)\n\n\tconstructor(config:Partial<SceneNodeConfig<K>> = {}){\n\t\tthis.kind = config.kind\n\t\tcopyIfPresent(this, config, [\"position\", \"orientation\", \"scaling\"])\n\t}\n}\n\nexport type NodeKind<T> =\n\tT extends SceneNode<infer K> ? K:\n\tT extends SceneNodeConfig< infer K> ? K:\n\tnever\n","\nimport {SceneNode, SceneNodeConfig} from \"./scenenode\"\nimport {copyIfPresent} from \"utils\"\n\nexport interface Camera extends SceneNode<\"camera\">{\n\tkind:\"camera\"\n\tnearClip:number\n\tfarClip:number\n\tverticalAngleOfViewInDeg:number\n\tonAspectChange: (aspect:number)=>void\n\n\tactivate():void\n}\n\nexport class CameraConfig extends SceneNodeConfig<\"camera\">{\n\tkind:\"camera\" = \"camera\"\n\tnearClip = 0.1\n\tfarClip = 1000\n\tverticalAngleOfViewInDeg = 40\n\tonAspectChange = function(aspect:number){}\n\n\tconstructor(config:Partial<CameraConfig> = {}){\n\t\tsuper(config)\n\t\tcopyIfPresent(this, config, [\"nearClip\", \"farClip\", \"verticalAngleOfViewInDeg\"])\n\t}\t\n}\n\nexport interface CameraFactory{\n\tcreate(config: CameraConfig): Camera\n}","\nexport type Registry<T> = { [index: string]: T }\n\nexport interface Color{\n\tr:number\n\tg:number\n\tb:number\n}\n\nexport type Kind = string\n\n// https://stackoverflow.com/a/49579497/3825996\ntype OptionalKeys<T> = { [K in keyof T]-?:\n  ({} extends { [P in K]: T[K] } ? K : never)\n}[keyof T]\n\nexport type Optionals<T> = Required<Pick<T, OptionalKeys<T>>>\n\nexport function copy<T1, T2, K extends keyof T1 & keyof T2>(\n\ttarget:T1, source:T2, keys:K[]){\n\n\tfor(const k of keys){\n\t\t(target as any)[k] = (source as any)[k]\n\t}\n}\n\nexport function copyIfPresent<T1, T2, K extends keyof T1 & keyof T2>(\n\ttarget:T1, source:T2, keys:K[]){\n\n\tfor(const k of keys){\n\t\tif(k in source){\n\t\t\t(target as any)[k] = (source as any)[k]\n\t\t}\n\t}\n}","\nimport {Color, copyIfPresent} from \"utils\"\nimport {SceneNode, SceneNodeConfig} from \"./scenenode\"\nimport {Model} from \"./model\"\n\nexport interface Mesh extends SceneNode<\"mesh\">{\n\tbaseColor: Color\n\taccentColor: Color\n}\n\nexport class MeshConfig extends SceneNodeConfig<\"mesh\">{\n\tkind: \"mesh\" = \"mesh\"\n\tbaseColor: Color\n\taccentColor: Color\n\n\tconstructor(config: Partial<MeshConfig> = {}){\n\t\tsuper(config)\n\t\tcopyIfPresent(this, config, [\"baseColor\", \"accentColor\"])\n\t}\n}\n\nexport class ModelMeshConfig extends MeshConfig{\n\tasset:Model\n\tconstructor(config: Partial<MeshConfig> & Pick<ModelMeshConfig, \"asset\">){\n\t\tsuper(config)\n\t\tthis.asset = config.asset\n\t}\n}\n\nexport interface MeshFactory{\n\tcreateFromModel: (config:ModelMeshConfig) => Mesh\n}","\nexport class ChecklistItem{\n\tcheck:()=>void\n\tnote?:string\n\n\tconstructor(onCheck:()=>void, note?:string){\n\t\tthis.note = note\n\t\tthis.check = onCheck\n\t}\n}\n\nexport class Checklist{\n\titems = new Set<ChecklistItem>()\n\tnumTotalItems:number = 0\n\tonItemCheck:(note?:string)=>void\n\tonComplete:()=>void\n\n\tconstructor(\n\t\t{\n\t\t\tonItemCheck = (note?:string)=>{},\n\t\t\tonComplete = ()=>{}\n\t\t}:{\n\t\t\tonItemCheck?:(note?:string)=>void,\n\t\t\tonComplete?:()=>void\n\t\t} = {}\n\t){\n\t\tthis.onItemCheck = onItemCheck\n\t\tthis.onComplete = onComplete\n\t}\n\n\tnewItem({onCheck = ()=>{}, note}:{onCheck?:()=>void, note?:string} = {}){\n\t\tthis.numTotalItems++\n\t\tlet checklist = this\n\n\t\tlet thisItem = new ChecklistItem(()=>{\n\t\t\tonCheck()\n\t\t\t\n\t\t\tchecklist.onItemCheck(thisItem.note)\n\t\t\tchecklist.items.delete(thisItem)\n\t\t\t\n\t\t\tif(checklist.items.size == 0){\n\t\t\t\tchecklist.onComplete()\n\t\t\t}\n\t\t}, note)\n\n\t\tthis.items.add(thisItem)\n        return thisItem\n\t}\n\n\tgetProgress(){\n\t\treturn 1.0 - this.items.size / this.numTotalItems\n\t}\n\n\treset(){\n\t\tthis.items.clear()\n\t\tthis.numTotalItems = 0\n\t}\n}\n","import {Shape, ShapeConfig} from \"domain/physics/shape\"\nimport * as p2 from \"p2\"\nimport { vec2 } from \"gl-matrix\"\nimport {Kind, Registry} from \"utils\"\n\nexport abstract class P2Shape<K extends Kind> implements Shape<K>{\n\tkind: K\n\t\n\tabstract p2shape: p2.Shape\n\t\n\tupdateP2(){\n\t\tthis.p2shape.updateBoundingRadius()\n\t\tif(this.p2shape.body !== null){ // when called before the shape was added to the body\n\t\t\tthis.p2shape.body.aabbNeedsUpdate = true\n\t\t\tthis.p2shape.body.updateBoundingRadius()\n\t\t}\n\t}\n\n\tset offset(p: vec2){\n\t\tvec2.copy(this.p2shape.position, p)\n\t}\n\tget offset(){\n\t\treturn vec2.clone(this.p2shape.position)\n\t}\n\n\tset offsetAngle(phi: number){\n\t\tthis.p2shape.angle = phi\n\t}\n\tget offsetAngle(){\n\t\treturn this.p2shape.angle\n\t}\n\n\tabstract boundingRadius: number\n}\n\n\n// factory for distinct shape types\n// where shape modules can register their individual constructors\ntype P2ShapeConstructor<K extends Kind> = new(config: ShapeConfig<K>) => P2Shape<K>\n\nclass P2ShapeFactory{\n\n    private constructors: Registry<P2ShapeConstructor<any>> = {}\n\n    register(kind: string, factory: P2ShapeConstructor<any>): void {\n        this.constructors[kind] = factory\n    }\n\n    createShape<K extends Kind>(config: ShapeConfig<K>): P2Shape<K> {\n\t\tif(!this.constructors.hasOwnProperty(config.kind)){\n\t\t\tthrow new Error(\"P2ShapeFactory cannot create a \" + config.kind)\n\t\t}\n        return new this.constructors[config.kind](config)\n    }\n}\n\nexport const p2shapeFactory = new P2ShapeFactory()\n","import * as p2 from \"p2\"\nimport {vec2} from \"gl-matrix\"\nimport {P2Physics} from \"./p2physics\"\nimport {Shape, ShapeConfig} from \"domain/physics/shape\"\nimport {P2Shape, p2shapeFactory} from \"./p2shape\"\nimport {RigidBody, RigidBodyConfig} from \"domain/physics/rigidbody\"\n\nexport class P2RigidBody implements RigidBody{\n\tkind:\"rigidbody\"\n\tp2world:p2.World\n\tp2body:p2.Body\n\t//readonly shapes: Shape<any>[]\n\ttoBeDeleted: boolean = false\n\n\tconstructor(p2world:p2.World, config:RigidBodyConfig){\n\t\tthis.p2world = p2world\n\n\t\tthis.p2body = new p2.Body() // mass set to 1 so the body is considered DYNAMIC\n\n\t\tObject.assign(this, config)\n\n\t\tfor(let shapeCfg of config.shapes){\n\t\t\tlet shape = p2shapeFactory.createShape<any>(shapeCfg)\n\t\t\t//this.shapes.push(shape)\n\t\t\tthis.p2body.addShape(shape.p2shape)\n\t\t}\n\n\t\tthis.p2world.addBody(this.p2body)\n\t}\n\n\tset mass(m: number){\n\t\tif(m === Infinity){\n\t\t\tthis.p2body.type = p2.Body.STATIC\n\t\t}\n\t\telse{\n\t\t\tthis.p2body.type = p2.Body.DYNAMIC\n\t\t\tthis.p2body.mass = m\n\t\t}\n\t\tthis.p2body.updateMassProperties()\n\t}\n\tget mass(){\n\t\treturn this.p2body.type === p2.Body.STATIC? Infinity : this.p2body.mass\n\t}\n\n\tset position(p: vec2){\n\t\tvec2.copy(this.p2body.position, p)\n\t}\n\tget position(){\n\t\treturn vec2.clone(this.p2body.position)\n\t}\n\n\tset velocity(v: vec2){\n\t\tvec2.copy(this.p2body.velocity, v)\n\t}\n\tget velocity(){\n\t\treturn vec2.clone(this.p2body.velocity)\n\t}\n\n\tset damping(d: number){\n\t\tthis.p2body.damping = d\n\t}\n\tget damping(){\n\t\treturn this.p2body.damping\n\t}\n\n\n\tset angle(phi: number){\n\t\tthis.p2body.angle = phi\n\t}\n\tget angle(){\n\t\treturn this.p2body.angle\n\t}\n\n\tset angularVelocity(omega: number){\n\t\tthis.p2body.angularVelocity = omega\n\t}\n\tget angularVelocity(){\n\t\treturn this.p2body.angularVelocity\n\t}\n\n\tset angularDamping(d: number){\n\t\tthis.p2body.angularDamping = d\n\t}\n\tget angularDamping(){\n\t\treturn this.p2body.angularDamping\n\t}\n\n\n\tapplyForce(\n\t\tforce: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyForce(\n\t\t\t[force[0], force[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyLocalForce(\n\t\tforce: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyForceLocal(\n\t\t\t[force[0], force[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyImpulse(\n\t\timpulse: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyImpulse(\n\t\t\t[impulse[0], impulse[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyLocalImpulse(\n\t\timpulse: vec2,\n\t\tlocalPointOfApplication = vec2.fromValues(0, 0)\n\t){\n\t\tthis.p2body.applyImpulseLocal(\n\t\t\t[impulse[0], impulse[1]],\n\t\t\t[localPointOfApplication[0], localPointOfApplication[1]]\n\t\t)\n\t}\n\n\tapplyTorque(torque: number){\n\t\tthis.p2body.angularForce += torque\n\t}\n\n\tapplyAngularMomentum(angularMomentum: number){\n\t\tthis.p2body.angularVelocity += this.p2body.invInertia * angularMomentum\n\t}\n\n\t\n\tremove(){\n\t\tthis.p2world.removeBody(this.p2body)\n\t}\n}","\nimport * as p2 from \"p2\"\nimport {P2Shape, p2shapeFactory} from \"./p2shape\"\nimport {Circle, CircleConfig} from \"domain/physics/circle\"\n\nexport class P2Circle extends P2Shape<\"circle\"> implements Circle{\n\tkind:\"circle\"\n\tp2shape:p2.Circle\n\n\tconstructor(config: CircleConfig){\n\t\tsuper()\n\t\tthis.p2shape = new p2.Circle()\n\t\tObject.assign(this, config)\n\t}\n\n\tset radius(r: number){\n\t\tthis.p2shape.radius = r\n\t\tthis.updateP2()\n\t}\n\tget radius():number{\n\t\treturn this.p2shape.radius\n\t}\n\n\tset boundingRadius(r: number){\n\t\tthis.p2shape.radius = r\n\t\tthis.updateP2()\n\t}\n\tget boundingRadius(){\n\t\treturn this.p2shape.boundingRadius\n\t}\n}\n\np2shapeFactory.register(\"circle\", P2Circle)\n\n\n","\nimport * as p2 from \"p2\"\nimport {P2Shape, p2shapeFactory} from \"./p2shape\"\nimport {Triangle, TriangleConfig, TriangleCorners} from \"domain/physics/triangle\"\n\nexport class P2Triangle extends P2Shape<\"triangle\"> implements Triangle{\n\tkind:\"triangle\"\n\tp2shape:p2.Convex\n\n\tconstructor(config: TriangleConfig){\n\t\tsuper()\n\t\t\n\t\tlet area = p2.Convex.triangleArea(\n\t\t\tconfig.corners[0] as [number, number],\n\t\t\tconfig.corners[1] as [number, number],\n\t\t\tconfig.corners[2] as [number, number]\n\t\t)\n\n\t\tif(Math.abs(area) < 1e-100){\n\t\t\tthis.p2shape = new p2.Convex()\n\t\t\tconsole.error(\"degenerate triangle\")\n\t\t}\n\t\telse if(area > 0){\n\t\t\tthis.p2shape = new p2.Convex({\n\t\t\t\tvertices:config.corners\n\t\t\t})\n\t\t}\n\t\telse{\n\t\t\tthis.p2shape = new p2.Convex({\n\t\t\t\tvertices:[\n\t\t\t\t\tconfig.corners[0],\n\t\t\t\t\tconfig.corners[2],\n\t\t\t\t\tconfig.corners[1]\n\t\t\t\t]\n\t\t\t})\n\t\t}\n\n\t\tObject.assign(this, config)\n\t}\n\n\tset corners(c: TriangleCorners){\n\t\tthis.p2shape.vertices = c as [number, number][]\n\t\tthis.updateP2()\n\t}\n\tget corners():TriangleCorners{\n\t\treturn this.p2shape.vertices as TriangleCorners\n\t}\n\n\tset boundingRadius(r: number){\n\t\tif(r <= 0){\n\t\t\tconsole.error(\"triangle bounding radius must be >0\")\n\t\t\treturn\n\t\t}\n\t\tlet factor = r / this.p2shape.boundingRadius\n\t\tfor(let v of this.p2shape.vertices){\n\t\t\tv[0] *= factor\n\t\t\tv[1] *= factor\n\t\t}\n\t\tthis.updateP2()\n\t}\n\tget boundingRadius(){\n\t\treturn this.p2shape.boundingRadius\n\t}\n}\n\np2shapeFactory.register(\"triangle\", P2Triangle)\n\n\n","\nimport {ShapeConfig, Shape} from \"./shape\"\nimport {copyIfPresent} from \"utils\"\n\nexport interface Circle extends Shape<\"circle\">{\n\tkind: \"circle\"\n\tradius: number\n}\n\nexport class CircleConfig extends ShapeConfig<\"circle\">{\n\tkind: \"circle\" = \"circle\"\n\tradius = 1\n\t\n\tconstructor(config: Partial<CircleConfig> = {}){\n\t\tsuper(config)\n\t\tcopyIfPresent(this, config, [\"radius\"])\n\t}\n}","\nimport {vec2} from \"gl-matrix\"\nimport {Kind, copyIfPresent} from \"utils\"\n\n// parameters that are common to all shapes\n\nexport interface Shape<K extends Kind> {\n    kind: K\n\toffset: vec2\n\toffsetAngle: number\n\tboundingRadius: number\n}\n\nexport class ShapeConfig<K extends Kind>{\n\tkind: K\n\toffset = vec2.fromValues(0, 0)\n\toffsetAngle = 0\n\n\tconstructor(config:Partial<ShapeConfig<K>>){\n\t\tthis.kind = config.kind\n\t\tcopyIfPresent(this, config, [\"offset\", \"offsetAngle\"])\n\t}\n}","import {vec2} from \"gl-matrix\"\nimport {ShapeConfig, Shape} from \"./shape\"\nimport {copyIfPresent} from \"utils\"\n\nexport interface RigidBody{\n\tkind: \"rigidbody\"\n\n\t//readonly shapes: Shape<any>[]\n\n\tmass: number\n\n\tposition: vec2\n\tvelocity: vec2\n\tdamping: number\n\n\tangle: number\n\tangularVelocity: number\n\tangularDamping: number\n\n\tapplyForce(force:vec2, localPointOfApplication?:vec2):void\n\tapplyLocalForce(force:vec2, localPointOfApplication?:vec2):void\n\tapplyImpulse(impulse:vec2, localPointOfApplication?:vec2):void\n\tapplyLocalImpulse(impulse:vec2, localPointOfApplication?:vec2):void\n\tapplyTorque(torque:number):void\n\tapplyAngularMomentum(angularMomentum:number):void\n\n\tremove():void\n}\n\nexport class RigidBodyConfig{\n\tshapes: ShapeConfig<any>[]\n\t\n\tmass = 1\n\n\tposition = vec2.fromValues(0, 0)\n\tvelocity = vec2.fromValues(0, 0)\n\tdamping = 0.1\n\n\tangle = 0\n\tangularVelocity = 0\n\tangularDamping = 0.1\n\n\tconstructor(config:Partial<RigidBodyConfig>){\n\t\tcopyIfPresent(this, config, [\n\t\t\t\"shapes\", \"mass\", \"position\", \"velocity\", \"damping\",\n\t\t\t\"angle\", \"angularVelocity\", \"angularDamping\"\n\t\t])\n\t}\n}","import { vec3, mat3 } from \"gl-matrix\";\n\n/**\n * Wraps an angle in order to be in the limits of the wrapping point.\n * \n * @param angle Angle to be wrapped in rad\n * @param wrapAt Wrapping point. Defaults to Math.PI\n * \n * @returns the wrapped angle in the range between [-wrapAt, wrapAt)\n */\nexport function wrapAngle(angle: number, wrapAt = Math.PI): number {\n\tlet revs = (angle - wrapAt) / 2.0 / Math.PI;\n  return (revs - Math.floor(revs) - 1) * 2.0 * Math.PI + wrapAt\n}\n\nexport function mat3fromVectors(out:mat3, x:vec3, y:vec3, z:vec3){\n\t// note that matrices are stored column-wise\n\n\tout[0] = x[0]\n\tout[1] = x[1]\n\tout[2] = x[2]\n\n\tout[3] = y[0]\n\tout[4] = y[1]\n\tout[5] = y[2]\n\n\tout[6] = z[0]\n\tout[7] = z[1]\n\tout[8] = z[2]\n\n\treturn out\n}","\nlet functionCache:{[key:string]:Function} = {}\n\n// the call is synchronous (i.e. onLoaded is executed right away)\n// if the function script is already cached, otherwise it is asynchronous\nexport function executeFile(\n\turl:string,\n\targs:Object,\n\tonLoaded:(returned:any)=>void,\n\tonError?:(err:ErrorEvent)=>void\n){\n\tif(url in functionCache){\n\t\tlet returned = functionCache[url](args)\n\t\tonLoaded(returned)\n\t}\n\telse{\n\t\tvar request = new XMLHttpRequest()\n\t\t\n\t\trequest.addEventListener(\"load\", function() {\n\t\t\tlet fnBody = this.responseText\n\t\t\tlet fn = new Function(\"{\" + Object.keys(args).join() + \"}\", fnBody)\n\t\t\tfunctionCache[url] = fn\n\t\t\tlet returned = fn(args)\n\t\t\tonLoaded(returned)\n\t\t})\n\t\t\n\t\tif(onError !== undefined){\n\t\t\trequest.addEventListener(\"error\", onError)\n\t\t\trequest.addEventListener(\"abort\", onError)\n\t\t}\n\n\t\trequest.open(\"GET\", url)\n\t\trequest.send()\n\t}\n}","\nimport {Graphics} from \"domain/graphics/graphics\"\nimport {Physics} from \"domain/physics/physics\"\nimport {executeFile} from \"utilities/executefile\"\n\nexport interface Arena{\n\tupdate:()=>{}\n}\n\nexport function loadArena(\n\turl:string,\n\tgraphics:Graphics,\n\tphysics:Physics,\n\tonLoaded:(arena:Arena)=>void\n){\n\texecuteFile(url, {graphics, physics}, onLoaded)\n}\n","import { Graphics } from \"domain/graphics/graphics\";\nimport { vec3, mat3, mat4, vec2, quat} from \"gl-matrix\";\nimport { Camera, CameraConfig } from \"domain/graphics/camera\";\nimport { mat3fromVectors } from \"utilities/math_utils\";\nimport { RigidBody } from \"./physics/rigidbody\";\nimport { copyIfPresent } from \"utils\";\n\nexport class ActionCamConfig extends CameraConfig{\n\t/** camera will not move closer to scene than this */\n\tdMin = 5\n\n\t/** camera will make the image higher and wider than necessary by this factor */\n\tmarginFactor = 1.33\n\n\t/** time constants for camera motion smoothing */\n\ttau = {\n\t\txy:1.0,\n\t\tup:0.3,\n\t\tdown:2.0,\n\t\tfocus:0.3\n\t}\n\n\t/** time constant for camera focus point smoothing */\n\ttauFocus = 0.1\n\n\tconstructor(config:Partial<ActionCamConfig> = {}){\n\t\tsuper(config)\n\t\tcopyIfPresent(this, config, [\"dMin\", \"tau\", \"tauFocus\", \"marginFactor\"])\n\t}\t\n}\n\ninterface Lock{\n\tbody:RigidBody\n\tradius:number\n}\n\n/*\nThe ActionCam tracks objects in the xy-plane from z\n(so -z is the viewing direction).\n*/\n\nexport class ActionCam{\n\n\tcamera:Camera\n\n\tdMin:number\n\ttau:{\n\t\txy:number,\n\t\tup:number,\n\t\tdown:number,\n\t\tfocus:number\n\t}\n\n\tdistanceOverWidth = 1\n\tdistanceOverHeight = 1\n\n\tcurrentPosition:vec3\n\tcurrentFocus:vec3\n\n\tlocks:Set<Lock> = new Set()\n\n\tconstructor(\n\t\tgraphics:Graphics,\n\t\tconfig:ActionCamConfig\n\t){\n\t\tthis.camera = graphics.camera.create(config)\n\n\t\tthis.distanceOverHeight =\n\t\t\t0.5 / Math.tan(0.5 * config.verticalAngleOfViewInDeg/180*Math.PI) * config.marginFactor\n\n\t\tlet cam = this\n\t\tthis.camera.onAspectChange = function(aspect:number){\n\t\t\tcam.distanceOverWidth = cam.distanceOverHeight / aspect\n\t\t}\n\n\t\tthis.dMin = config.dMin\n\t\tthis.tau = config.tau\n\n\t\tthis.currentPosition = config.position\n\t\tthis.currentFocus = vec3.fromValues(0, 0, 0)\n\t}\n\n\tfollow(body:RigidBody, radius:number){\n\t\tthis.locks.add({body, radius})\n\t}\n\n\tunfollow(body:RigidBody){\n\t\tfor(let lock of this.locks){\n\t\t\tif(lock.body === body){\n\t\t\t\tthis.locks.delete(lock)\n\t\t\t}\n\t\t}\n\t}\n\n\tupdate(dt:number){\n\t\tlet xMin = 1e12\n\t\tlet xMax = -1e12\n\t\tlet yMin = 1e12\n\t\tlet yMax = -1e12\n\t\tfor(let lock of this.locks){\n\t\t\txMin = Math.min(xMin, lock.body.position[0] - lock.radius)\n\t\t\txMax = Math.max(xMax, lock.body.position[0] + lock.radius)\n\t\t\tyMin = Math.min(yMin, lock.body.position[1] - lock.radius)\n\t\t\tyMax = Math.max(yMax, lock.body.position[1] + lock.radius)\n\t\t}\n\n\t\tlet target = vec3.fromValues(\n\t\t\t(xMin + xMax) / 2,\n\t\t\t(yMin + yMax) / 2,\n\t\t\tMath.max(\n\t\t\t\t(xMax - xMin) * this.distanceOverWidth,\n\t\t\t\t(yMax - yMin) * this.distanceOverHeight,\n\t\t\t\tthis.dMin\n\t\t\t)\n\t\t)\n\n\t\t\n\n\t\tlet kxy = Math.exp(-dt/this.tau.xy)\n\t\tlet tauz = this.currentPosition[2] < target[2]? this.tau.up : this.tau.down\n\t\tlet kz = Math.exp(-dt/tauz)\n\t\tlet kxyz = vec3.fromValues(kxy, kxy, kz)\n\n\t\tlet kfocus = Math.exp(-dt/this.tau.focus)\n\t\t\n\t\tfor(let dim=0; dim<3; dim++){\n\t\t\tthis.currentPosition[dim] =\n\t\t\t\t(1-kxyz[dim]) * target[dim] +\n\t\t\t\tkxyz[dim] * this.currentPosition[dim]\n\t\t}\n\t\t\n\t\tthis.currentFocus[0] = (1-kfocus) * this.currentFocus[0] + kfocus * target[0]\n\t\tthis.currentFocus[1] = (1-kfocus) * this.currentFocus[1] + kfocus * target[1]\n\n\n\t\tlet z = vec3.subtract(vec3.create(), this.currentPosition, this.currentFocus)\n\t\tvec3.normalize(z, z)\n\t\tlet y = vec3.fromValues(0, 1, 0)\n\t\tlet x = vec3.cross(vec3.create(), y, z)\n\t\tvec3.normalize(x, x)\n\t\tvec3.cross(y, z, x)\n\n\t\tlet ori = mat3fromVectors(mat3.create(), x, y, z)\n\t\t\n\t\tthis.camera.position = this.currentPosition\n\t\tthis.camera.orientation = quat.fromMat3(quat.create(), ori)\n\t}\n\n}","\nimport {bridge} from \"worker/worker\"\nimport {Graphics} from \"domain/graphics/graphics\"\nimport {createGraphicsClient} from \"adapters/graphics/graphicsbridge/graphicsclient\"\nimport {ModelMeshConfig, Mesh} from \"domain/graphics/mesh\"\nimport {Checklist} from \"./checklist\"\nimport {P2Physics} from \"adapters/physics/p2/p2physics\"\nimport {CircleConfig} from \"domain/physics/circle\"\nimport {vec2, quat} from \"gl-matrix\"\nimport {RigidBody, RigidBodyConfig} from \"domain/physics/rigidbody\"\nimport {Controller} from \"domain/controller/controller\"\nimport {wrapAngle} from \"utilities/math_utils\"\nimport {Physics} from \"domain/physics/physics\"\nimport {Model} from \"domain/graphics/model\"\nimport {Arena, loadArena} from \"arena/arena\"\nimport { ActionCam, ActionCamConfig } from \"domain/actioncam\"\nimport { TriangleConfig } from \"domain/physics/triangle\"\n\nlet dt = 1/100\n\nlet graphics:Graphics\nlet physics:Physics = new P2Physics() as Physics\nlet gliderAsset:Model\nlet arena:Arena\nlet actionCam:ActionCam\n\nlet checklist = new Checklist({onComplete:start})\n\nlet initGraphicsItem = checklist.newItem()\nlet loadGliderItem = checklist.newItem()\nlet loadArenaItem = checklist.newItem()\n\nsetTimeout(function(){\n\t// when we are not using a worker, we have to be sure that the graphics server\n\t// is registered at the bridge dummy before the client requests it\n\t// so we use a timeout here\n\tgraphics = createGraphicsClient()\n\tgraphics.control.setSceneOrientation([-Math.SQRT1_2, 0, 0, Math.SQRT1_2])\n\tinitGraphicsItem.check()\n\n\tactionCam = new ActionCam(graphics, new ActionCamConfig())\n\tactionCam.camera.activate()\n\n\tgliderAsset = graphics.model.load(\n\t\t\"glider/glider.gltf\",\n\t\tloadGliderItem.check\n\t)\n\n\tloadArena(\n\t\t\"arenas/testarena2/script.js\",\n\t\tgraphics,\n\t\tphysics,\n\t\tfunction(loaded:Arena){\n\t\t\tarena = loaded\n\t\t\tloadArenaItem.check()\n\t\t}\n\t)\n\n\tbridge.sendAll()\n}, 0)\n\n\n\nclass Glider{\n\tbody:RigidBody\n\tmesh:Mesh\n\tcontroller:Controller\n\n\tthrust:number = 0\n\n\tconstructor(bodyCfg:RigidBodyConfig, modelCfg:ModelMeshConfig, controller:Controller){\n\t\tthis.body = physics.addRigidBody(bodyCfg)\n\t\tthis.mesh = graphics.mesh.createFromModel(modelCfg)\n\t\tthis.controller = controller\n\t}\n\n\tupdate(){\n\t\tthis.thrust = this.controller.getThrust() * 10;\n\t\tthis.body.applyLocalForce(vec2.fromValues(this.thrust, 0))\n\n\t\tconst turnRate = this.controller.getTurnRate()\n\t\tif(turnRate != undefined) {\n\t\t\tthis.body.applyTorque(turnRate * 10)\n\t\t}\n\t\tconst direction = this.controller.getAbsoluteDirection()\n\t\tif(direction != undefined) {\n\t\t\tthis.turnToDirection(direction)\n\t\t}\n\t\t\n\t\tthis.mesh.position = [\n\t\t\tthis.body.position[0], this.body.position[1], 0.1]\n\t\tthis.mesh.orientation = quat.fromEuler(\n\t\t\t[0,0,0,0], 0, 0, this.body.angle /Math.PI * 180)\n\t}\n\tturnToDirection(direction: number) {\n\t\tlet wrappedAngle = wrapAngle(this.body.angle);\t\t\n\t\tlet directionDiff = wrapAngle(wrappedAngle - direction);\n\t\tlet threshold = 0.0001;\n\t\tif(Math.abs(directionDiff) > threshold) {\n\t\t\tlet sign = Math.sign(directionDiff)\n\t\t\tthis.body.applyAngularMomentum(-sign * 0.3)\n\t\t}\n\t}\n}\n\nfunction start(){\n\tconst gliderBodyCfg = new RigidBodyConfig({\n\t\tshapes:[new CircleConfig({radius:1})],\n\t\tdamping: 0.7,\n\t\tangularDamping: 0.99\n\t})\n\n\tconst gliderModelCfg:ModelMeshConfig = new ModelMeshConfig({\n\t\tasset:gliderAsset\n\t})\n\n\tconst controller:Controller = {\n\t\tgetAbsoluteDirection(){return undefined},\n\t\tgetThrust(){return 1},\n\t\tgetTurnRate(){return 0.5},\n\t\tisShooting(){return false},\n\t\tsetPauseCallback(fn){}\n\t}\n\tlet gliders:Glider[] = []\n\tfor(let i=0; i<10; i++){\n\t\tlet glider = new Glider(gliderBodyCfg, gliderModelCfg, controller)\n\t\tglider.body.position = vec2.fromValues(Math.random()*20-10, Math.random()*20-10)\n\t\tglider.body.angle = Math.random()*1000\n\t\tgliders.push(glider)\n\t\tactionCam.follow(glider.body, 1.5)\n\t}\n\n\tsetInterval(()=>{\n\t\tfor(let glider of gliders){\n\t\t\tglider.update()\n\t\t}\n\t\tphysics.step(dt)\n\t\tactionCam.update(dt)\n\t\tbridge.sendAll()\n\t}, 1000*dt)\n}\n","\nimport {RigidBodyConfig, RigidBody} from \"domain/physics/rigidbody\"\nimport {Physics} from \"domain/physics/physics\"\nimport {P2RigidBody} from \"./p2rigidbody\"\nimport * as p2 from \"p2\"\nimport \"./p2factorylist\"\n\nexport class P2Physics implements Physics{\n\n\tp2world:p2.World\n\n\tconstructor(){\n\t\tthis.p2world = new p2.World({gravity:[0, 0]})\n\t}\n\n\taddRigidBody(config: RigidBodyConfig):RigidBody{\n\t\tconst body = new P2RigidBody(this.p2world, config)\n\t\treturn body\n\t}\n\n\tstep(dt:number){\n\t\tthis.p2world.step(dt)\n\t}\n\n}\n\n","\nimport {Graphics} from \"domain/graphics/graphics\"\nimport {bridge} from \"worker/worker\"\n\nexport function createGraphicsClient(){\n\treturn bridge.createProxy(\"graphicsServer\") as Graphics\n}","\n/*\nParadigms:\n\n- the bridge is intended to change and call objects on the remote side,\n  you never get any values back, only handles to remote objects\n- if you need to get values back, send callbacks and call them there\n- don't use new dynamically generated callbacks all the time as they are\n  going to persist in the registry and won't get garbage collected\n*/\n\nconst DEBUG = false\nconst DBG_ME = window.document === undefined? \"worker\" : \"window\"\nconst DBG_OTHER = window.document === undefined? \"window\" : \"worker\"\n\nimport {Kind} from \"utils\"\ntype Pod = any\n\ntype Key = string // for explicitly registered objects\ntype Index = number // for automatically registered objects\ntype ID = Key | Index // for all objects\ntype Path = ID[] // for relating a proxy via its parent (or grandparent etc.)\ntype LazyPath = ()=>Path // for lazy evaluation\ntype Reference = ID | LazyPath\n\nfunction makeLazyPath(parent: Reference, prop: string){\n\t// a lazy path is a function that returns a path when it's called\n\treturn function(){\n\t\tif(typeof(parent) === \"function\"){ // the parent is itself a lazy path\n\t\t\treturn [...parent(), prop]\n\t\t}\n\t\telse{ // the parent is already a directly linked reference\n\t\t\treturn [parent, prop]\n\t\t}\n\t}\n}\n\ntype TaggedCallback = Function & {__cb__?:number}\n\n// generic message\ninterface Msg<K extends Kind>{\n\tkind:K\n}\n\n/**\n * hand shake\n */\ninterface ReadyMsg extends Msg<\"ready\">{}\n\n/**\n * {kind:\"link\", path:[\"myObj\", \"a\", \"b\", \"c\"]} means \\\n * registry[indexCounter++] = registry[\"myObj\"].a.b.c \\\n * so a proxy that was before only related to its remote target through its parent\n * now gets its own entry in the remote registry\n */\ninterface LinkMsg extends Msg<\"link\">{\n\tpath:Path\n}\n\n/**\n * registry[id].prop = val \\\n * if the value contains any callbacks, they will be registered\n */\ninterface SetMsg extends Msg<\"set\">{\n\tid:ID\n\tprop:ID\n\tval:any\n}\n\n/**\n * registry[indexCounter++] = registry[id]([...args])\n * if the args contain any callbacks, they will be registered\n */\ninterface CallMsg extends Msg<\"call\">{\n\tid:ID\n\targs:any[]\n}\n\n/**\n * registry[indexCounter++] = new registry[id]([...args])\n */\ninterface NewMsg extends Msg<\"new\">{\n\tid:ID\n\targs:any[]\n}\n\n\n/**\n * registry[id].dispose() // if defined\n * delete registry[id]\n */\ninterface DisposeMsg extends Msg<\"del\">{\n\tid:ID\n}\n\n\ntype BridgeMsg = ReadyMsg | LinkMsg | SetMsg | CallMsg | NewMsg | DisposeMsg\n\nexport class WorkerBridge{\n\t\n\tprivate worker:Worker = undefined\n\tprivate connected = false\n\tprivate sendWhenConnected = false\n\n\t// locally stored objects\n\t// (typescript complains about key:Key and about key:(string | number) )\n\tprivate objectRegistry:{\n\t\t[key: string]: any,\n\t\t[index: number]: any\n\t} = {}\n\t\n\t// counter for locally stored anonymous objects\n\t// whose creation was caused by this side, counts positive\n\tprivate localOwnIndexCounter = 1\n\t// counter for locally stored anonymous objects\n\t// whose creation was caused by the other side, counts negative\n\tprivate localOtherIndexCounter = -1\n\n\t// counter for remotely stored anonymous objects\n\t// whose creation was caused by the remote side itself, counts positive\n\tprivate remoteOwnIndexCounter = 1\n\t// counter for remotely stored anonymous objects\n\t// whose creation was caused by this side, counts negative\n\tprivate remoteOtherIndexCounter = -1\n\n\t/** leave worker empty when calling from inside a worker\n\t * and building a bridge to the window */\n\tconstructor(workerFile?:string){\n\t\tif(workerFile !== undefined){\n\t\t\tthis.worker = new Worker(workerFile)\n\t\t\tthis.worker.onmessage = this.receive.bind(this)\n\t\t}\n\t\telse{\n\t\t\tonmessage = this.receive.bind(this)\n\t\t\tthis.enqueueMsg({kind:\"ready\"})\n\t\t\tthis.sendAll()\n\t\t\tthis.connected = true\n\t\t}\n\t}\n\n\tprivate msgQueue: BridgeMsg[] = []\n\tprivate enqueueMsg(msg:BridgeMsg){\n\t\tthis.msgQueue.push(msg)\n\t}\n\n\tsendAll(){\n\t\tif(this.msgQueue.length == 0){\n\t\t\treturn\n\t\t}\n\n\t\tif(DEBUG){\n\t\t\tconsole.log(DBG_ME, \"->\", DBG_OTHER, \":\")\n\t\t\tfor(let msg of this.msgQueue){\n\t\t\t\tconsole.log(\"-> \" + JSON.stringify(msg))\n\t\t\t}\n\t\t}\n\n\t\tif(this.worker !== undefined){\n\t\t\tif(this.connected){\n\t\t\t\tthis.worker.postMessage(this.msgQueue)\n\t\t\t\tthis.msgQueue = []\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.sendWhenConnected = true\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\t// TypeScript does not know we mean postMessage from inside a worker\n\t\t\t//@ts-ignore\n\t\t\tpostMessage(this.msgQueue)\n\t\t\tthis.msgQueue = []\n\t\t}\n\t}\n\n\tprivate handleReady(){\n\t\tthis.connected = true\n\t\tif(this.sendWhenConnected){\n\t\t\tthis.sendAll()\n\t\t}\n\t}\n\n\tprivate handleLinkage(msg: LinkMsg){\n\t\tlet obj:any = this.objectRegistry\n\t\tfor(let field of (msg as LinkMsg).path){\n\t\t\tlet child = obj[field]\n\t\t\tif(typeof(child) === \"function\"){\n\t\t\t\tchild = child.bind(obj) // make sure we keep \"this\"\n\t\t\t}\n\t\t\tobj = child\n\t\t}\n\t\tif(typeof(obj) !== \"object\" && typeof(obj) !== \"function\"){\n\t\t\tthrow new Error(\"tried to link a field which is not an object or a method: \" + msg.path)\n\t\t}\n\t\tif(DEBUG){\n\t\t\tconsole.log(DBG_ME, \"[\", this.localOtherIndexCounter, \"] =\")\n\t\t\tconsole.log(obj)\n\t\t}\n\t\tthis.objectRegistry[this.localOtherIndexCounter--] = obj\n\t}\n\n\tprivate handleCall(msg: CallMsg){\n\t\tlet result = this.objectRegistry[msg.id](\n\t\t\t...this.resolveReferences(msg.args)\n\t\t)\n\t\tif(\n\t\t\ttypeof(result) === \"object\" ||\n\t\t\ttypeof(result) === \"function\"\n\t\t){\n\t\t\tif(DEBUG){\n\t\t\t\tconsole.log(DBG_ME, \"[\", this.localOtherIndexCounter, \"] is result\", result)\n\t\t\t}\n\t\t\tthis.objectRegistry[this.localOtherIndexCounter--] = result\n\t\t}\n\t\telse{\n\t\t\tif(result !== undefined){\n\t\t\t\tconsole.warn(\"result of remotely called function will be ignored\")\n\t\t\t}\n\t\t\t// the remote side will inc its counter so we also have to\n\t\t\tif(DEBUG){\n\t\t\t\tconsole.log(\n\t\t\t\t\tDBG_ME, \"discards result\", result,\n\t\t\t\t\t\"and skips index\", this.localOtherIndexCounter\n\t\t\t\t)\n\t\t\t}\n\t\t\tthis.localOtherIndexCounter--\n\t\t}\n\t}\n\n\tprivate handleNew(msg: NewMsg){\n\t\tlet result = new this.objectRegistry[msg.id](\n\t\t\t...this.resolveReferences(msg.args)\n\t\t)\n\t\tif(DEBUG){\n\t\t\tconsole.log(DBG_ME, \"[\", this.localOtherIndexCounter, \"] is the new\", result)\n\t\t}\n\t\tthis.objectRegistry[this.localOtherIndexCounter--] = result\n\t}\n\n\tprivate handlePropertySet(msg: SetMsg){\n\t\tthis.objectRegistry[msg.id][msg.prop] =\n\t\t\tthis.resolveReferences(msg.val)\n\t}\n\n\tprivate handleDispose(msg: DisposeMsg){\n\t\tif(this.objectRegistry[msg.id].dispose !== undefined){\n\t\t\tthis.objectRegistry[msg.id].dispose()\n\t\t}\n\t\tdelete this.objectRegistry[msg.id]\n\t}\n\n\tprivate receive(event:MessageEvent){\n\t\tfor(let i in event.data){\n\t\t\tlet msg = event.data[i] as BridgeMsg\n\t\t\tif(DEBUG){\n\t\t\t\tconsole.log(DBG_ME, \"handles\")\n\t\t\t\tconsole.log(msg)\n\t\t\t}\n\t\t\tswitch(msg.kind){\n\t\t\t\tcase \"ready\":\n\t\t\t\t\tthis.handleReady()\n\t\t\t\t\tbreak\n\t\t\t\tcase \"link\":\n\t\t\t\t\tthis.handleLinkage(msg)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"call\":\n\t\t\t\t\tthis.handleCall(msg)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"new\":\n\t\t\t\t\tthis.handleNew(msg)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"set\":\n\t\t\t\t\tthis.handlePropertySet(msg)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"del\":\n\t\t\t\t\tthis.handleDispose(msg)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\t/** register an object for being accessible by the remote side */\n\tregister(object:Object, name:string){\n\t\tif(DEBUG){\n\t\t\tconsole.log(DBG_ME, \"[\", name, \"] =\", object)\n\t\t}\n\t\tthis.objectRegistry[name] = object\n\t}\n\n\t/** create a proxy for an object on the remote side */\n\tcreateProxy(remoteKey: Key){\n\t\t// this function is an interface to the outside, it only allows reference\n\t\t// to targets that were explicitly registered on the remote side\n\t\tif(!isNaN(remoteKey as any)){\n\t\t\tthrow new Error(\"numeric indices are reserved for anonymous objects\")\n\t\t}\n\t\treturn this._createProxy(remoteKey)\n\t}\n\n\t// more general proxy creation, also for anonymous objects and child objects\n\tprivate _createProxy(ref: Reference):any{\n\t\t// ref defines how this proxy relates to its target on the other side\n\t\t// - ID as Key means, the proxied object was explicitly registered\n\t\t//   on the remote side with a name\n\t\t// - ID as Index means, the proxied object is the result of a get\n\t\t//   or a call and it has no name but an index\n\t\t// - LazyPath means that this proxy relates to its target by being a field\n\t\t//   of its parent proxy\n\n\t\tif(DEBUG){\n\t\t\tconsole.log(DBG_ME, \"creates proxy to\", \n\t\t\t\tJSON.stringify((typeof(ref) === \"function\")? ref() : ref))\n\t\t}\n\n\t\t// keep track of all the members that were get-ed\n\t\tlet children:{[key: string]:any}={}\n\t\n\t\tlet bridge = this\n\n\t\t// If not yet done, directly link this proxy\n\t\t// to the corresponding object on the remote side.\n\t\t// It gets an index entry in the remote registry.\n\t\tfunction resolvePath():ID {\n\t\t\tif(typeof(ref) === \"function\"){\n\t\t\t\tif(DEBUG){\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\tDBG_ME, \"requests\",\n\t\t\t\t\t\tDBG_OTHER, \"[\", bridge.remoteOtherIndexCounter, \"] =\", JSON.stringify(ref())\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tbridge.enqueueMsg({kind:\"link\", path:ref()})\n\t\t\t\tref = bridge.remoteOtherIndexCounter--\n\t\t\t}\n\t\t\treturn ref\n\t\t}\n\n\t\t// this will be a special member of the proxy that also\n\t\t// deletes the registry entry on the remote side and\n\t\t// sets the reference of this proxy to undefined\n\t\t// so the GC can do its job\n\t\tfunction dispose(){\n\t\t\tbridge.enqueueMsg({\n\t\t\t\tkind:\"del\",\n\t\t\t\tid:resolvePath()\n\t\t\t})\n\t\t\tref = undefined // ensure this proxy is not used further\n\t\t}\n\n\t\treturn new Proxy(Object, {\n\n\t\t\tset(target:any, prop:string, val:any){\n\t\t\t\tbridge.enqueueMsg({\n\t\t\t\t\tkind:\"set\",\n\t\t\t\t\tid:resolvePath(),\n\t\t\t\t\tprop, val:bridge.referencifyObject(val)\n\t\t\t\t})\n\t\t\t\treturn true\n\t\t\t},\n\n\t\t\tget(target:any, prop:string, receiver:any){\n\t\t\t\tif(prop === \"__ref__\"){\n\t\t\t\t\treturn resolvePath()\n\t\t\t\t}\n\t\t\t\tif(prop === \"dispose\"){\n\t\t\t\t\treturn dispose\n\t\t\t\t}\n\t\t\t\tif(!(prop in children)){\n\t\t\t\t\tchildren[prop] = bridge._createProxy(makeLazyPath(ref, prop))\n\t\t\t\t}\n\t\t\t\treturn children[prop]\n\t\t\t},\n\n\t\t\tapply(target:any, thisArg:any, args:any[]){\n\t\t\t\tbridge.enqueueMsg({\n\t\t\t\t\tkind:\"call\",\n\t\t\t\t\tid:resolvePath(),\n\t\t\t\t\targs:bridge.referencifyObject(args)\n\t\t\t\t})\n\t\t\t\tif(DEBUG){\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\tDBG_ME, \"calls\", DBG_OTHER, \"[\", resolvePath(), \"]\",\n\t\t\t\t\t\t\", store result in\", DBG_OTHER, \"[\", bridge.remoteOtherIndexCounter, \"]\"\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\treturn bridge._createProxy(bridge.remoteOtherIndexCounter--)\n\t\t\t},\n\n\t\t\tconstruct(target:any, args:any){\n\t\t\t\tbridge.enqueueMsg({\n\t\t\t\t\tkind:\"new\",\n\t\t\t\t\tid:resolvePath(),\n\t\t\t\t\targs:bridge.referencifyObject(args)\n\t\t\t\t})\n\t\t\t\tif(DEBUG){\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\tDBG_ME, \"calls new on\", DBG_OTHER, \"[\", resolvePath(), \"]\",\n\t\t\t\t\t\t\", store object in\", DBG_OTHER, \"[\", bridge.remoteOtherIndexCounter, \"]\"\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\treturn bridge._createProxy(bridge.remoteOtherIndexCounter--)\n\t\t\t}\n\t\t})\n\t}\n\n\tprivate referencifyFunction(fn:TaggedCallback){\n\t\tif(fn.__cb__ === undefined){\n\t\t\t// tag this function with a __cb__ index\n\t\t\t// so that it will not be indexed multiple times\n\t\t\t// TODO: if we allow the bridge to be reset, all tagged\n\t\t\t// functions must be untagged\n\t\t\tif(DEBUG){\n\t\t\t\tconsole.log(DBG_ME, \"[\", this.localOwnIndexCounter, \"] = callback\")\n\t\t\t\tconsole.log(fn)\n\t\t\t}\n\t\t\tlet newIndex = this.localOwnIndexCounter++\n\t\t\tfn.__cb__ = newIndex\n\t\t\tthis.objectRegistry[newIndex] = fn\n\t\t\treturn {__cb__:\"new\"}\n\t\t}\n\t\telse{\n\t\t\treturn {__cb__:fn.__cb__}\n\t\t}\n\t}\n\n\tprivate referencifyChildren(obj:any){\n\t\tlet copy:any = Array.isArray(obj)? [] : {}\n\n\t\tfor(let key in obj){\n\n\t\t\tlet wrapped = this.referencifyObject(obj[key])\n\n\t\t\tif(typeof(wrapped) === \"object\"){\n\t\t\t\tif(\"__cb__\" in wrapped){\n\t\t\t\t\t// this object or a sub object contains callbacks\n\t\t\t\t\tcopy[\"__cb__\"] = true\n\t\t\t\t}\n\t\t\t\tif(\"__ref__\" in wrapped){\n\t\t\t\t\t// this object or a sub object contains proxies\n\t\t\t\t\tcopy[\"__ref__\"] = true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcopy[key] = wrapped\n\t\t}\n\t\treturn copy\n\t}\n\n\t// scan an object for functions, store local references for them\n\t// and replace the functions with the references\n\t// this is for sending callbacks through the worker bridge\n\tprivate referencifyObject(value:any):Pod{\n\t\tswitch(typeof(value)){\n\t\t\tcase \"number\":\n\t\t\tcase \"string\":\n\t\t\tcase \"boolean\":\n\t\t\t\treturn value\n\t\t\tcase \"object\":\n\t\t\t\treturn this.referencifyChildren(value)\n\t\t\tcase \"function\":\n\t\t\t\tif(value.__ref__ === undefined){\n\t\t\t\t\treturn this.referencifyFunction(value)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// value is not a function but a proxy object\n\t\t\t\t\t// (all bridge proxies wrap functions so operator() works)\n\t\t\t\t\treturn {__ref__:value.__ref__}\n\t\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"unsendable type: \" + typeof(value))\n\t}\n\n\tprivate resolveReferenceMembers(obj:any){\n\t\tif(\"__cb__\" in obj){\n\t\t\tif(typeof(obj[\"__cb__\"]) === \"number\"){\n\t\t\t\t// reference to a callback that was already registered before\n\t\t\t\t// return another proxy to it\n\t\t\t\t// TODO: are we allowed to hand out multiple proxies to the same object?\n\t\t\t\t// what if only one of them gets disposed?\n\t\t\t\treturn this._createProxy(obj[\"__cb__\"])\n\t\t\t}\n\t\t\telse if(obj[\"__cb__\"] === \"new\"){\n\t\t\t\tif(DEBUG){\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\tDBG_ME, \"expects that\",\n\t\t\t\t\t\tDBG_OTHER, \"[\", this.remoteOwnIndexCounter, \"] is a callback\"\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t// return a new proxy to a newly registered callback\n\t\t\t\treturn this._createProxy(this.remoteOwnIndexCounter++)\n\t\t\t}\n\t\t\telse if(obj[\"__cb__\"] === true){\n\t\t\t\t// a child or a grandchild etc. is a callback\n\t\t\t\tfor(let field in obj){\n\t\t\t\t\tobj[field] = this.resolveReferences(obj[field])\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow new Error(\"unexpected callback reference type\")\n\t\t\t}\n\t\t}\n\t\telse if(\"__ref__\" in obj){\n\t\t\tif(\n\t\t\t\ttypeof(obj[\"__ref__\"]) === \"number\" ||\n\t\t\t\ttypeof(obj[\"__ref__\"]) === \"string\"\n\t\t\t){\n\t\t\t\t// the remote object is a proxy, return the registry entry\n\t\t\t\treturn this.objectRegistry[obj.__ref__]\n\t\t\t}\n\t\t\telse if(obj[\"__ref__\"] === true){\n\t\t\t\t// a child or a grandchild etc. is a proxy\n\t\t\t\tfor(let field in obj){\n\t\t\t\t\tobj[field] = this.resolveReferences(obj[field])\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow new Error(\"unexpected reference type\")\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\treturn obj\n\t\t}\n\t}\n\n\tprivate resolveReferences(value:Pod):any{\n\t\tswitch(typeof(value)){\n\t\t\tcase \"number\":\n\t\t\tcase \"string\":\n\t\t\tcase \"boolean\":\n\t\t\t\treturn value\n\t\t\tcase \"object\":\n\t\t\t\treturn this.resolveReferenceMembers(value)\n\t\t}\n\t}\n}\n","\n//*\n\nimport {WorkerBridge} from \"./workerbridge\"\n\nlet bridge:WorkerBridge\n\nif(window.document !== undefined){ // we are the main window and start the worker\n\tconsole.log(\"loading engine\")\n\tbridge = new WorkerBridge(\"./acechase_engine.js\")\n}\nelse{\n\t// we are inside the worker\n\tbridge = new WorkerBridge()\n}\n\nexport {bridge}\n\n/*/\n\nimport {WorkerBridgeDummy} from \"./workerbridgedummy\"\nimport \"engine_main\"\n\nexport let bridge = new WorkerBridgeDummy()\n\n/**/"],"sourceRoot":""}